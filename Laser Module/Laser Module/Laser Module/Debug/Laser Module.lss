
Laser Module.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000058b4  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000008  20000000  000058b4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000294  20000008  000058bc  00020008  2**2
                  ALLOC
  3 .stack        00002004  2000029c  00005b50  00020008  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  00020030  2**0
                  CONTENTS, READONLY
  6 .debug_info   000314f6  00000000  00000000  00020089  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000034aa  00000000  00000000  0005157f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00004674  00000000  00000000  00054a29  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000c70  00000000  00000000  0005909d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000b20  00000000  00000000  00059d0d  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00009cac  00000000  00000000  0005a82d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   00010108  00000000  00000000  000644d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000922d8  00000000  00000000  000745e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00002ae8  00000000  00000000  001068bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <_sfixed>:
       0:	200022a0 	.word	0x200022a0
       4:	00003d39 	.word	0x00003d39
       8:	00003e31 	.word	0x00003e31
       c:	00003e31 	.word	0x00003e31
	...
      2c:	00003e31 	.word	0x00003e31
	...
      38:	00003e31 	.word	0x00003e31
      3c:	00003e31 	.word	0x00003e31
      40:	00003e31 	.word	0x00003e31
      44:	00003e31 	.word	0x00003e31
      48:	00003e31 	.word	0x00003e31
      4c:	00000ae1 	.word	0x00000ae1
      50:	00000f7d 	.word	0x00000f7d
      54:	00003e31 	.word	0x00003e31
      58:	00003e31 	.word	0x00003e31
      5c:	00003e31 	.word	0x00003e31
      60:	00003e31 	.word	0x00003e31
      64:	00002ee9 	.word	0x00002ee9
      68:	00002f01 	.word	0x00002f01
      6c:	00002f19 	.word	0x00002f19
      70:	00002f31 	.word	0x00002f31
      74:	00002f49 	.word	0x00002f49
      78:	00002f61 	.word	0x00002f61
      7c:	00001bfd 	.word	0x00001bfd
      80:	00001c11 	.word	0x00001c11
      84:	00001c25 	.word	0x00001c25
      88:	00001cb5 	.word	0x00001cb5
      8c:	00001cc9 	.word	0x00001cc9
      90:	00001cdd 	.word	0x00001cdd
	...
      9c:	00003e31 	.word	0x00003e31
      a0:	00003e31 	.word	0x00003e31
      a4:	00003e31 	.word	0x00003e31
      a8:	00003e31 	.word	0x00003e31
      ac:	00003e31 	.word	0x00003e31
      b0:	00000000 	.word	0x00000000

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000008 	.word	0x20000008
      d4:	00000000 	.word	0x00000000
      d8:	000058b4 	.word	0x000058b4

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	2000000c 	.word	0x2000000c
     108:	000058b4 	.word	0x000058b4
     10c:	000058b4 	.word	0x000058b4
     110:	00000000 	.word	0x00000000

00000114 <system_gclk_chan_get_config_defaults>:
     114:	b580      	push	{r7, lr}
     116:	b082      	sub	sp, #8
     118:	af00      	add	r7, sp, #0
     11a:	6078      	str	r0, [r7, #4]
     11c:	687b      	ldr	r3, [r7, #4]
     11e:	2200      	movs	r2, #0
     120:	701a      	strb	r2, [r3, #0]
     122:	46c0      	nop			; (mov r8, r8)
     124:	46bd      	mov	sp, r7
     126:	b002      	add	sp, #8
     128:	bd80      	pop	{r7, pc}
     12a:	46c0      	nop			; (mov r8, r8)

0000012c <system_apb_clock_set_mask>:
     12c:	b580      	push	{r7, lr}
     12e:	b082      	sub	sp, #8
     130:	af00      	add	r7, sp, #0
     132:	0002      	movs	r2, r0
     134:	6039      	str	r1, [r7, #0]
     136:	1dfb      	adds	r3, r7, #7
     138:	701a      	strb	r2, [r3, #0]
     13a:	1dfb      	adds	r3, r7, #7
     13c:	781b      	ldrb	r3, [r3, #0]
     13e:	2b01      	cmp	r3, #1
     140:	d00a      	beq.n	158 <system_apb_clock_set_mask+0x2c>
     142:	2b02      	cmp	r3, #2
     144:	d00f      	beq.n	166 <system_apb_clock_set_mask+0x3a>
     146:	2b00      	cmp	r3, #0
     148:	d114      	bne.n	174 <system_apb_clock_set_mask+0x48>
     14a:	4b0e      	ldr	r3, [pc, #56]	; (184 <system_apb_clock_set_mask+0x58>)
     14c:	4a0d      	ldr	r2, [pc, #52]	; (184 <system_apb_clock_set_mask+0x58>)
     14e:	6991      	ldr	r1, [r2, #24]
     150:	683a      	ldr	r2, [r7, #0]
     152:	430a      	orrs	r2, r1
     154:	619a      	str	r2, [r3, #24]
     156:	e00f      	b.n	178 <system_apb_clock_set_mask+0x4c>
     158:	4b0a      	ldr	r3, [pc, #40]	; (184 <system_apb_clock_set_mask+0x58>)
     15a:	4a0a      	ldr	r2, [pc, #40]	; (184 <system_apb_clock_set_mask+0x58>)
     15c:	69d1      	ldr	r1, [r2, #28]
     15e:	683a      	ldr	r2, [r7, #0]
     160:	430a      	orrs	r2, r1
     162:	61da      	str	r2, [r3, #28]
     164:	e008      	b.n	178 <system_apb_clock_set_mask+0x4c>
     166:	4b07      	ldr	r3, [pc, #28]	; (184 <system_apb_clock_set_mask+0x58>)
     168:	4a06      	ldr	r2, [pc, #24]	; (184 <system_apb_clock_set_mask+0x58>)
     16a:	6a11      	ldr	r1, [r2, #32]
     16c:	683a      	ldr	r2, [r7, #0]
     16e:	430a      	orrs	r2, r1
     170:	621a      	str	r2, [r3, #32]
     172:	e001      	b.n	178 <system_apb_clock_set_mask+0x4c>
     174:	2317      	movs	r3, #23
     176:	e000      	b.n	17a <system_apb_clock_set_mask+0x4e>
     178:	2300      	movs	r3, #0
     17a:	0018      	movs	r0, r3
     17c:	46bd      	mov	sp, r7
     17e:	b002      	add	sp, #8
     180:	bd80      	pop	{r7, pc}
     182:	46c0      	nop			; (mov r8, r8)
     184:	40000400 	.word	0x40000400

00000188 <system_pinmux_get_config_defaults>:
     188:	b580      	push	{r7, lr}
     18a:	b082      	sub	sp, #8
     18c:	af00      	add	r7, sp, #0
     18e:	6078      	str	r0, [r7, #4]
     190:	687b      	ldr	r3, [r7, #4]
     192:	2280      	movs	r2, #128	; 0x80
     194:	701a      	strb	r2, [r3, #0]
     196:	687b      	ldr	r3, [r7, #4]
     198:	2200      	movs	r2, #0
     19a:	705a      	strb	r2, [r3, #1]
     19c:	687b      	ldr	r3, [r7, #4]
     19e:	2201      	movs	r2, #1
     1a0:	709a      	strb	r2, [r3, #2]
     1a2:	687b      	ldr	r3, [r7, #4]
     1a4:	2200      	movs	r2, #0
     1a6:	70da      	strb	r2, [r3, #3]
     1a8:	46c0      	nop			; (mov r8, r8)
     1aa:	46bd      	mov	sp, r7
     1ac:	b002      	add	sp, #8
     1ae:	bd80      	pop	{r7, pc}

000001b0 <system_interrupt_enable>:
     1b0:	b580      	push	{r7, lr}
     1b2:	b082      	sub	sp, #8
     1b4:	af00      	add	r7, sp, #0
     1b6:	0002      	movs	r2, r0
     1b8:	1dfb      	adds	r3, r7, #7
     1ba:	701a      	strb	r2, [r3, #0]
     1bc:	4b06      	ldr	r3, [pc, #24]	; (1d8 <system_interrupt_enable+0x28>)
     1be:	1dfa      	adds	r2, r7, #7
     1c0:	7812      	ldrb	r2, [r2, #0]
     1c2:	0011      	movs	r1, r2
     1c4:	221f      	movs	r2, #31
     1c6:	400a      	ands	r2, r1
     1c8:	2101      	movs	r1, #1
     1ca:	4091      	lsls	r1, r2
     1cc:	000a      	movs	r2, r1
     1ce:	601a      	str	r2, [r3, #0]
     1d0:	46c0      	nop			; (mov r8, r8)
     1d2:	46bd      	mov	sp, r7
     1d4:	b002      	add	sp, #8
     1d6:	bd80      	pop	{r7, pc}
     1d8:	e000e100 	.word	0xe000e100

000001dc <_extint_get_eic_from_channel>:
     1dc:	b580      	push	{r7, lr}
     1de:	b084      	sub	sp, #16
     1e0:	af00      	add	r7, sp, #0
     1e2:	0002      	movs	r2, r0
     1e4:	1dfb      	adds	r3, r7, #7
     1e6:	701a      	strb	r2, [r3, #0]
     1e8:	230f      	movs	r3, #15
     1ea:	18fb      	adds	r3, r7, r3
     1ec:	1dfa      	adds	r2, r7, #7
     1ee:	7812      	ldrb	r2, [r2, #0]
     1f0:	0952      	lsrs	r2, r2, #5
     1f2:	701a      	strb	r2, [r3, #0]
     1f4:	230f      	movs	r3, #15
     1f6:	18fb      	adds	r3, r7, r3
     1f8:	781b      	ldrb	r3, [r3, #0]
     1fa:	2b00      	cmp	r3, #0
     1fc:	d10c      	bne.n	218 <_extint_get_eic_from_channel+0x3c>
     1fe:	4b09      	ldr	r3, [pc, #36]	; (224 <_extint_get_eic_from_channel+0x48>)
     200:	60bb      	str	r3, [r7, #8]
     202:	230f      	movs	r3, #15
     204:	18fb      	adds	r3, r7, r3
     206:	781b      	ldrb	r3, [r3, #0]
     208:	009b      	lsls	r3, r3, #2
     20a:	2210      	movs	r2, #16
     20c:	4694      	mov	ip, r2
     20e:	44bc      	add	ip, r7
     210:	4463      	add	r3, ip
     212:	3b08      	subs	r3, #8
     214:	681b      	ldr	r3, [r3, #0]
     216:	e000      	b.n	21a <_extint_get_eic_from_channel+0x3e>
     218:	2300      	movs	r3, #0
     21a:	0018      	movs	r0, r3
     21c:	46bd      	mov	sp, r7
     21e:	b004      	add	sp, #16
     220:	bd80      	pop	{r7, pc}
     222:	46c0      	nop			; (mov r8, r8)
     224:	40001800 	.word	0x40001800

00000228 <extint_is_syncing>:
     228:	b580      	push	{r7, lr}
     22a:	b082      	sub	sp, #8
     22c:	af00      	add	r7, sp, #0
     22e:	4b0f      	ldr	r3, [pc, #60]	; (26c <extint_is_syncing+0x44>)
     230:	603b      	str	r3, [r7, #0]
     232:	2300      	movs	r3, #0
     234:	607b      	str	r3, [r7, #4]
     236:	e011      	b.n	25c <extint_is_syncing+0x34>
     238:	687b      	ldr	r3, [r7, #4]
     23a:	009b      	lsls	r3, r3, #2
     23c:	2208      	movs	r2, #8
     23e:	4694      	mov	ip, r2
     240:	44bc      	add	ip, r7
     242:	4463      	add	r3, ip
     244:	3b08      	subs	r3, #8
     246:	681b      	ldr	r3, [r3, #0]
     248:	785b      	ldrb	r3, [r3, #1]
     24a:	b2db      	uxtb	r3, r3
     24c:	b25b      	sxtb	r3, r3
     24e:	2b00      	cmp	r3, #0
     250:	da01      	bge.n	256 <extint_is_syncing+0x2e>
     252:	2301      	movs	r3, #1
     254:	e006      	b.n	264 <extint_is_syncing+0x3c>
     256:	687b      	ldr	r3, [r7, #4]
     258:	3301      	adds	r3, #1
     25a:	607b      	str	r3, [r7, #4]
     25c:	687b      	ldr	r3, [r7, #4]
     25e:	2b00      	cmp	r3, #0
     260:	d0ea      	beq.n	238 <extint_is_syncing+0x10>
     262:	2300      	movs	r3, #0
     264:	0018      	movs	r0, r3
     266:	46bd      	mov	sp, r7
     268:	b002      	add	sp, #8
     26a:	bd80      	pop	{r7, pc}
     26c:	40001800 	.word	0x40001800

00000270 <_system_extint_init>:
     270:	b580      	push	{r7, lr}
     272:	b084      	sub	sp, #16
     274:	af00      	add	r7, sp, #0
     276:	4b2d      	ldr	r3, [pc, #180]	; (32c <_system_extint_init+0xbc>)
     278:	607b      	str	r3, [r7, #4]
     27a:	2140      	movs	r1, #64	; 0x40
     27c:	2000      	movs	r0, #0
     27e:	4b2c      	ldr	r3, [pc, #176]	; (330 <_system_extint_init+0xc0>)
     280:	4798      	blx	r3
     282:	003b      	movs	r3, r7
     284:	0018      	movs	r0, r3
     286:	4b2b      	ldr	r3, [pc, #172]	; (334 <_system_extint_init+0xc4>)
     288:	4798      	blx	r3
     28a:	003b      	movs	r3, r7
     28c:	2200      	movs	r2, #0
     28e:	701a      	strb	r2, [r3, #0]
     290:	003b      	movs	r3, r7
     292:	0019      	movs	r1, r3
     294:	2005      	movs	r0, #5
     296:	4b28      	ldr	r3, [pc, #160]	; (338 <_system_extint_init+0xc8>)
     298:	4798      	blx	r3
     29a:	2005      	movs	r0, #5
     29c:	4b27      	ldr	r3, [pc, #156]	; (33c <_system_extint_init+0xcc>)
     29e:	4798      	blx	r3
     2a0:	2300      	movs	r3, #0
     2a2:	60fb      	str	r3, [r7, #12]
     2a4:	e018      	b.n	2d8 <_system_extint_init+0x68>
     2a6:	68fb      	ldr	r3, [r7, #12]
     2a8:	009b      	lsls	r3, r3, #2
     2aa:	2210      	movs	r2, #16
     2ac:	4694      	mov	ip, r2
     2ae:	44bc      	add	ip, r7
     2b0:	4463      	add	r3, ip
     2b2:	3b0c      	subs	r3, #12
     2b4:	681a      	ldr	r2, [r3, #0]
     2b6:	68fb      	ldr	r3, [r7, #12]
     2b8:	009b      	lsls	r3, r3, #2
     2ba:	2110      	movs	r1, #16
     2bc:	468c      	mov	ip, r1
     2be:	44bc      	add	ip, r7
     2c0:	4463      	add	r3, ip
     2c2:	3b0c      	subs	r3, #12
     2c4:	681b      	ldr	r3, [r3, #0]
     2c6:	781b      	ldrb	r3, [r3, #0]
     2c8:	b2db      	uxtb	r3, r3
     2ca:	2101      	movs	r1, #1
     2cc:	430b      	orrs	r3, r1
     2ce:	b2db      	uxtb	r3, r3
     2d0:	7013      	strb	r3, [r2, #0]
     2d2:	68fb      	ldr	r3, [r7, #12]
     2d4:	3301      	adds	r3, #1
     2d6:	60fb      	str	r3, [r7, #12]
     2d8:	68fb      	ldr	r3, [r7, #12]
     2da:	2b00      	cmp	r3, #0
     2dc:	d0e3      	beq.n	2a6 <_system_extint_init+0x36>
     2de:	46c0      	nop			; (mov r8, r8)
     2e0:	4b17      	ldr	r3, [pc, #92]	; (340 <_system_extint_init+0xd0>)
     2e2:	4798      	blx	r3
     2e4:	1e03      	subs	r3, r0, #0
     2e6:	d1fb      	bne.n	2e0 <_system_extint_init+0x70>
     2e8:	230b      	movs	r3, #11
     2ea:	18fb      	adds	r3, r7, r3
     2ec:	2200      	movs	r2, #0
     2ee:	701a      	strb	r2, [r3, #0]
     2f0:	e00d      	b.n	30e <_system_extint_init+0x9e>
     2f2:	230b      	movs	r3, #11
     2f4:	18fb      	adds	r3, r7, r3
     2f6:	781a      	ldrb	r2, [r3, #0]
     2f8:	4b12      	ldr	r3, [pc, #72]	; (344 <_system_extint_init+0xd4>)
     2fa:	0092      	lsls	r2, r2, #2
     2fc:	2100      	movs	r1, #0
     2fe:	50d1      	str	r1, [r2, r3]
     300:	230b      	movs	r3, #11
     302:	18fb      	adds	r3, r7, r3
     304:	781a      	ldrb	r2, [r3, #0]
     306:	230b      	movs	r3, #11
     308:	18fb      	adds	r3, r7, r3
     30a:	3201      	adds	r2, #1
     30c:	701a      	strb	r2, [r3, #0]
     30e:	230b      	movs	r3, #11
     310:	18fb      	adds	r3, r7, r3
     312:	781b      	ldrb	r3, [r3, #0]
     314:	2b0f      	cmp	r3, #15
     316:	d9ec      	bls.n	2f2 <_system_extint_init+0x82>
     318:	2004      	movs	r0, #4
     31a:	4b0b      	ldr	r3, [pc, #44]	; (348 <_system_extint_init+0xd8>)
     31c:	4798      	blx	r3
     31e:	4b0b      	ldr	r3, [pc, #44]	; (34c <_system_extint_init+0xdc>)
     320:	4798      	blx	r3
     322:	46c0      	nop			; (mov r8, r8)
     324:	46bd      	mov	sp, r7
     326:	b004      	add	sp, #16
     328:	bd80      	pop	{r7, pc}
     32a:	46c0      	nop			; (mov r8, r8)
     32c:	40001800 	.word	0x40001800
     330:	0000012d 	.word	0x0000012d
     334:	00000115 	.word	0x00000115
     338:	000039c5 	.word	0x000039c5
     33c:	00003a09 	.word	0x00003a09
     340:	00000229 	.word	0x00000229
     344:	20000070 	.word	0x20000070
     348:	000001b1 	.word	0x000001b1
     34c:	00000351 	.word	0x00000351

00000350 <_extint_enable>:
     350:	b580      	push	{r7, lr}
     352:	b082      	sub	sp, #8
     354:	af00      	add	r7, sp, #0
     356:	4b15      	ldr	r3, [pc, #84]	; (3ac <_extint_enable+0x5c>)
     358:	603b      	str	r3, [r7, #0]
     35a:	2300      	movs	r3, #0
     35c:	607b      	str	r3, [r7, #4]
     35e:	e018      	b.n	392 <_extint_enable+0x42>
     360:	687b      	ldr	r3, [r7, #4]
     362:	009b      	lsls	r3, r3, #2
     364:	2208      	movs	r2, #8
     366:	4694      	mov	ip, r2
     368:	44bc      	add	ip, r7
     36a:	4463      	add	r3, ip
     36c:	3b08      	subs	r3, #8
     36e:	681a      	ldr	r2, [r3, #0]
     370:	687b      	ldr	r3, [r7, #4]
     372:	009b      	lsls	r3, r3, #2
     374:	2108      	movs	r1, #8
     376:	468c      	mov	ip, r1
     378:	44bc      	add	ip, r7
     37a:	4463      	add	r3, ip
     37c:	3b08      	subs	r3, #8
     37e:	681b      	ldr	r3, [r3, #0]
     380:	781b      	ldrb	r3, [r3, #0]
     382:	b2db      	uxtb	r3, r3
     384:	2102      	movs	r1, #2
     386:	430b      	orrs	r3, r1
     388:	b2db      	uxtb	r3, r3
     38a:	7013      	strb	r3, [r2, #0]
     38c:	687b      	ldr	r3, [r7, #4]
     38e:	3301      	adds	r3, #1
     390:	607b      	str	r3, [r7, #4]
     392:	687b      	ldr	r3, [r7, #4]
     394:	2b00      	cmp	r3, #0
     396:	d0e3      	beq.n	360 <_extint_enable+0x10>
     398:	46c0      	nop			; (mov r8, r8)
     39a:	4b05      	ldr	r3, [pc, #20]	; (3b0 <_extint_enable+0x60>)
     39c:	4798      	blx	r3
     39e:	1e03      	subs	r3, r0, #0
     3a0:	d1fb      	bne.n	39a <_extint_enable+0x4a>
     3a2:	46c0      	nop			; (mov r8, r8)
     3a4:	46bd      	mov	sp, r7
     3a6:	b002      	add	sp, #8
     3a8:	bd80      	pop	{r7, pc}
     3aa:	46c0      	nop			; (mov r8, r8)
     3ac:	40001800 	.word	0x40001800
     3b0:	00000229 	.word	0x00000229

000003b4 <extint_chan_get_config_defaults>:
     3b4:	b580      	push	{r7, lr}
     3b6:	b082      	sub	sp, #8
     3b8:	af00      	add	r7, sp, #0
     3ba:	6078      	str	r0, [r7, #4]
     3bc:	687b      	ldr	r3, [r7, #4]
     3be:	2200      	movs	r2, #0
     3c0:	601a      	str	r2, [r3, #0]
     3c2:	687b      	ldr	r3, [r7, #4]
     3c4:	2200      	movs	r2, #0
     3c6:	605a      	str	r2, [r3, #4]
     3c8:	687b      	ldr	r3, [r7, #4]
     3ca:	2201      	movs	r2, #1
     3cc:	721a      	strb	r2, [r3, #8]
     3ce:	687b      	ldr	r3, [r7, #4]
     3d0:	2201      	movs	r2, #1
     3d2:	725a      	strb	r2, [r3, #9]
     3d4:	687b      	ldr	r3, [r7, #4]
     3d6:	2200      	movs	r2, #0
     3d8:	729a      	strb	r2, [r3, #10]
     3da:	687b      	ldr	r3, [r7, #4]
     3dc:	2202      	movs	r2, #2
     3de:	72da      	strb	r2, [r3, #11]
     3e0:	46c0      	nop			; (mov r8, r8)
     3e2:	46bd      	mov	sp, r7
     3e4:	b002      	add	sp, #8
     3e6:	bd80      	pop	{r7, pc}

000003e8 <extint_chan_set_config>:
     3e8:	b580      	push	{r7, lr}
     3ea:	b086      	sub	sp, #24
     3ec:	af00      	add	r7, sp, #0
     3ee:	0002      	movs	r2, r0
     3f0:	6039      	str	r1, [r7, #0]
     3f2:	1dfb      	adds	r3, r7, #7
     3f4:	701a      	strb	r2, [r3, #0]
     3f6:	2308      	movs	r3, #8
     3f8:	18fb      	adds	r3, r7, r3
     3fa:	0018      	movs	r0, r3
     3fc:	4b36      	ldr	r3, [pc, #216]	; (4d8 <extint_chan_set_config+0xf0>)
     3fe:	4798      	blx	r3
     400:	683b      	ldr	r3, [r7, #0]
     402:	685b      	ldr	r3, [r3, #4]
     404:	b2da      	uxtb	r2, r3
     406:	2308      	movs	r3, #8
     408:	18fb      	adds	r3, r7, r3
     40a:	701a      	strb	r2, [r3, #0]
     40c:	2308      	movs	r3, #8
     40e:	18fb      	adds	r3, r7, r3
     410:	2200      	movs	r2, #0
     412:	705a      	strb	r2, [r3, #1]
     414:	683b      	ldr	r3, [r7, #0]
     416:	7a1a      	ldrb	r2, [r3, #8]
     418:	2308      	movs	r3, #8
     41a:	18fb      	adds	r3, r7, r3
     41c:	709a      	strb	r2, [r3, #2]
     41e:	683b      	ldr	r3, [r7, #0]
     420:	681b      	ldr	r3, [r3, #0]
     422:	b2db      	uxtb	r3, r3
     424:	2208      	movs	r2, #8
     426:	18ba      	adds	r2, r7, r2
     428:	0011      	movs	r1, r2
     42a:	0018      	movs	r0, r3
     42c:	4b2b      	ldr	r3, [pc, #172]	; (4dc <extint_chan_set_config+0xf4>)
     42e:	4798      	blx	r3
     430:	1dfb      	adds	r3, r7, #7
     432:	781b      	ldrb	r3, [r3, #0]
     434:	0018      	movs	r0, r3
     436:	4b2a      	ldr	r3, [pc, #168]	; (4e0 <extint_chan_set_config+0xf8>)
     438:	4798      	blx	r3
     43a:	0003      	movs	r3, r0
     43c:	613b      	str	r3, [r7, #16]
     43e:	1dfb      	adds	r3, r7, #7
     440:	781b      	ldrb	r3, [r3, #0]
     442:	2207      	movs	r2, #7
     444:	4013      	ands	r3, r2
     446:	009b      	lsls	r3, r3, #2
     448:	60fb      	str	r3, [r7, #12]
     44a:	683b      	ldr	r3, [r7, #0]
     44c:	7adb      	ldrb	r3, [r3, #11]
     44e:	617b      	str	r3, [r7, #20]
     450:	683b      	ldr	r3, [r7, #0]
     452:	7a9b      	ldrb	r3, [r3, #10]
     454:	2b00      	cmp	r3, #0
     456:	d003      	beq.n	460 <extint_chan_set_config+0x78>
     458:	697b      	ldr	r3, [r7, #20]
     45a:	2208      	movs	r2, #8
     45c:	4313      	orrs	r3, r2
     45e:	617b      	str	r3, [r7, #20]
     460:	1dfb      	adds	r3, r7, #7
     462:	781b      	ldrb	r3, [r3, #0]
     464:	08db      	lsrs	r3, r3, #3
     466:	b2db      	uxtb	r3, r3
     468:	0018      	movs	r0, r3
     46a:	1dfb      	adds	r3, r7, #7
     46c:	781b      	ldrb	r3, [r3, #0]
     46e:	08db      	lsrs	r3, r3, #3
     470:	b2db      	uxtb	r3, r3
     472:	001a      	movs	r2, r3
     474:	693b      	ldr	r3, [r7, #16]
     476:	3206      	adds	r2, #6
     478:	0092      	lsls	r2, r2, #2
     47a:	58d3      	ldr	r3, [r2, r3]
     47c:	210f      	movs	r1, #15
     47e:	68fa      	ldr	r2, [r7, #12]
     480:	4091      	lsls	r1, r2
     482:	000a      	movs	r2, r1
     484:	43d2      	mvns	r2, r2
     486:	401a      	ands	r2, r3
     488:	6979      	ldr	r1, [r7, #20]
     48a:	68fb      	ldr	r3, [r7, #12]
     48c:	4099      	lsls	r1, r3
     48e:	000b      	movs	r3, r1
     490:	431a      	orrs	r2, r3
     492:	0011      	movs	r1, r2
     494:	693b      	ldr	r3, [r7, #16]
     496:	1d82      	adds	r2, r0, #6
     498:	0092      	lsls	r2, r2, #2
     49a:	50d1      	str	r1, [r2, r3]
     49c:	683b      	ldr	r3, [r7, #0]
     49e:	7a5b      	ldrb	r3, [r3, #9]
     4a0:	2b00      	cmp	r3, #0
     4a2:	d00a      	beq.n	4ba <extint_chan_set_config+0xd2>
     4a4:	693b      	ldr	r3, [r7, #16]
     4a6:	695a      	ldr	r2, [r3, #20]
     4a8:	1dfb      	adds	r3, r7, #7
     4aa:	781b      	ldrb	r3, [r3, #0]
     4ac:	2101      	movs	r1, #1
     4ae:	4099      	lsls	r1, r3
     4b0:	000b      	movs	r3, r1
     4b2:	431a      	orrs	r2, r3
     4b4:	693b      	ldr	r3, [r7, #16]
     4b6:	615a      	str	r2, [r3, #20]
     4b8:	e00a      	b.n	4d0 <extint_chan_set_config+0xe8>
     4ba:	693b      	ldr	r3, [r7, #16]
     4bc:	695b      	ldr	r3, [r3, #20]
     4be:	1dfa      	adds	r2, r7, #7
     4c0:	7812      	ldrb	r2, [r2, #0]
     4c2:	2101      	movs	r1, #1
     4c4:	4091      	lsls	r1, r2
     4c6:	000a      	movs	r2, r1
     4c8:	43d2      	mvns	r2, r2
     4ca:	401a      	ands	r2, r3
     4cc:	693b      	ldr	r3, [r7, #16]
     4ce:	615a      	str	r2, [r3, #20]
     4d0:	46c0      	nop			; (mov r8, r8)
     4d2:	46bd      	mov	sp, r7
     4d4:	b006      	add	sp, #24
     4d6:	bd80      	pop	{r7, pc}
     4d8:	00000189 	.word	0x00000189
     4dc:	00003cb1 	.word	0x00003cb1
     4e0:	000001dd 	.word	0x000001dd

000004e4 <system_gclk_chan_get_config_defaults>:
     4e4:	b580      	push	{r7, lr}
     4e6:	b082      	sub	sp, #8
     4e8:	af00      	add	r7, sp, #0
     4ea:	6078      	str	r0, [r7, #4]
     4ec:	687b      	ldr	r3, [r7, #4]
     4ee:	2200      	movs	r2, #0
     4f0:	701a      	strb	r2, [r3, #0]
     4f2:	46c0      	nop			; (mov r8, r8)
     4f4:	46bd      	mov	sp, r7
     4f6:	b002      	add	sp, #8
     4f8:	bd80      	pop	{r7, pc}
     4fa:	46c0      	nop			; (mov r8, r8)

000004fc <system_apb_clock_set_mask>:
     4fc:	b580      	push	{r7, lr}
     4fe:	b082      	sub	sp, #8
     500:	af00      	add	r7, sp, #0
     502:	0002      	movs	r2, r0
     504:	6039      	str	r1, [r7, #0]
     506:	1dfb      	adds	r3, r7, #7
     508:	701a      	strb	r2, [r3, #0]
     50a:	1dfb      	adds	r3, r7, #7
     50c:	781b      	ldrb	r3, [r3, #0]
     50e:	2b01      	cmp	r3, #1
     510:	d00a      	beq.n	528 <system_apb_clock_set_mask+0x2c>
     512:	2b02      	cmp	r3, #2
     514:	d00f      	beq.n	536 <system_apb_clock_set_mask+0x3a>
     516:	2b00      	cmp	r3, #0
     518:	d114      	bne.n	544 <system_apb_clock_set_mask+0x48>
     51a:	4b0e      	ldr	r3, [pc, #56]	; (554 <system_apb_clock_set_mask+0x58>)
     51c:	4a0d      	ldr	r2, [pc, #52]	; (554 <system_apb_clock_set_mask+0x58>)
     51e:	6991      	ldr	r1, [r2, #24]
     520:	683a      	ldr	r2, [r7, #0]
     522:	430a      	orrs	r2, r1
     524:	619a      	str	r2, [r3, #24]
     526:	e00f      	b.n	548 <system_apb_clock_set_mask+0x4c>
     528:	4b0a      	ldr	r3, [pc, #40]	; (554 <system_apb_clock_set_mask+0x58>)
     52a:	4a0a      	ldr	r2, [pc, #40]	; (554 <system_apb_clock_set_mask+0x58>)
     52c:	69d1      	ldr	r1, [r2, #28]
     52e:	683a      	ldr	r2, [r7, #0]
     530:	430a      	orrs	r2, r1
     532:	61da      	str	r2, [r3, #28]
     534:	e008      	b.n	548 <system_apb_clock_set_mask+0x4c>
     536:	4b07      	ldr	r3, [pc, #28]	; (554 <system_apb_clock_set_mask+0x58>)
     538:	4a06      	ldr	r2, [pc, #24]	; (554 <system_apb_clock_set_mask+0x58>)
     53a:	6a11      	ldr	r1, [r2, #32]
     53c:	683a      	ldr	r2, [r7, #0]
     53e:	430a      	orrs	r2, r1
     540:	621a      	str	r2, [r3, #32]
     542:	e001      	b.n	548 <system_apb_clock_set_mask+0x4c>
     544:	2317      	movs	r3, #23
     546:	e000      	b.n	54a <system_apb_clock_set_mask+0x4e>
     548:	2300      	movs	r3, #0
     54a:	0018      	movs	r0, r3
     54c:	46bd      	mov	sp, r7
     54e:	b002      	add	sp, #8
     550:	bd80      	pop	{r7, pc}
     552:	46c0      	nop			; (mov r8, r8)
     554:	40000400 	.word	0x40000400

00000558 <system_interrupt_enable>:
     558:	b580      	push	{r7, lr}
     55a:	b082      	sub	sp, #8
     55c:	af00      	add	r7, sp, #0
     55e:	0002      	movs	r2, r0
     560:	1dfb      	adds	r3, r7, #7
     562:	701a      	strb	r2, [r3, #0]
     564:	4b06      	ldr	r3, [pc, #24]	; (580 <system_interrupt_enable+0x28>)
     566:	1dfa      	adds	r2, r7, #7
     568:	7812      	ldrb	r2, [r2, #0]
     56a:	0011      	movs	r1, r2
     56c:	221f      	movs	r2, #31
     56e:	400a      	ands	r2, r1
     570:	2101      	movs	r1, #1
     572:	4091      	lsls	r1, r2
     574:	000a      	movs	r2, r1
     576:	601a      	str	r2, [r3, #0]
     578:	46c0      	nop			; (mov r8, r8)
     57a:	46bd      	mov	sp, r7
     57c:	b002      	add	sp, #8
     57e:	bd80      	pop	{r7, pc}
     580:	e000e100 	.word	0xe000e100

00000584 <system_interrupt_disable>:
     584:	b580      	push	{r7, lr}
     586:	b082      	sub	sp, #8
     588:	af00      	add	r7, sp, #0
     58a:	0002      	movs	r2, r0
     58c:	1dfb      	adds	r3, r7, #7
     58e:	701a      	strb	r2, [r3, #0]
     590:	4a07      	ldr	r2, [pc, #28]	; (5b0 <system_interrupt_disable+0x2c>)
     592:	1dfb      	adds	r3, r7, #7
     594:	781b      	ldrb	r3, [r3, #0]
     596:	0019      	movs	r1, r3
     598:	231f      	movs	r3, #31
     59a:	400b      	ands	r3, r1
     59c:	2101      	movs	r1, #1
     59e:	4099      	lsls	r1, r3
     5a0:	000b      	movs	r3, r1
     5a2:	0019      	movs	r1, r3
     5a4:	2380      	movs	r3, #128	; 0x80
     5a6:	50d1      	str	r1, [r2, r3]
     5a8:	46c0      	nop			; (mov r8, r8)
     5aa:	46bd      	mov	sp, r7
     5ac:	b002      	add	sp, #8
     5ae:	bd80      	pop	{r7, pc}
     5b0:	e000e100 	.word	0xe000e100

000005b4 <rtc_count_is_syncing>:
     5b4:	b580      	push	{r7, lr}
     5b6:	b084      	sub	sp, #16
     5b8:	af00      	add	r7, sp, #0
     5ba:	6078      	str	r0, [r7, #4]
     5bc:	687b      	ldr	r3, [r7, #4]
     5be:	681b      	ldr	r3, [r3, #0]
     5c0:	60fb      	str	r3, [r7, #12]
     5c2:	68fb      	ldr	r3, [r7, #12]
     5c4:	7a9b      	ldrb	r3, [r3, #10]
     5c6:	b2db      	uxtb	r3, r3
     5c8:	b25b      	sxtb	r3, r3
     5ca:	2b00      	cmp	r3, #0
     5cc:	da01      	bge.n	5d2 <rtc_count_is_syncing+0x1e>
     5ce:	2301      	movs	r3, #1
     5d0:	e000      	b.n	5d4 <rtc_count_is_syncing+0x20>
     5d2:	2300      	movs	r3, #0
     5d4:	0018      	movs	r0, r3
     5d6:	46bd      	mov	sp, r7
     5d8:	b004      	add	sp, #16
     5da:	bd80      	pop	{r7, pc}

000005dc <rtc_count_enable>:
     5dc:	b580      	push	{r7, lr}
     5de:	b084      	sub	sp, #16
     5e0:	af00      	add	r7, sp, #0
     5e2:	6078      	str	r0, [r7, #4]
     5e4:	687b      	ldr	r3, [r7, #4]
     5e6:	681b      	ldr	r3, [r3, #0]
     5e8:	60fb      	str	r3, [r7, #12]
     5ea:	2003      	movs	r0, #3
     5ec:	4b0a      	ldr	r3, [pc, #40]	; (618 <rtc_count_enable+0x3c>)
     5ee:	4798      	blx	r3
     5f0:	46c0      	nop			; (mov r8, r8)
     5f2:	687b      	ldr	r3, [r7, #4]
     5f4:	0018      	movs	r0, r3
     5f6:	4b09      	ldr	r3, [pc, #36]	; (61c <rtc_count_enable+0x40>)
     5f8:	4798      	blx	r3
     5fa:	1e03      	subs	r3, r0, #0
     5fc:	d1f9      	bne.n	5f2 <rtc_count_enable+0x16>
     5fe:	68fb      	ldr	r3, [r7, #12]
     600:	881b      	ldrh	r3, [r3, #0]
     602:	b29b      	uxth	r3, r3
     604:	2202      	movs	r2, #2
     606:	4313      	orrs	r3, r2
     608:	b29a      	uxth	r2, r3
     60a:	68fb      	ldr	r3, [r7, #12]
     60c:	801a      	strh	r2, [r3, #0]
     60e:	46c0      	nop			; (mov r8, r8)
     610:	46bd      	mov	sp, r7
     612:	b004      	add	sp, #16
     614:	bd80      	pop	{r7, pc}
     616:	46c0      	nop			; (mov r8, r8)
     618:	00000559 	.word	0x00000559
     61c:	000005b5 	.word	0x000005b5

00000620 <rtc_count_disable>:
     620:	b580      	push	{r7, lr}
     622:	b084      	sub	sp, #16
     624:	af00      	add	r7, sp, #0
     626:	6078      	str	r0, [r7, #4]
     628:	687b      	ldr	r3, [r7, #4]
     62a:	681b      	ldr	r3, [r3, #0]
     62c:	60fb      	str	r3, [r7, #12]
     62e:	2003      	movs	r0, #3
     630:	4b0a      	ldr	r3, [pc, #40]	; (65c <rtc_count_disable+0x3c>)
     632:	4798      	blx	r3
     634:	46c0      	nop			; (mov r8, r8)
     636:	687b      	ldr	r3, [r7, #4]
     638:	0018      	movs	r0, r3
     63a:	4b09      	ldr	r3, [pc, #36]	; (660 <rtc_count_disable+0x40>)
     63c:	4798      	blx	r3
     63e:	1e03      	subs	r3, r0, #0
     640:	d1f9      	bne.n	636 <rtc_count_disable+0x16>
     642:	68fb      	ldr	r3, [r7, #12]
     644:	881b      	ldrh	r3, [r3, #0]
     646:	b29b      	uxth	r3, r3
     648:	2202      	movs	r2, #2
     64a:	4393      	bics	r3, r2
     64c:	b29a      	uxth	r2, r3
     64e:	68fb      	ldr	r3, [r7, #12]
     650:	801a      	strh	r2, [r3, #0]
     652:	46c0      	nop			; (mov r8, r8)
     654:	46bd      	mov	sp, r7
     656:	b004      	add	sp, #16
     658:	bd80      	pop	{r7, pc}
     65a:	46c0      	nop			; (mov r8, r8)
     65c:	00000585 	.word	0x00000585
     660:	000005b5 	.word	0x000005b5

00000664 <rtc_count_reset>:
     664:	b580      	push	{r7, lr}
     666:	b084      	sub	sp, #16
     668:	af00      	add	r7, sp, #0
     66a:	6078      	str	r0, [r7, #4]
     66c:	687b      	ldr	r3, [r7, #4]
     66e:	681b      	ldr	r3, [r3, #0]
     670:	60fb      	str	r3, [r7, #12]
     672:	687b      	ldr	r3, [r7, #4]
     674:	0018      	movs	r0, r3
     676:	4b0d      	ldr	r3, [pc, #52]	; (6ac <rtc_count_reset+0x48>)
     678:	4798      	blx	r3
     67a:	687b      	ldr	r3, [r7, #4]
     67c:	2200      	movs	r2, #0
     67e:	829a      	strh	r2, [r3, #20]
     680:	687b      	ldr	r3, [r7, #4]
     682:	2200      	movs	r2, #0
     684:	82da      	strh	r2, [r3, #22]
     686:	46c0      	nop			; (mov r8, r8)
     688:	687b      	ldr	r3, [r7, #4]
     68a:	0018      	movs	r0, r3
     68c:	4b08      	ldr	r3, [pc, #32]	; (6b0 <rtc_count_reset+0x4c>)
     68e:	4798      	blx	r3
     690:	1e03      	subs	r3, r0, #0
     692:	d1f9      	bne.n	688 <rtc_count_reset+0x24>
     694:	68fb      	ldr	r3, [r7, #12]
     696:	881b      	ldrh	r3, [r3, #0]
     698:	b29b      	uxth	r3, r3
     69a:	2201      	movs	r2, #1
     69c:	4313      	orrs	r3, r2
     69e:	b29a      	uxth	r2, r3
     6a0:	68fb      	ldr	r3, [r7, #12]
     6a2:	801a      	strh	r2, [r3, #0]
     6a4:	46c0      	nop			; (mov r8, r8)
     6a6:	46bd      	mov	sp, r7
     6a8:	b004      	add	sp, #16
     6aa:	bd80      	pop	{r7, pc}
     6ac:	00000621 	.word	0x00000621
     6b0:	000005b5 	.word	0x000005b5

000006b4 <_rtc_count_set_config>:
     6b4:	b580      	push	{r7, lr}
     6b6:	b084      	sub	sp, #16
     6b8:	af00      	add	r7, sp, #0
     6ba:	6078      	str	r0, [r7, #4]
     6bc:	6039      	str	r1, [r7, #0]
     6be:	687b      	ldr	r3, [r7, #4]
     6c0:	681b      	ldr	r3, [r3, #0]
     6c2:	60bb      	str	r3, [r7, #8]
     6c4:	683b      	ldr	r3, [r7, #0]
     6c6:	881a      	ldrh	r2, [r3, #0]
     6c8:	68bb      	ldr	r3, [r7, #8]
     6ca:	801a      	strh	r2, [r3, #0]
     6cc:	683b      	ldr	r3, [r7, #0]
     6ce:	789b      	ldrb	r3, [r3, #2]
     6d0:	2b00      	cmp	r3, #0
     6d2:	d03a      	beq.n	74a <_rtc_count_set_config+0x96>
     6d4:	2b01      	cmp	r3, #1
     6d6:	d000      	beq.n	6da <_rtc_count_set_config+0x26>
     6d8:	e06c      	b.n	7b4 <_rtc_count_set_config+0x100>
     6da:	68bb      	ldr	r3, [r7, #8]
     6dc:	881b      	ldrh	r3, [r3, #0]
     6de:	b29a      	uxth	r2, r3
     6e0:	68bb      	ldr	r3, [r7, #8]
     6e2:	801a      	strh	r2, [r3, #0]
     6e4:	683b      	ldr	r3, [r7, #0]
     6e6:	78db      	ldrb	r3, [r3, #3]
     6e8:	2b00      	cmp	r3, #0
     6ea:	d007      	beq.n	6fc <_rtc_count_set_config+0x48>
     6ec:	68bb      	ldr	r3, [r7, #8]
     6ee:	881b      	ldrh	r3, [r3, #0]
     6f0:	b29b      	uxth	r3, r3
     6f2:	2280      	movs	r2, #128	; 0x80
     6f4:	4313      	orrs	r3, r2
     6f6:	b29a      	uxth	r2, r3
     6f8:	68bb      	ldr	r3, [r7, #8]
     6fa:	801a      	strh	r2, [r3, #0]
     6fc:	230f      	movs	r3, #15
     6fe:	18fb      	adds	r3, r7, r3
     700:	2200      	movs	r2, #0
     702:	701a      	strb	r2, [r3, #0]
     704:	e01b      	b.n	73e <_rtc_count_set_config+0x8a>
     706:	46c0      	nop			; (mov r8, r8)
     708:	687b      	ldr	r3, [r7, #4]
     70a:	0018      	movs	r0, r3
     70c:	4b33      	ldr	r3, [pc, #204]	; (7dc <_rtc_count_set_config+0x128>)
     70e:	4798      	blx	r3
     710:	1e03      	subs	r3, r0, #0
     712:	d1f9      	bne.n	708 <_rtc_count_set_config+0x54>
     714:	230f      	movs	r3, #15
     716:	18fb      	adds	r3, r7, r3
     718:	781a      	ldrb	r2, [r3, #0]
     71a:	683b      	ldr	r3, [r7, #0]
     71c:	3202      	adds	r2, #2
     71e:	0092      	lsls	r2, r2, #2
     720:	58d1      	ldr	r1, [r2, r3]
     722:	230f      	movs	r3, #15
     724:	18fb      	adds	r3, r7, r3
     726:	781a      	ldrb	r2, [r3, #0]
     728:	687b      	ldr	r3, [r7, #4]
     72a:	0018      	movs	r0, r3
     72c:	4b2c      	ldr	r3, [pc, #176]	; (7e0 <_rtc_count_set_config+0x12c>)
     72e:	4798      	blx	r3
     730:	230f      	movs	r3, #15
     732:	18fb      	adds	r3, r7, r3
     734:	781a      	ldrb	r2, [r3, #0]
     736:	230f      	movs	r3, #15
     738:	18fb      	adds	r3, r7, r3
     73a:	3201      	adds	r2, #1
     73c:	701a      	strb	r2, [r3, #0]
     73e:	230f      	movs	r3, #15
     740:	18fb      	adds	r3, r7, r3
     742:	781b      	ldrb	r3, [r3, #0]
     744:	2b00      	cmp	r3, #0
     746:	d0de      	beq.n	706 <_rtc_count_set_config+0x52>
     748:	e036      	b.n	7b8 <_rtc_count_set_config+0x104>
     74a:	68bb      	ldr	r3, [r7, #8]
     74c:	881b      	ldrh	r3, [r3, #0]
     74e:	b29b      	uxth	r3, r3
     750:	2204      	movs	r2, #4
     752:	4313      	orrs	r3, r2
     754:	b29a      	uxth	r2, r3
     756:	68bb      	ldr	r3, [r7, #8]
     758:	801a      	strh	r2, [r3, #0]
     75a:	683b      	ldr	r3, [r7, #0]
     75c:	78db      	ldrb	r3, [r3, #3]
     75e:	2b00      	cmp	r3, #0
     760:	d001      	beq.n	766 <_rtc_count_set_config+0xb2>
     762:	2317      	movs	r3, #23
     764:	e036      	b.n	7d4 <_rtc_count_set_config+0x120>
     766:	230e      	movs	r3, #14
     768:	18fb      	adds	r3, r7, r3
     76a:	2200      	movs	r2, #0
     76c:	701a      	strb	r2, [r3, #0]
     76e:	e01b      	b.n	7a8 <_rtc_count_set_config+0xf4>
     770:	46c0      	nop			; (mov r8, r8)
     772:	687b      	ldr	r3, [r7, #4]
     774:	0018      	movs	r0, r3
     776:	4b19      	ldr	r3, [pc, #100]	; (7dc <_rtc_count_set_config+0x128>)
     778:	4798      	blx	r3
     77a:	1e03      	subs	r3, r0, #0
     77c:	d1f9      	bne.n	772 <_rtc_count_set_config+0xbe>
     77e:	230e      	movs	r3, #14
     780:	18fb      	adds	r3, r7, r3
     782:	781a      	ldrb	r2, [r3, #0]
     784:	683b      	ldr	r3, [r7, #0]
     786:	3202      	adds	r2, #2
     788:	0092      	lsls	r2, r2, #2
     78a:	58d1      	ldr	r1, [r2, r3]
     78c:	230e      	movs	r3, #14
     78e:	18fb      	adds	r3, r7, r3
     790:	781a      	ldrb	r2, [r3, #0]
     792:	687b      	ldr	r3, [r7, #4]
     794:	0018      	movs	r0, r3
     796:	4b12      	ldr	r3, [pc, #72]	; (7e0 <_rtc_count_set_config+0x12c>)
     798:	4798      	blx	r3
     79a:	230e      	movs	r3, #14
     79c:	18fb      	adds	r3, r7, r3
     79e:	781a      	ldrb	r2, [r3, #0]
     7a0:	230e      	movs	r3, #14
     7a2:	18fb      	adds	r3, r7, r3
     7a4:	3201      	adds	r2, #1
     7a6:	701a      	strb	r2, [r3, #0]
     7a8:	230e      	movs	r3, #14
     7aa:	18fb      	adds	r3, r7, r3
     7ac:	781b      	ldrb	r3, [r3, #0]
     7ae:	2b01      	cmp	r3, #1
     7b0:	d9de      	bls.n	770 <_rtc_count_set_config+0xbc>
     7b2:	e001      	b.n	7b8 <_rtc_count_set_config+0x104>
     7b4:	2317      	movs	r3, #23
     7b6:	e00d      	b.n	7d4 <_rtc_count_set_config+0x120>
     7b8:	683b      	ldr	r3, [r7, #0]
     7ba:	791b      	ldrb	r3, [r3, #4]
     7bc:	2b00      	cmp	r3, #0
     7be:	d008      	beq.n	7d2 <_rtc_count_set_config+0x11e>
     7c0:	68bb      	ldr	r3, [r7, #8]
     7c2:	885b      	ldrh	r3, [r3, #2]
     7c4:	b29b      	uxth	r3, r3
     7c6:	2280      	movs	r2, #128	; 0x80
     7c8:	01d2      	lsls	r2, r2, #7
     7ca:	4313      	orrs	r3, r2
     7cc:	b29a      	uxth	r2, r3
     7ce:	68bb      	ldr	r3, [r7, #8]
     7d0:	805a      	strh	r2, [r3, #2]
     7d2:	2300      	movs	r3, #0
     7d4:	0018      	movs	r0, r3
     7d6:	46bd      	mov	sp, r7
     7d8:	b004      	add	sp, #16
     7da:	bd80      	pop	{r7, pc}
     7dc:	000005b5 	.word	0x000005b5
     7e0:	0000093d 	.word	0x0000093d

000007e4 <rtc_count_init>:
     7e4:	b580      	push	{r7, lr}
     7e6:	b086      	sub	sp, #24
     7e8:	af00      	add	r7, sp, #0
     7ea:	60f8      	str	r0, [r7, #12]
     7ec:	60b9      	str	r1, [r7, #8]
     7ee:	607a      	str	r2, [r7, #4]
     7f0:	68fb      	ldr	r3, [r7, #12]
     7f2:	68ba      	ldr	r2, [r7, #8]
     7f4:	601a      	str	r2, [r3, #0]
     7f6:	2120      	movs	r1, #32
     7f8:	2000      	movs	r0, #0
     7fa:	4b17      	ldr	r3, [pc, #92]	; (858 <rtc_count_init+0x74>)
     7fc:	4798      	blx	r3
     7fe:	2314      	movs	r3, #20
     800:	18fb      	adds	r3, r7, r3
     802:	0018      	movs	r0, r3
     804:	4b15      	ldr	r3, [pc, #84]	; (85c <rtc_count_init+0x78>)
     806:	4798      	blx	r3
     808:	2314      	movs	r3, #20
     80a:	18fb      	adds	r3, r7, r3
     80c:	2202      	movs	r2, #2
     80e:	701a      	strb	r2, [r3, #0]
     810:	2314      	movs	r3, #20
     812:	18fb      	adds	r3, r7, r3
     814:	0019      	movs	r1, r3
     816:	2004      	movs	r0, #4
     818:	4b11      	ldr	r3, [pc, #68]	; (860 <rtc_count_init+0x7c>)
     81a:	4798      	blx	r3
     81c:	2004      	movs	r0, #4
     81e:	4b11      	ldr	r3, [pc, #68]	; (864 <rtc_count_init+0x80>)
     820:	4798      	blx	r3
     822:	68fb      	ldr	r3, [r7, #12]
     824:	0018      	movs	r0, r3
     826:	4b10      	ldr	r3, [pc, #64]	; (868 <rtc_count_init+0x84>)
     828:	4798      	blx	r3
     82a:	687b      	ldr	r3, [r7, #4]
     82c:	789a      	ldrb	r2, [r3, #2]
     82e:	68fb      	ldr	r3, [r7, #12]
     830:	711a      	strb	r2, [r3, #4]
     832:	687b      	ldr	r3, [r7, #4]
     834:	791a      	ldrb	r2, [r3, #4]
     836:	68fb      	ldr	r3, [r7, #12]
     838:	715a      	strb	r2, [r3, #5]
     83a:	4b0c      	ldr	r3, [pc, #48]	; (86c <rtc_count_init+0x88>)
     83c:	68fa      	ldr	r2, [r7, #12]
     83e:	601a      	str	r2, [r3, #0]
     840:	687a      	ldr	r2, [r7, #4]
     842:	68fb      	ldr	r3, [r7, #12]
     844:	0011      	movs	r1, r2
     846:	0018      	movs	r0, r3
     848:	4b09      	ldr	r3, [pc, #36]	; (870 <rtc_count_init+0x8c>)
     84a:	4798      	blx	r3
     84c:	0003      	movs	r3, r0
     84e:	0018      	movs	r0, r3
     850:	46bd      	mov	sp, r7
     852:	b006      	add	sp, #24
     854:	bd80      	pop	{r7, pc}
     856:	46c0      	nop			; (mov r8, r8)
     858:	000004fd 	.word	0x000004fd
     85c:	000004e5 	.word	0x000004e5
     860:	000039c5 	.word	0x000039c5
     864:	00003a09 	.word	0x00003a09
     868:	00000665 	.word	0x00000665
     86c:	200000b0 	.word	0x200000b0
     870:	000006b5 	.word	0x000006b5

00000874 <rtc_count_set_count>:
     874:	b580      	push	{r7, lr}
     876:	b084      	sub	sp, #16
     878:	af00      	add	r7, sp, #0
     87a:	6078      	str	r0, [r7, #4]
     87c:	6039      	str	r1, [r7, #0]
     87e:	687b      	ldr	r3, [r7, #4]
     880:	681b      	ldr	r3, [r3, #0]
     882:	60fb      	str	r3, [r7, #12]
     884:	46c0      	nop			; (mov r8, r8)
     886:	687b      	ldr	r3, [r7, #4]
     888:	0018      	movs	r0, r3
     88a:	4b10      	ldr	r3, [pc, #64]	; (8cc <rtc_count_set_count+0x58>)
     88c:	4798      	blx	r3
     88e:	1e03      	subs	r3, r0, #0
     890:	d1f9      	bne.n	886 <rtc_count_set_count+0x12>
     892:	687b      	ldr	r3, [r7, #4]
     894:	791b      	ldrb	r3, [r3, #4]
     896:	2b00      	cmp	r3, #0
     898:	d005      	beq.n	8a6 <rtc_count_set_count+0x32>
     89a:	2b01      	cmp	r3, #1
     89c:	d10e      	bne.n	8bc <rtc_count_set_count+0x48>
     89e:	68fb      	ldr	r3, [r7, #12]
     8a0:	683a      	ldr	r2, [r7, #0]
     8a2:	611a      	str	r2, [r3, #16]
     8a4:	e00c      	b.n	8c0 <rtc_count_set_count+0x4c>
     8a6:	683b      	ldr	r3, [r7, #0]
     8a8:	4a09      	ldr	r2, [pc, #36]	; (8d0 <rtc_count_set_count+0x5c>)
     8aa:	4293      	cmp	r3, r2
     8ac:	d901      	bls.n	8b2 <rtc_count_set_count+0x3e>
     8ae:	2317      	movs	r3, #23
     8b0:	e007      	b.n	8c2 <rtc_count_set_count+0x4e>
     8b2:	683b      	ldr	r3, [r7, #0]
     8b4:	b29a      	uxth	r2, r3
     8b6:	68fb      	ldr	r3, [r7, #12]
     8b8:	821a      	strh	r2, [r3, #16]
     8ba:	e001      	b.n	8c0 <rtc_count_set_count+0x4c>
     8bc:	2317      	movs	r3, #23
     8be:	e000      	b.n	8c2 <rtc_count_set_count+0x4e>
     8c0:	2300      	movs	r3, #0
     8c2:	0018      	movs	r0, r3
     8c4:	46bd      	mov	sp, r7
     8c6:	b004      	add	sp, #16
     8c8:	bd80      	pop	{r7, pc}
     8ca:	46c0      	nop			; (mov r8, r8)
     8cc:	000005b5 	.word	0x000005b5
     8d0:	0000ffff 	.word	0x0000ffff

000008d4 <rtc_count_get_count>:
     8d4:	b580      	push	{r7, lr}
     8d6:	b084      	sub	sp, #16
     8d8:	af00      	add	r7, sp, #0
     8da:	6078      	str	r0, [r7, #4]
     8dc:	687b      	ldr	r3, [r7, #4]
     8de:	681b      	ldr	r3, [r3, #0]
     8e0:	60bb      	str	r3, [r7, #8]
     8e2:	687b      	ldr	r3, [r7, #4]
     8e4:	795b      	ldrb	r3, [r3, #5]
     8e6:	2201      	movs	r2, #1
     8e8:	4053      	eors	r3, r2
     8ea:	b2db      	uxtb	r3, r3
     8ec:	2b00      	cmp	r3, #0
     8ee:	d009      	beq.n	904 <rtc_count_get_count+0x30>
     8f0:	68bb      	ldr	r3, [r7, #8]
     8f2:	4a10      	ldr	r2, [pc, #64]	; (934 <rtc_count_get_count+0x60>)
     8f4:	805a      	strh	r2, [r3, #2]
     8f6:	46c0      	nop			; (mov r8, r8)
     8f8:	687b      	ldr	r3, [r7, #4]
     8fa:	0018      	movs	r0, r3
     8fc:	4b0e      	ldr	r3, [pc, #56]	; (938 <rtc_count_get_count+0x64>)
     8fe:	4798      	blx	r3
     900:	1e03      	subs	r3, r0, #0
     902:	d1f9      	bne.n	8f8 <rtc_count_get_count+0x24>
     904:	687b      	ldr	r3, [r7, #4]
     906:	791b      	ldrb	r3, [r3, #4]
     908:	2b00      	cmp	r3, #0
     90a:	d005      	beq.n	918 <rtc_count_get_count+0x44>
     90c:	2b01      	cmp	r3, #1
     90e:	d108      	bne.n	922 <rtc_count_get_count+0x4e>
     910:	68bb      	ldr	r3, [r7, #8]
     912:	691b      	ldr	r3, [r3, #16]
     914:	60fb      	str	r3, [r7, #12]
     916:	e007      	b.n	928 <rtc_count_get_count+0x54>
     918:	68bb      	ldr	r3, [r7, #8]
     91a:	8a1b      	ldrh	r3, [r3, #16]
     91c:	b29b      	uxth	r3, r3
     91e:	60fb      	str	r3, [r7, #12]
     920:	e002      	b.n	928 <rtc_count_get_count+0x54>
     922:	2300      	movs	r3, #0
     924:	60fb      	str	r3, [r7, #12]
     926:	46c0      	nop			; (mov r8, r8)
     928:	68fb      	ldr	r3, [r7, #12]
     92a:	0018      	movs	r0, r3
     92c:	46bd      	mov	sp, r7
     92e:	b004      	add	sp, #16
     930:	bd80      	pop	{r7, pc}
     932:	46c0      	nop			; (mov r8, r8)
     934:	ffff8000 	.word	0xffff8000
     938:	000005b5 	.word	0x000005b5

0000093c <rtc_count_set_compare>:
     93c:	b580      	push	{r7, lr}
     93e:	b086      	sub	sp, #24
     940:	af00      	add	r7, sp, #0
     942:	60f8      	str	r0, [r7, #12]
     944:	60b9      	str	r1, [r7, #8]
     946:	1dfb      	adds	r3, r7, #7
     948:	701a      	strb	r2, [r3, #0]
     94a:	68fb      	ldr	r3, [r7, #12]
     94c:	681b      	ldr	r3, [r3, #0]
     94e:	617b      	str	r3, [r7, #20]
     950:	46c0      	nop			; (mov r8, r8)
     952:	68fb      	ldr	r3, [r7, #12]
     954:	0018      	movs	r0, r3
     956:	4b1a      	ldr	r3, [pc, #104]	; (9c0 <rtc_count_set_compare+0x84>)
     958:	4798      	blx	r3
     95a:	1e03      	subs	r3, r0, #0
     95c:	d1f9      	bne.n	952 <rtc_count_set_compare+0x16>
     95e:	68fb      	ldr	r3, [r7, #12]
     960:	791b      	ldrb	r3, [r3, #4]
     962:	2b00      	cmp	r3, #0
     964:	d00f      	beq.n	986 <rtc_count_set_compare+0x4a>
     966:	2b01      	cmp	r3, #1
     968:	d122      	bne.n	9b0 <rtc_count_set_compare+0x74>
     96a:	1dfb      	adds	r3, r7, #7
     96c:	781b      	ldrb	r3, [r3, #0]
     96e:	2b01      	cmp	r3, #1
     970:	d901      	bls.n	976 <rtc_count_set_compare+0x3a>
     972:	2317      	movs	r3, #23
     974:	e01f      	b.n	9b6 <rtc_count_set_compare+0x7a>
     976:	1dfb      	adds	r3, r7, #7
     978:	781a      	ldrb	r2, [r3, #0]
     97a:	697b      	ldr	r3, [r7, #20]
     97c:	3206      	adds	r2, #6
     97e:	0092      	lsls	r2, r2, #2
     980:	68b9      	ldr	r1, [r7, #8]
     982:	50d1      	str	r1, [r2, r3]
     984:	e016      	b.n	9b4 <rtc_count_set_compare+0x78>
     986:	1dfb      	adds	r3, r7, #7
     988:	781b      	ldrb	r3, [r3, #0]
     98a:	2b02      	cmp	r3, #2
     98c:	d901      	bls.n	992 <rtc_count_set_compare+0x56>
     98e:	2317      	movs	r3, #23
     990:	e011      	b.n	9b6 <rtc_count_set_compare+0x7a>
     992:	68bb      	ldr	r3, [r7, #8]
     994:	4a0b      	ldr	r2, [pc, #44]	; (9c4 <rtc_count_set_compare+0x88>)
     996:	4293      	cmp	r3, r2
     998:	d901      	bls.n	99e <rtc_count_set_compare+0x62>
     99a:	2317      	movs	r3, #23
     99c:	e00b      	b.n	9b6 <rtc_count_set_compare+0x7a>
     99e:	1dfb      	adds	r3, r7, #7
     9a0:	781a      	ldrb	r2, [r3, #0]
     9a2:	68bb      	ldr	r3, [r7, #8]
     9a4:	b299      	uxth	r1, r3
     9a6:	697b      	ldr	r3, [r7, #20]
     9a8:	320c      	adds	r2, #12
     9aa:	0052      	lsls	r2, r2, #1
     9ac:	52d1      	strh	r1, [r2, r3]
     9ae:	e001      	b.n	9b4 <rtc_count_set_compare+0x78>
     9b0:	231a      	movs	r3, #26
     9b2:	e000      	b.n	9b6 <rtc_count_set_compare+0x7a>
     9b4:	2300      	movs	r3, #0
     9b6:	0018      	movs	r0, r3
     9b8:	46bd      	mov	sp, r7
     9ba:	b006      	add	sp, #24
     9bc:	bd80      	pop	{r7, pc}
     9be:	46c0      	nop			; (mov r8, r8)
     9c0:	000005b5 	.word	0x000005b5
     9c4:	0000ffff 	.word	0x0000ffff

000009c8 <rtc_count_set_period>:
     9c8:	b580      	push	{r7, lr}
     9ca:	b084      	sub	sp, #16
     9cc:	af00      	add	r7, sp, #0
     9ce:	6078      	str	r0, [r7, #4]
     9d0:	000a      	movs	r2, r1
     9d2:	1cbb      	adds	r3, r7, #2
     9d4:	801a      	strh	r2, [r3, #0]
     9d6:	687b      	ldr	r3, [r7, #4]
     9d8:	681b      	ldr	r3, [r3, #0]
     9da:	60fb      	str	r3, [r7, #12]
     9dc:	687b      	ldr	r3, [r7, #4]
     9de:	791b      	ldrb	r3, [r3, #4]
     9e0:	2b00      	cmp	r3, #0
     9e2:	d001      	beq.n	9e8 <rtc_count_set_period+0x20>
     9e4:	2315      	movs	r3, #21
     9e6:	e00b      	b.n	a00 <rtc_count_set_period+0x38>
     9e8:	46c0      	nop			; (mov r8, r8)
     9ea:	687b      	ldr	r3, [r7, #4]
     9ec:	0018      	movs	r0, r3
     9ee:	4b06      	ldr	r3, [pc, #24]	; (a08 <rtc_count_set_period+0x40>)
     9f0:	4798      	blx	r3
     9f2:	1e03      	subs	r3, r0, #0
     9f4:	d1f9      	bne.n	9ea <rtc_count_set_period+0x22>
     9f6:	68fb      	ldr	r3, [r7, #12]
     9f8:	1cba      	adds	r2, r7, #2
     9fa:	8812      	ldrh	r2, [r2, #0]
     9fc:	829a      	strh	r2, [r3, #20]
     9fe:	2300      	movs	r3, #0
     a00:	0018      	movs	r0, r3
     a02:	46bd      	mov	sp, r7
     a04:	b004      	add	sp, #16
     a06:	bd80      	pop	{r7, pc}
     a08:	000005b5 	.word	0x000005b5

00000a0c <_rtc_interrupt_handler>:
     a0c:	b580      	push	{r7, lr}
     a0e:	b086      	sub	sp, #24
     a10:	af00      	add	r7, sp, #0
     a12:	6078      	str	r0, [r7, #4]
     a14:	4b31      	ldr	r3, [pc, #196]	; (adc <_rtc_interrupt_handler+0xd0>)
     a16:	687a      	ldr	r2, [r7, #4]
     a18:	0092      	lsls	r2, r2, #2
     a1a:	58d3      	ldr	r3, [r2, r3]
     a1c:	617b      	str	r3, [r7, #20]
     a1e:	697b      	ldr	r3, [r7, #20]
     a20:	681b      	ldr	r3, [r3, #0]
     a22:	613b      	str	r3, [r7, #16]
     a24:	230e      	movs	r3, #14
     a26:	18fb      	adds	r3, r7, r3
     a28:	697a      	ldr	r2, [r7, #20]
     a2a:	8ad2      	ldrh	r2, [r2, #22]
     a2c:	801a      	strh	r2, [r3, #0]
     a2e:	697b      	ldr	r3, [r7, #20]
     a30:	8a9b      	ldrh	r3, [r3, #20]
     a32:	b29a      	uxth	r2, r3
     a34:	230e      	movs	r3, #14
     a36:	18fb      	adds	r3, r7, r3
     a38:	210e      	movs	r1, #14
     a3a:	1879      	adds	r1, r7, r1
     a3c:	8809      	ldrh	r1, [r1, #0]
     a3e:	400a      	ands	r2, r1
     a40:	801a      	strh	r2, [r3, #0]
     a42:	693b      	ldr	r3, [r7, #16]
     a44:	7a1b      	ldrb	r3, [r3, #8]
     a46:	b2da      	uxtb	r2, r3
     a48:	230c      	movs	r3, #12
     a4a:	18fb      	adds	r3, r7, r3
     a4c:	801a      	strh	r2, [r3, #0]
     a4e:	693b      	ldr	r3, [r7, #16]
     a50:	79db      	ldrb	r3, [r3, #7]
     a52:	b2db      	uxtb	r3, r3
     a54:	b29a      	uxth	r2, r3
     a56:	230c      	movs	r3, #12
     a58:	18fb      	adds	r3, r7, r3
     a5a:	210c      	movs	r1, #12
     a5c:	1879      	adds	r1, r7, r1
     a5e:	8809      	ldrh	r1, [r1, #0]
     a60:	400a      	ands	r2, r1
     a62:	801a      	strh	r2, [r3, #0]
     a64:	230c      	movs	r3, #12
     a66:	18fb      	adds	r3, r7, r3
     a68:	881b      	ldrh	r3, [r3, #0]
     a6a:	2280      	movs	r2, #128	; 0x80
     a6c:	4013      	ands	r3, r2
     a6e:	d00c      	beq.n	a8a <_rtc_interrupt_handler+0x7e>
     a70:	230e      	movs	r3, #14
     a72:	18fb      	adds	r3, r7, r3
     a74:	881b      	ldrh	r3, [r3, #0]
     a76:	2204      	movs	r2, #4
     a78:	4013      	ands	r3, r2
     a7a:	d002      	beq.n	a82 <_rtc_interrupt_handler+0x76>
     a7c:	697b      	ldr	r3, [r7, #20]
     a7e:	691b      	ldr	r3, [r3, #16]
     a80:	4798      	blx	r3
     a82:	693b      	ldr	r3, [r7, #16]
     a84:	2280      	movs	r2, #128	; 0x80
     a86:	721a      	strb	r2, [r3, #8]
     a88:	e024      	b.n	ad4 <_rtc_interrupt_handler+0xc8>
     a8a:	230c      	movs	r3, #12
     a8c:	18fb      	adds	r3, r7, r3
     a8e:	881b      	ldrh	r3, [r3, #0]
     a90:	2201      	movs	r2, #1
     a92:	4013      	ands	r3, r2
     a94:	d00c      	beq.n	ab0 <_rtc_interrupt_handler+0xa4>
     a96:	230e      	movs	r3, #14
     a98:	18fb      	adds	r3, r7, r3
     a9a:	881b      	ldrh	r3, [r3, #0]
     a9c:	2201      	movs	r2, #1
     a9e:	4013      	ands	r3, r2
     aa0:	d002      	beq.n	aa8 <_rtc_interrupt_handler+0x9c>
     aa2:	697b      	ldr	r3, [r7, #20]
     aa4:	689b      	ldr	r3, [r3, #8]
     aa6:	4798      	blx	r3
     aa8:	693b      	ldr	r3, [r7, #16]
     aaa:	2201      	movs	r2, #1
     aac:	721a      	strb	r2, [r3, #8]
     aae:	e011      	b.n	ad4 <_rtc_interrupt_handler+0xc8>
     ab0:	230c      	movs	r3, #12
     ab2:	18fb      	adds	r3, r7, r3
     ab4:	881b      	ldrh	r3, [r3, #0]
     ab6:	2202      	movs	r2, #2
     ab8:	4013      	ands	r3, r2
     aba:	d00b      	beq.n	ad4 <_rtc_interrupt_handler+0xc8>
     abc:	230e      	movs	r3, #14
     abe:	18fb      	adds	r3, r7, r3
     ac0:	881b      	ldrh	r3, [r3, #0]
     ac2:	2202      	movs	r2, #2
     ac4:	4013      	ands	r3, r2
     ac6:	d002      	beq.n	ace <_rtc_interrupt_handler+0xc2>
     ac8:	697b      	ldr	r3, [r7, #20]
     aca:	68db      	ldr	r3, [r3, #12]
     acc:	4798      	blx	r3
     ace:	693b      	ldr	r3, [r7, #16]
     ad0:	2202      	movs	r2, #2
     ad2:	721a      	strb	r2, [r3, #8]
     ad4:	46c0      	nop			; (mov r8, r8)
     ad6:	46bd      	mov	sp, r7
     ad8:	b006      	add	sp, #24
     ada:	bd80      	pop	{r7, pc}
     adc:	200000b0 	.word	0x200000b0

00000ae0 <RTC_Handler>:
     ae0:	b580      	push	{r7, lr}
     ae2:	af00      	add	r7, sp, #0
     ae4:	2000      	movs	r0, #0
     ae6:	4b02      	ldr	r3, [pc, #8]	; (af0 <RTC_Handler+0x10>)
     ae8:	4798      	blx	r3
     aea:	46c0      	nop			; (mov r8, r8)
     aec:	46bd      	mov	sp, r7
     aee:	bd80      	pop	{r7, pc}
     af0:	00000a0d 	.word	0x00000a0d

00000af4 <system_pinmux_get_group_from_gpio_pin>:
 *
 * \return Base address of the associated PORT module.
 */
static inline PortGroup* system_pinmux_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
     af4:	b580      	push	{r7, lr}
     af6:	b084      	sub	sp, #16
     af8:	af00      	add	r7, sp, #0
     afa:	0002      	movs	r2, r0
     afc:	1dfb      	adds	r3, r7, #7
     afe:	701a      	strb	r2, [r3, #0]
	uint8_t port_index  = (gpio_pin / 128);
     b00:	230f      	movs	r3, #15
     b02:	18fb      	adds	r3, r7, r3
     b04:	1dfa      	adds	r2, r7, #7
     b06:	7812      	ldrb	r2, [r2, #0]
     b08:	09d2      	lsrs	r2, r2, #7
     b0a:	701a      	strb	r2, [r3, #0]
	uint8_t group_index = (gpio_pin / 32);
     b0c:	230e      	movs	r3, #14
     b0e:	18fb      	adds	r3, r7, r3
     b10:	1dfa      	adds	r2, r7, #7
     b12:	7812      	ldrb	r2, [r2, #0]
     b14:	0952      	lsrs	r2, r2, #5
     b16:	701a      	strb	r2, [r3, #0]

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;
     b18:	4b0d      	ldr	r3, [pc, #52]	; (b50 <system_pinmux_get_group_from_gpio_pin+0x5c>)
     b1a:	60bb      	str	r3, [r7, #8]

	if (port_index < PORT_INST_NUM) {
     b1c:	230f      	movs	r3, #15
     b1e:	18fb      	adds	r3, r7, r3
     b20:	781b      	ldrb	r3, [r3, #0]
     b22:	2b00      	cmp	r3, #0
     b24:	d10f      	bne.n	b46 <system_pinmux_get_group_from_gpio_pin+0x52>
		return &(ports[port_index]->Group[group_index]);
     b26:	230f      	movs	r3, #15
     b28:	18fb      	adds	r3, r7, r3
     b2a:	781b      	ldrb	r3, [r3, #0]
     b2c:	009b      	lsls	r3, r3, #2
     b2e:	2210      	movs	r2, #16
     b30:	4694      	mov	ip, r2
     b32:	44bc      	add	ip, r7
     b34:	4463      	add	r3, ip
     b36:	3b08      	subs	r3, #8
     b38:	681a      	ldr	r2, [r3, #0]
     b3a:	230e      	movs	r3, #14
     b3c:	18fb      	adds	r3, r7, r3
     b3e:	781b      	ldrb	r3, [r3, #0]
     b40:	01db      	lsls	r3, r3, #7
     b42:	18d3      	adds	r3, r2, r3
     b44:	e000      	b.n	b48 <system_pinmux_get_group_from_gpio_pin+0x54>
	} else {
		Assert(false);
		return NULL;
     b46:	2300      	movs	r3, #0
	}
}
     b48:	0018      	movs	r0, r3
     b4a:	46bd      	mov	sp, r7
     b4c:	b004      	add	sp, #16
     b4e:	bd80      	pop	{r7, pc}
     b50:	41004400 	.word	0x41004400

00000b54 <port_get_group_from_gpio_pin>:
 *
 *  \return Base address of the associated PORT module.
 */
static inline PortGroup* port_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
     b54:	b580      	push	{r7, lr}
     b56:	b082      	sub	sp, #8
     b58:	af00      	add	r7, sp, #0
     b5a:	0002      	movs	r2, r0
     b5c:	1dfb      	adds	r3, r7, #7
     b5e:	701a      	strb	r2, [r3, #0]
	return system_pinmux_get_group_from_gpio_pin(gpio_pin);
     b60:	1dfb      	adds	r3, r7, #7
     b62:	781b      	ldrb	r3, [r3, #0]
     b64:	0018      	movs	r0, r3
     b66:	4b03      	ldr	r3, [pc, #12]	; (b74 <port_get_group_from_gpio_pin+0x20>)
     b68:	4798      	blx	r3
     b6a:	0003      	movs	r3, r0
}
     b6c:	0018      	movs	r0, r3
     b6e:	46bd      	mov	sp, r7
     b70:	b002      	add	sp, #8
     b72:	bd80      	pop	{r7, pc}
     b74:	00000af5 	.word	0x00000af5

00000b78 <port_pin_get_input_level>:
 *
 *  \return Status of the port pin's input buffer.
 */
static inline bool port_pin_get_input_level(
		const uint8_t gpio_pin)
{
     b78:	b580      	push	{r7, lr}
     b7a:	b084      	sub	sp, #16
     b7c:	af00      	add	r7, sp, #0
     b7e:	0002      	movs	r2, r0
     b80:	1dfb      	adds	r3, r7, #7
     b82:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
     b84:	1dfb      	adds	r3, r7, #7
     b86:	781b      	ldrb	r3, [r3, #0]
     b88:	0018      	movs	r0, r3
     b8a:	4b0b      	ldr	r3, [pc, #44]	; (bb8 <port_pin_get_input_level+0x40>)
     b8c:	4798      	blx	r3
     b8e:	0003      	movs	r3, r0
     b90:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
     b92:	1dfb      	adds	r3, r7, #7
     b94:	781b      	ldrb	r3, [r3, #0]
     b96:	221f      	movs	r2, #31
     b98:	4013      	ands	r3, r2
     b9a:	2201      	movs	r2, #1
     b9c:	409a      	lsls	r2, r3
     b9e:	0013      	movs	r3, r2
     ba0:	60bb      	str	r3, [r7, #8]

	return (port_base->IN.reg & pin_mask);
     ba2:	68fb      	ldr	r3, [r7, #12]
     ba4:	6a1b      	ldr	r3, [r3, #32]
     ba6:	68ba      	ldr	r2, [r7, #8]
     ba8:	4013      	ands	r3, r2
     baa:	1e5a      	subs	r2, r3, #1
     bac:	4193      	sbcs	r3, r2
     bae:	b2db      	uxtb	r3, r3
}
     bb0:	0018      	movs	r0, r3
     bb2:	46bd      	mov	sp, r7
     bb4:	b004      	add	sp, #16
     bb6:	bd80      	pop	{r7, pc}
     bb8:	00000b55 	.word	0x00000b55

00000bbc <init_wheel>:
#include "wheel.h"
#include <asf.h>
/********************************************************************/

//Init all values to 0
void init_wheel(){
     bbc:	b580      	push	{r7, lr}
     bbe:	af00      	add	r7, sp, #0
	wheel.up_val = 0;
     bc0:	4b10      	ldr	r3, [pc, #64]	; (c04 <init_wheel+0x48>)
     bc2:	2200      	movs	r2, #0
     bc4:	701a      	strb	r2, [r3, #0]
	wheel.down_val = 0;
     bc6:	4b0f      	ldr	r3, [pc, #60]	; (c04 <init_wheel+0x48>)
     bc8:	2200      	movs	r2, #0
     bca:	705a      	strb	r2, [r3, #1]
	wheel.left_val = 0;
     bcc:	4b0d      	ldr	r3, [pc, #52]	; (c04 <init_wheel+0x48>)
     bce:	2200      	movs	r2, #0
     bd0:	709a      	strb	r2, [r3, #2]
	wheel.right_val = 0;
     bd2:	4b0c      	ldr	r3, [pc, #48]	; (c04 <init_wheel+0x48>)
     bd4:	2200      	movs	r2, #0
     bd6:	70da      	strb	r2, [r3, #3]

	wheel.left_state = 0;
     bd8:	4b0a      	ldr	r3, [pc, #40]	; (c04 <init_wheel+0x48>)
     bda:	2200      	movs	r2, #0
     bdc:	711a      	strb	r2, [r3, #4]
	wheel.right_state = 0;
     bde:	4b09      	ldr	r3, [pc, #36]	; (c04 <init_wheel+0x48>)
     be0:	2200      	movs	r2, #0
     be2:	715a      	strb	r2, [r3, #5]
	wheel.up_state = 0;
     be4:	4b07      	ldr	r3, [pc, #28]	; (c04 <init_wheel+0x48>)
     be6:	2200      	movs	r2, #0
     be8:	719a      	strb	r2, [r3, #6]
	wheel.down_state = 0;
     bea:	4b06      	ldr	r3, [pc, #24]	; (c04 <init_wheel+0x48>)
     bec:	2200      	movs	r2, #0
     bee:	71da      	strb	r2, [r3, #7]

	wheel.LR_count = 0;
     bf0:	4b04      	ldr	r3, [pc, #16]	; (c04 <init_wheel+0x48>)
     bf2:	2200      	movs	r2, #0
     bf4:	811a      	strh	r2, [r3, #8]
	wheel.UD_count = 0;
     bf6:	4b03      	ldr	r3, [pc, #12]	; (c04 <init_wheel+0x48>)
     bf8:	2200      	movs	r2, #0
     bfa:	815a      	strh	r2, [r3, #10]

}
     bfc:	46c0      	nop			; (mov r8, r8)
     bfe:	46bd      	mov	sp, r7
     c00:	bd80      	pop	{r7, pc}
     c02:	46c0      	nop			; (mov r8, r8)
     c04:	200000b4 	.word	0x200000b4

00000c08 <update_values>:

/********************************************************************/

//Reads the values of the wheel and updates the struct
void update_values(){
     c08:	b5b0      	push	{r4, r5, r7, lr}
     c0a:	af00      	add	r7, sp, #0
	
	//Read in the new values
	wheel.left_val = getState(LEFT);
     c0c:	2000      	movs	r0, #0
     c0e:	4b1b      	ldr	r3, [pc, #108]	; (c7c <update_values+0x74>)
     c10:	4798      	blx	r3
     c12:	0003      	movs	r3, r0
     c14:	001a      	movs	r2, r3
     c16:	4b1a      	ldr	r3, [pc, #104]	; (c80 <update_values+0x78>)
     c18:	709a      	strb	r2, [r3, #2]
	wheel.right_val = getState(RIGHT);
     c1a:	2001      	movs	r0, #1
     c1c:	4b17      	ldr	r3, [pc, #92]	; (c7c <update_values+0x74>)
     c1e:	4798      	blx	r3
     c20:	0003      	movs	r3, r0
     c22:	001a      	movs	r2, r3
     c24:	4b16      	ldr	r3, [pc, #88]	; (c80 <update_values+0x78>)
     c26:	70da      	strb	r2, [r3, #3]
	wheel.up_val = getState(UP);
     c28:	2002      	movs	r0, #2
     c2a:	4b14      	ldr	r3, [pc, #80]	; (c7c <update_values+0x74>)
     c2c:	4798      	blx	r3
     c2e:	0003      	movs	r3, r0
     c30:	001a      	movs	r2, r3
     c32:	4b13      	ldr	r3, [pc, #76]	; (c80 <update_values+0x78>)
     c34:	701a      	strb	r2, [r3, #0]
	wheel.down_val = getState(DOWN);
     c36:	2003      	movs	r0, #3
     c38:	4b10      	ldr	r3, [pc, #64]	; (c7c <update_values+0x74>)
     c3a:	4798      	blx	r3
     c3c:	0003      	movs	r3, r0
     c3e:	001a      	movs	r2, r3
     c40:	4b0f      	ldr	r3, [pc, #60]	; (c80 <update_values+0x78>)
     c42:	705a      	strb	r2, [r3, #1]
	//wheel.left_val = port_pin_get_input_level(PIN_PA10); //Left value
	//wheel.right_val = port_pin_get_input_level(PIN_PA11); // Right value
	//wheel.up_val = port_pin_get_input_level(PIN_PA06); // Up value
	//wheel.down_val = port_pin_get_input_level(PIN_PA09); // Down value

	saveValues(&wheel.left_val, &wheel.left_state, &wheel.LR_count, 0);
     c44:	4a0f      	ldr	r2, [pc, #60]	; (c84 <update_values+0x7c>)
     c46:	4910      	ldr	r1, [pc, #64]	; (c88 <update_values+0x80>)
     c48:	4810      	ldr	r0, [pc, #64]	; (c8c <update_values+0x84>)
     c4a:	2300      	movs	r3, #0
     c4c:	4c10      	ldr	r4, [pc, #64]	; (c90 <update_values+0x88>)
     c4e:	47a0      	blx	r4
	saveValues(&wheel.right_val, &wheel.right_state, &wheel.LR_count, 1);
     c50:	4a0c      	ldr	r2, [pc, #48]	; (c84 <update_values+0x7c>)
     c52:	4910      	ldr	r1, [pc, #64]	; (c94 <update_values+0x8c>)
     c54:	4810      	ldr	r0, [pc, #64]	; (c98 <update_values+0x90>)
     c56:	2301      	movs	r3, #1
     c58:	4c0d      	ldr	r4, [pc, #52]	; (c90 <update_values+0x88>)
     c5a:	47a0      	blx	r4
	saveValues(&wheel.up_val, &wheel.up_state, &wheel.UD_count, 1);
     c5c:	4a0f      	ldr	r2, [pc, #60]	; (c9c <update_values+0x94>)
     c5e:	4910      	ldr	r1, [pc, #64]	; (ca0 <update_values+0x98>)
     c60:	4807      	ldr	r0, [pc, #28]	; (c80 <update_values+0x78>)
     c62:	2301      	movs	r3, #1
     c64:	4c0a      	ldr	r4, [pc, #40]	; (c90 <update_values+0x88>)
     c66:	47a0      	blx	r4
	saveValues(&wheel.down_val, &wheel.down_state, &wheel.UD_count, 0);
     c68:	4a0c      	ldr	r2, [pc, #48]	; (c9c <update_values+0x94>)
     c6a:	490e      	ldr	r1, [pc, #56]	; (ca4 <update_values+0x9c>)
     c6c:	480e      	ldr	r0, [pc, #56]	; (ca8 <update_values+0xa0>)
     c6e:	2300      	movs	r3, #0
     c70:	4c07      	ldr	r4, [pc, #28]	; (c90 <update_values+0x88>)
     c72:	47a0      	blx	r4
}
     c74:	46c0      	nop			; (mov r8, r8)
     c76:	46bd      	mov	sp, r7
     c78:	bdb0      	pop	{r4, r5, r7, pc}
     c7a:	46c0      	nop			; (mov r8, r8)
     c7c:	00000d09 	.word	0x00000d09
     c80:	200000b4 	.word	0x200000b4
     c84:	200000bc 	.word	0x200000bc
     c88:	200000b8 	.word	0x200000b8
     c8c:	200000b6 	.word	0x200000b6
     c90:	00000cad 	.word	0x00000cad
     c94:	200000b9 	.word	0x200000b9
     c98:	200000b7 	.word	0x200000b7
     c9c:	200000be 	.word	0x200000be
     ca0:	200000ba 	.word	0x200000ba
     ca4:	200000bb 	.word	0x200000bb
     ca8:	200000b5 	.word	0x200000b5

00000cac <saveValues>:

/********************************************************************/

//Updates the values and increments the counter
void saveValues(uint8_t *current, uint8_t *previous, int16_t *count, uint8_t up_down){
     cac:	b580      	push	{r7, lr}
     cae:	b084      	sub	sp, #16
     cb0:	af00      	add	r7, sp, #0
     cb2:	60f8      	str	r0, [r7, #12]
     cb4:	60b9      	str	r1, [r7, #8]
     cb6:	607a      	str	r2, [r7, #4]
     cb8:	001a      	movs	r2, r3
     cba:	1cfb      	adds	r3, r7, #3
     cbc:	701a      	strb	r2, [r3, #0]

	//If the current value is not equal to the previous value
	if(*current != *previous){
     cbe:	68fb      	ldr	r3, [r7, #12]
     cc0:	781a      	ldrb	r2, [r3, #0]
     cc2:	68bb      	ldr	r3, [r7, #8]
     cc4:	781b      	ldrb	r3, [r3, #0]
     cc6:	429a      	cmp	r2, r3
     cc8:	d01a      	beq.n	d00 <saveValues+0x54>
		if(up_down){
     cca:	1cfb      	adds	r3, r7, #3
     ccc:	781b      	ldrb	r3, [r3, #0]
     cce:	2b00      	cmp	r3, #0
     cd0:	d009      	beq.n	ce6 <saveValues+0x3a>
			(*count)++;
     cd2:	687b      	ldr	r3, [r7, #4]
     cd4:	2200      	movs	r2, #0
     cd6:	5e9b      	ldrsh	r3, [r3, r2]
     cd8:	b29b      	uxth	r3, r3
     cda:	3301      	adds	r3, #1
     cdc:	b29b      	uxth	r3, r3
     cde:	b21a      	sxth	r2, r3
     ce0:	687b      	ldr	r3, [r7, #4]
     ce2:	801a      	strh	r2, [r3, #0]
     ce4:	e008      	b.n	cf8 <saveValues+0x4c>
		}

		else{
			(*count)--;
     ce6:	687b      	ldr	r3, [r7, #4]
     ce8:	2200      	movs	r2, #0
     cea:	5e9b      	ldrsh	r3, [r3, r2]
     cec:	b29b      	uxth	r3, r3
     cee:	3b01      	subs	r3, #1
     cf0:	b29b      	uxth	r3, r3
     cf2:	b21a      	sxth	r2, r3
     cf4:	687b      	ldr	r3, [r7, #4]
     cf6:	801a      	strh	r2, [r3, #0]
		}
		
		*previous = *current;
     cf8:	68fb      	ldr	r3, [r7, #12]
     cfa:	781a      	ldrb	r2, [r3, #0]
     cfc:	68bb      	ldr	r3, [r7, #8]
     cfe:	701a      	strb	r2, [r3, #0]
	}
}
     d00:	46c0      	nop			; (mov r8, r8)
     d02:	46bd      	mov	sp, r7
     d04:	b004      	add	sp, #16
     d06:	bd80      	pop	{r7, pc}

00000d08 <getState>:
// 	}
// }

/********************************************************************/

uint8_t getState(uint8_t button_num){
     d08:	b580      	push	{r7, lr}
     d0a:	b082      	sub	sp, #8
     d0c:	af00      	add	r7, sp, #0
     d0e:	0002      	movs	r2, r0
     d10:	1dfb      	adds	r3, r7, #7
     d12:	701a      	strb	r2, [r3, #0]
	switch(button_num){
     d14:	1dfb      	adds	r3, r7, #7
     d16:	781b      	ldrb	r3, [r3, #0]
     d18:	2b01      	cmp	r3, #1
     d1a:	d00d      	beq.n	d38 <getState+0x30>
     d1c:	dc02      	bgt.n	d24 <getState+0x1c>
     d1e:	2b00      	cmp	r3, #0
     d20:	d005      	beq.n	d2e <getState+0x26>
     d22:	e018      	b.n	d56 <getState+0x4e>
     d24:	2b02      	cmp	r3, #2
     d26:	d00c      	beq.n	d42 <getState+0x3a>
     d28:	2b03      	cmp	r3, #3
     d2a:	d00f      	beq.n	d4c <getState+0x44>
     d2c:	e013      	b.n	d56 <getState+0x4e>
		case LEFT:
			return port_pin_get_input_level(PIN_PA10);
     d2e:	200a      	movs	r0, #10
     d30:	4b0b      	ldr	r3, [pc, #44]	; (d60 <getState+0x58>)
     d32:	4798      	blx	r3
     d34:	0003      	movs	r3, r0
     d36:	e00e      	b.n	d56 <getState+0x4e>
		break;

		case RIGHT:
			return port_pin_get_input_level(PIN_PA11);
     d38:	200b      	movs	r0, #11
     d3a:	4b09      	ldr	r3, [pc, #36]	; (d60 <getState+0x58>)
     d3c:	4798      	blx	r3
     d3e:	0003      	movs	r3, r0
     d40:	e009      	b.n	d56 <getState+0x4e>
		break;

		case UP:
			return port_pin_get_input_level(PIN_PA06);
     d42:	2006      	movs	r0, #6
     d44:	4b06      	ldr	r3, [pc, #24]	; (d60 <getState+0x58>)
     d46:	4798      	blx	r3
     d48:	0003      	movs	r3, r0
     d4a:	e004      	b.n	d56 <getState+0x4e>
		break;

		case DOWN:
			return port_pin_get_input_level(PIN_PA09);
     d4c:	2009      	movs	r0, #9
     d4e:	4b04      	ldr	r3, [pc, #16]	; (d60 <getState+0x58>)
     d50:	4798      	blx	r3
     d52:	0003      	movs	r3, r0
     d54:	e7ff      	b.n	d56 <getState+0x4e>
		break;
	}
}
     d56:	0018      	movs	r0, r3
     d58:	46bd      	mov	sp, r7
     d5a:	b002      	add	sp, #8
     d5c:	bd80      	pop	{r7, pc}
     d5e:	46c0      	nop			; (mov r8, r8)
     d60:	00000b79 	.word	0x00000b79

00000d64 <getScroll>:

/********************************************************************/

void getScroll(int8_t *LR_scroll, int8_t *UD_scroll){
     d64:	b580      	push	{r7, lr}
     d66:	b084      	sub	sp, #16
     d68:	af00      	add	r7, sp, #0
     d6a:	6078      	str	r0, [r7, #4]
     d6c:	6039      	str	r1, [r7, #0]
	int8_t send_LR_val = (int8_t)(wheel.LR_count);
     d6e:	4b24      	ldr	r3, [pc, #144]	; (e00 <getScroll+0x9c>)
     d70:	2208      	movs	r2, #8
     d72:	5e9a      	ldrsh	r2, [r3, r2]
     d74:	230f      	movs	r3, #15
     d76:	18fb      	adds	r3, r7, r3
     d78:	701a      	strb	r2, [r3, #0]
	int8_t send_UD_val = (int8_t)(wheel.UD_count);
     d7a:	4b21      	ldr	r3, [pc, #132]	; (e00 <getScroll+0x9c>)
     d7c:	220a      	movs	r2, #10
     d7e:	5e9a      	ldrsh	r2, [r3, r2]
     d80:	230e      	movs	r3, #14
     d82:	18fb      	adds	r3, r7, r3
     d84:	701a      	strb	r2, [r3, #0]

	if(send_LR_val > MAX_POS_SCROLL){
     d86:	230f      	movs	r3, #15
     d88:	18fb      	adds	r3, r7, r3
     d8a:	781b      	ldrb	r3, [r3, #0]
     d8c:	b25b      	sxtb	r3, r3
     d8e:	2b64      	cmp	r3, #100	; 0x64
     d90:	dd03      	ble.n	d9a <getScroll+0x36>
		send_LR_val = MAX_POS_SCROLL;
     d92:	230f      	movs	r3, #15
     d94:	18fb      	adds	r3, r7, r3
     d96:	2264      	movs	r2, #100	; 0x64
     d98:	701a      	strb	r2, [r3, #0]
	}

	if(send_LR_val < MAX_NEG_SCROLL){
     d9a:	230f      	movs	r3, #15
     d9c:	18fb      	adds	r3, r7, r3
     d9e:	781b      	ldrb	r3, [r3, #0]
     da0:	b25b      	sxtb	r3, r3
     da2:	3364      	adds	r3, #100	; 0x64
     da4:	da03      	bge.n	dae <getScroll+0x4a>
		send_LR_val = MAX_NEG_SCROLL;
     da6:	230f      	movs	r3, #15
     da8:	18fb      	adds	r3, r7, r3
     daa:	229c      	movs	r2, #156	; 0x9c
     dac:	701a      	strb	r2, [r3, #0]
	}

	if(send_UD_val > MAX_POS_SCROLL){
     dae:	230e      	movs	r3, #14
     db0:	18fb      	adds	r3, r7, r3
     db2:	781b      	ldrb	r3, [r3, #0]
     db4:	b25b      	sxtb	r3, r3
     db6:	2b64      	cmp	r3, #100	; 0x64
     db8:	dd03      	ble.n	dc2 <getScroll+0x5e>
		send_UD_val = MAX_POS_SCROLL;
     dba:	230e      	movs	r3, #14
     dbc:	18fb      	adds	r3, r7, r3
     dbe:	2264      	movs	r2, #100	; 0x64
     dc0:	701a      	strb	r2, [r3, #0]
	}

	if(send_UD_val < MAX_NEG_SCROLL){
     dc2:	230e      	movs	r3, #14
     dc4:	18fb      	adds	r3, r7, r3
     dc6:	781b      	ldrb	r3, [r3, #0]
     dc8:	b25b      	sxtb	r3, r3
     dca:	3364      	adds	r3, #100	; 0x64
     dcc:	da03      	bge.n	dd6 <getScroll+0x72>
		send_UD_val = MAX_NEG_SCROLL;
     dce:	230e      	movs	r3, #14
     dd0:	18fb      	adds	r3, r7, r3
     dd2:	229c      	movs	r2, #156	; 0x9c
     dd4:	701a      	strb	r2, [r3, #0]
	}

	wheel.LR_count = 0;
     dd6:	4b0a      	ldr	r3, [pc, #40]	; (e00 <getScroll+0x9c>)
     dd8:	2200      	movs	r2, #0
     dda:	811a      	strh	r2, [r3, #8]
	wheel.UD_count = 0;
     ddc:	4b08      	ldr	r3, [pc, #32]	; (e00 <getScroll+0x9c>)
     dde:	2200      	movs	r2, #0
     de0:	815a      	strh	r2, [r3, #10]

	*LR_scroll = send_LR_val;
     de2:	687b      	ldr	r3, [r7, #4]
     de4:	220f      	movs	r2, #15
     de6:	18ba      	adds	r2, r7, r2
     de8:	7812      	ldrb	r2, [r2, #0]
     dea:	701a      	strb	r2, [r3, #0]
	*UD_scroll = send_UD_val;
     dec:	683b      	ldr	r3, [r7, #0]
     dee:	220e      	movs	r2, #14
     df0:	18ba      	adds	r2, r7, r2
     df2:	7812      	ldrb	r2, [r2, #0]
     df4:	701a      	strb	r2, [r3, #0]
     df6:	46c0      	nop			; (mov r8, r8)
     df8:	46bd      	mov	sp, r7
     dfa:	b004      	add	sp, #16
     dfc:	bd80      	pop	{r7, pc}
     dfe:	46c0      	nop			; (mov r8, r8)
     e00:	200000b4 	.word	0x200000b4

00000e04 <_extint_get_eic_from_channel>:
     e04:	b580      	push	{r7, lr}
     e06:	b084      	sub	sp, #16
     e08:	af00      	add	r7, sp, #0
     e0a:	0002      	movs	r2, r0
     e0c:	1dfb      	adds	r3, r7, #7
     e0e:	701a      	strb	r2, [r3, #0]
     e10:	230f      	movs	r3, #15
     e12:	18fb      	adds	r3, r7, r3
     e14:	1dfa      	adds	r2, r7, #7
     e16:	7812      	ldrb	r2, [r2, #0]
     e18:	0952      	lsrs	r2, r2, #5
     e1a:	701a      	strb	r2, [r3, #0]
     e1c:	230f      	movs	r3, #15
     e1e:	18fb      	adds	r3, r7, r3
     e20:	781b      	ldrb	r3, [r3, #0]
     e22:	2b00      	cmp	r3, #0
     e24:	d10c      	bne.n	e40 <_extint_get_eic_from_channel+0x3c>
     e26:	4b09      	ldr	r3, [pc, #36]	; (e4c <_extint_get_eic_from_channel+0x48>)
     e28:	60bb      	str	r3, [r7, #8]
     e2a:	230f      	movs	r3, #15
     e2c:	18fb      	adds	r3, r7, r3
     e2e:	781b      	ldrb	r3, [r3, #0]
     e30:	009b      	lsls	r3, r3, #2
     e32:	2210      	movs	r2, #16
     e34:	4694      	mov	ip, r2
     e36:	44bc      	add	ip, r7
     e38:	4463      	add	r3, ip
     e3a:	3b08      	subs	r3, #8
     e3c:	681b      	ldr	r3, [r3, #0]
     e3e:	e000      	b.n	e42 <_extint_get_eic_from_channel+0x3e>
     e40:	2300      	movs	r3, #0
     e42:	0018      	movs	r0, r3
     e44:	46bd      	mov	sp, r7
     e46:	b004      	add	sp, #16
     e48:	bd80      	pop	{r7, pc}
     e4a:	46c0      	nop			; (mov r8, r8)
     e4c:	40001800 	.word	0x40001800

00000e50 <extint_chan_is_detected>:
     e50:	b580      	push	{r7, lr}
     e52:	b084      	sub	sp, #16
     e54:	af00      	add	r7, sp, #0
     e56:	0002      	movs	r2, r0
     e58:	1dfb      	adds	r3, r7, #7
     e5a:	701a      	strb	r2, [r3, #0]
     e5c:	1dfb      	adds	r3, r7, #7
     e5e:	781b      	ldrb	r3, [r3, #0]
     e60:	0018      	movs	r0, r3
     e62:	4b0b      	ldr	r3, [pc, #44]	; (e90 <extint_chan_is_detected+0x40>)
     e64:	4798      	blx	r3
     e66:	0003      	movs	r3, r0
     e68:	60fb      	str	r3, [r7, #12]
     e6a:	1dfb      	adds	r3, r7, #7
     e6c:	781b      	ldrb	r3, [r3, #0]
     e6e:	221f      	movs	r2, #31
     e70:	4013      	ands	r3, r2
     e72:	2201      	movs	r2, #1
     e74:	409a      	lsls	r2, r3
     e76:	0013      	movs	r3, r2
     e78:	60bb      	str	r3, [r7, #8]
     e7a:	68fb      	ldr	r3, [r7, #12]
     e7c:	691b      	ldr	r3, [r3, #16]
     e7e:	68ba      	ldr	r2, [r7, #8]
     e80:	4013      	ands	r3, r2
     e82:	1e5a      	subs	r2, r3, #1
     e84:	4193      	sbcs	r3, r2
     e86:	b2db      	uxtb	r3, r3
     e88:	0018      	movs	r0, r3
     e8a:	46bd      	mov	sp, r7
     e8c:	b004      	add	sp, #16
     e8e:	bd80      	pop	{r7, pc}
     e90:	00000e05 	.word	0x00000e05

00000e94 <extint_chan_clear_detected>:
     e94:	b580      	push	{r7, lr}
     e96:	b084      	sub	sp, #16
     e98:	af00      	add	r7, sp, #0
     e9a:	0002      	movs	r2, r0
     e9c:	1dfb      	adds	r3, r7, #7
     e9e:	701a      	strb	r2, [r3, #0]
     ea0:	1dfb      	adds	r3, r7, #7
     ea2:	781b      	ldrb	r3, [r3, #0]
     ea4:	0018      	movs	r0, r3
     ea6:	4b09      	ldr	r3, [pc, #36]	; (ecc <extint_chan_clear_detected+0x38>)
     ea8:	4798      	blx	r3
     eaa:	0003      	movs	r3, r0
     eac:	60fb      	str	r3, [r7, #12]
     eae:	1dfb      	adds	r3, r7, #7
     eb0:	781b      	ldrb	r3, [r3, #0]
     eb2:	221f      	movs	r2, #31
     eb4:	4013      	ands	r3, r2
     eb6:	2201      	movs	r2, #1
     eb8:	409a      	lsls	r2, r3
     eba:	0013      	movs	r3, r2
     ebc:	60bb      	str	r3, [r7, #8]
     ebe:	68fb      	ldr	r3, [r7, #12]
     ec0:	68ba      	ldr	r2, [r7, #8]
     ec2:	611a      	str	r2, [r3, #16]
     ec4:	46c0      	nop			; (mov r8, r8)
     ec6:	46bd      	mov	sp, r7
     ec8:	b004      	add	sp, #16
     eca:	bd80      	pop	{r7, pc}
     ecc:	00000e05 	.word	0x00000e05

00000ed0 <extint_register_callback>:
     ed0:	b580      	push	{r7, lr}
     ed2:	b082      	sub	sp, #8
     ed4:	af00      	add	r7, sp, #0
     ed6:	6078      	str	r0, [r7, #4]
     ed8:	0008      	movs	r0, r1
     eda:	0011      	movs	r1, r2
     edc:	1cfb      	adds	r3, r7, #3
     ede:	1c02      	adds	r2, r0, #0
     ee0:	701a      	strb	r2, [r3, #0]
     ee2:	1cbb      	adds	r3, r7, #2
     ee4:	1c0a      	adds	r2, r1, #0
     ee6:	701a      	strb	r2, [r3, #0]
     ee8:	1cbb      	adds	r3, r7, #2
     eea:	781b      	ldrb	r3, [r3, #0]
     eec:	2b00      	cmp	r3, #0
     eee:	d001      	beq.n	ef4 <extint_register_callback+0x24>
     ef0:	2317      	movs	r3, #23
     ef2:	e019      	b.n	f28 <extint_register_callback+0x58>
     ef4:	1cfb      	adds	r3, r7, #3
     ef6:	781a      	ldrb	r2, [r3, #0]
     ef8:	4b0d      	ldr	r3, [pc, #52]	; (f30 <extint_register_callback+0x60>)
     efa:	0092      	lsls	r2, r2, #2
     efc:	58d3      	ldr	r3, [r2, r3]
     efe:	2b00      	cmp	r3, #0
     f00:	d107      	bne.n	f12 <extint_register_callback+0x42>
     f02:	1cfb      	adds	r3, r7, #3
     f04:	781a      	ldrb	r2, [r3, #0]
     f06:	4b0a      	ldr	r3, [pc, #40]	; (f30 <extint_register_callback+0x60>)
     f08:	0092      	lsls	r2, r2, #2
     f0a:	6879      	ldr	r1, [r7, #4]
     f0c:	50d1      	str	r1, [r2, r3]
     f0e:	2300      	movs	r3, #0
     f10:	e00a      	b.n	f28 <extint_register_callback+0x58>
     f12:	1cfb      	adds	r3, r7, #3
     f14:	781a      	ldrb	r2, [r3, #0]
     f16:	4b06      	ldr	r3, [pc, #24]	; (f30 <extint_register_callback+0x60>)
     f18:	0092      	lsls	r2, r2, #2
     f1a:	58d2      	ldr	r2, [r2, r3]
     f1c:	687b      	ldr	r3, [r7, #4]
     f1e:	429a      	cmp	r2, r3
     f20:	d101      	bne.n	f26 <extint_register_callback+0x56>
     f22:	2300      	movs	r3, #0
     f24:	e000      	b.n	f28 <extint_register_callback+0x58>
     f26:	231d      	movs	r3, #29
     f28:	0018      	movs	r0, r3
     f2a:	46bd      	mov	sp, r7
     f2c:	b002      	add	sp, #8
     f2e:	bd80      	pop	{r7, pc}
     f30:	20000070 	.word	0x20000070

00000f34 <extint_chan_enable_callback>:
     f34:	b580      	push	{r7, lr}
     f36:	b084      	sub	sp, #16
     f38:	af00      	add	r7, sp, #0
     f3a:	0002      	movs	r2, r0
     f3c:	1dfb      	adds	r3, r7, #7
     f3e:	701a      	strb	r2, [r3, #0]
     f40:	1dbb      	adds	r3, r7, #6
     f42:	1c0a      	adds	r2, r1, #0
     f44:	701a      	strb	r2, [r3, #0]
     f46:	1dbb      	adds	r3, r7, #6
     f48:	781b      	ldrb	r3, [r3, #0]
     f4a:	2b00      	cmp	r3, #0
     f4c:	d10e      	bne.n	f6c <extint_chan_enable_callback+0x38>
     f4e:	1dfb      	adds	r3, r7, #7
     f50:	781b      	ldrb	r3, [r3, #0]
     f52:	0018      	movs	r0, r3
     f54:	4b08      	ldr	r3, [pc, #32]	; (f78 <extint_chan_enable_callback+0x44>)
     f56:	4798      	blx	r3
     f58:	0003      	movs	r3, r0
     f5a:	60fb      	str	r3, [r7, #12]
     f5c:	1dfb      	adds	r3, r7, #7
     f5e:	781b      	ldrb	r3, [r3, #0]
     f60:	2201      	movs	r2, #1
     f62:	409a      	lsls	r2, r3
     f64:	68fb      	ldr	r3, [r7, #12]
     f66:	60da      	str	r2, [r3, #12]
     f68:	2300      	movs	r3, #0
     f6a:	e000      	b.n	f6e <extint_chan_enable_callback+0x3a>
     f6c:	2317      	movs	r3, #23
     f6e:	0018      	movs	r0, r3
     f70:	46bd      	mov	sp, r7
     f72:	b004      	add	sp, #16
     f74:	bd80      	pop	{r7, pc}
     f76:	46c0      	nop			; (mov r8, r8)
     f78:	00000e05 	.word	0x00000e05

00000f7c <EIC_Handler>:
     f7c:	b580      	push	{r7, lr}
     f7e:	af00      	add	r7, sp, #0
     f80:	4b15      	ldr	r3, [pc, #84]	; (fd8 <EIC_Handler+0x5c>)
     f82:	2200      	movs	r2, #0
     f84:	701a      	strb	r2, [r3, #0]
     f86:	e020      	b.n	fca <EIC_Handler+0x4e>
     f88:	4b13      	ldr	r3, [pc, #76]	; (fd8 <EIC_Handler+0x5c>)
     f8a:	781b      	ldrb	r3, [r3, #0]
     f8c:	0018      	movs	r0, r3
     f8e:	4b13      	ldr	r3, [pc, #76]	; (fdc <EIC_Handler+0x60>)
     f90:	4798      	blx	r3
     f92:	1e03      	subs	r3, r0, #0
     f94:	d013      	beq.n	fbe <EIC_Handler+0x42>
     f96:	4b10      	ldr	r3, [pc, #64]	; (fd8 <EIC_Handler+0x5c>)
     f98:	781b      	ldrb	r3, [r3, #0]
     f9a:	0018      	movs	r0, r3
     f9c:	4b10      	ldr	r3, [pc, #64]	; (fe0 <EIC_Handler+0x64>)
     f9e:	4798      	blx	r3
     fa0:	4b0d      	ldr	r3, [pc, #52]	; (fd8 <EIC_Handler+0x5c>)
     fa2:	781b      	ldrb	r3, [r3, #0]
     fa4:	001a      	movs	r2, r3
     fa6:	4b0f      	ldr	r3, [pc, #60]	; (fe4 <EIC_Handler+0x68>)
     fa8:	0092      	lsls	r2, r2, #2
     faa:	58d3      	ldr	r3, [r2, r3]
     fac:	2b00      	cmp	r3, #0
     fae:	d006      	beq.n	fbe <EIC_Handler+0x42>
     fb0:	4b09      	ldr	r3, [pc, #36]	; (fd8 <EIC_Handler+0x5c>)
     fb2:	781b      	ldrb	r3, [r3, #0]
     fb4:	001a      	movs	r2, r3
     fb6:	4b0b      	ldr	r3, [pc, #44]	; (fe4 <EIC_Handler+0x68>)
     fb8:	0092      	lsls	r2, r2, #2
     fba:	58d3      	ldr	r3, [r2, r3]
     fbc:	4798      	blx	r3
     fbe:	4b06      	ldr	r3, [pc, #24]	; (fd8 <EIC_Handler+0x5c>)
     fc0:	781b      	ldrb	r3, [r3, #0]
     fc2:	3301      	adds	r3, #1
     fc4:	b2da      	uxtb	r2, r3
     fc6:	4b04      	ldr	r3, [pc, #16]	; (fd8 <EIC_Handler+0x5c>)
     fc8:	701a      	strb	r2, [r3, #0]
     fca:	4b03      	ldr	r3, [pc, #12]	; (fd8 <EIC_Handler+0x5c>)
     fcc:	781b      	ldrb	r3, [r3, #0]
     fce:	2b0f      	cmp	r3, #15
     fd0:	d9da      	bls.n	f88 <EIC_Handler+0xc>
     fd2:	46c0      	nop			; (mov r8, r8)
     fd4:	46bd      	mov	sp, r7
     fd6:	bd80      	pop	{r7, pc}
     fd8:	200000c0 	.word	0x200000c0
     fdc:	00000e51 	.word	0x00000e51
     fe0:	00000e95 	.word	0x00000e95
     fe4:	20000070 	.word	0x20000070

00000fe8 <system_gclk_chan_get_config_defaults>:
     fe8:	b580      	push	{r7, lr}
     fea:	b082      	sub	sp, #8
     fec:	af00      	add	r7, sp, #0
     fee:	6078      	str	r0, [r7, #4]
     ff0:	687b      	ldr	r3, [r7, #4]
     ff2:	2200      	movs	r2, #0
     ff4:	701a      	strb	r2, [r3, #0]
     ff6:	46c0      	nop			; (mov r8, r8)
     ff8:	46bd      	mov	sp, r7
     ffa:	b002      	add	sp, #8
     ffc:	bd80      	pop	{r7, pc}
     ffe:	46c0      	nop			; (mov r8, r8)

00001000 <system_apb_clock_set_mask>:
    1000:	b580      	push	{r7, lr}
    1002:	b082      	sub	sp, #8
    1004:	af00      	add	r7, sp, #0
    1006:	0002      	movs	r2, r0
    1008:	6039      	str	r1, [r7, #0]
    100a:	1dfb      	adds	r3, r7, #7
    100c:	701a      	strb	r2, [r3, #0]
    100e:	1dfb      	adds	r3, r7, #7
    1010:	781b      	ldrb	r3, [r3, #0]
    1012:	2b01      	cmp	r3, #1
    1014:	d00a      	beq.n	102c <system_apb_clock_set_mask+0x2c>
    1016:	2b02      	cmp	r3, #2
    1018:	d00f      	beq.n	103a <system_apb_clock_set_mask+0x3a>
    101a:	2b00      	cmp	r3, #0
    101c:	d114      	bne.n	1048 <system_apb_clock_set_mask+0x48>
    101e:	4b0e      	ldr	r3, [pc, #56]	; (1058 <system_apb_clock_set_mask+0x58>)
    1020:	4a0d      	ldr	r2, [pc, #52]	; (1058 <system_apb_clock_set_mask+0x58>)
    1022:	6991      	ldr	r1, [r2, #24]
    1024:	683a      	ldr	r2, [r7, #0]
    1026:	430a      	orrs	r2, r1
    1028:	619a      	str	r2, [r3, #24]
    102a:	e00f      	b.n	104c <system_apb_clock_set_mask+0x4c>
    102c:	4b0a      	ldr	r3, [pc, #40]	; (1058 <system_apb_clock_set_mask+0x58>)
    102e:	4a0a      	ldr	r2, [pc, #40]	; (1058 <system_apb_clock_set_mask+0x58>)
    1030:	69d1      	ldr	r1, [r2, #28]
    1032:	683a      	ldr	r2, [r7, #0]
    1034:	430a      	orrs	r2, r1
    1036:	61da      	str	r2, [r3, #28]
    1038:	e008      	b.n	104c <system_apb_clock_set_mask+0x4c>
    103a:	4b07      	ldr	r3, [pc, #28]	; (1058 <system_apb_clock_set_mask+0x58>)
    103c:	4a06      	ldr	r2, [pc, #24]	; (1058 <system_apb_clock_set_mask+0x58>)
    103e:	6a11      	ldr	r1, [r2, #32]
    1040:	683a      	ldr	r2, [r7, #0]
    1042:	430a      	orrs	r2, r1
    1044:	621a      	str	r2, [r3, #32]
    1046:	e001      	b.n	104c <system_apb_clock_set_mask+0x4c>
    1048:	2317      	movs	r3, #23
    104a:	e000      	b.n	104e <system_apb_clock_set_mask+0x4e>
    104c:	2300      	movs	r3, #0
    104e:	0018      	movs	r0, r3
    1050:	46bd      	mov	sp, r7
    1052:	b002      	add	sp, #8
    1054:	bd80      	pop	{r7, pc}
    1056:	46c0      	nop			; (mov r8, r8)
    1058:	40000400 	.word	0x40000400

0000105c <system_pinmux_get_config_defaults>:
    105c:	b580      	push	{r7, lr}
    105e:	b082      	sub	sp, #8
    1060:	af00      	add	r7, sp, #0
    1062:	6078      	str	r0, [r7, #4]
    1064:	687b      	ldr	r3, [r7, #4]
    1066:	2280      	movs	r2, #128	; 0x80
    1068:	701a      	strb	r2, [r3, #0]
    106a:	687b      	ldr	r3, [r7, #4]
    106c:	2200      	movs	r2, #0
    106e:	705a      	strb	r2, [r3, #1]
    1070:	687b      	ldr	r3, [r7, #4]
    1072:	2201      	movs	r2, #1
    1074:	709a      	strb	r2, [r3, #2]
    1076:	687b      	ldr	r3, [r7, #4]
    1078:	2200      	movs	r2, #0
    107a:	70da      	strb	r2, [r3, #3]
    107c:	46c0      	nop			; (mov r8, r8)
    107e:	46bd      	mov	sp, r7
    1080:	b002      	add	sp, #8
    1082:	bd80      	pop	{r7, pc}

00001084 <_tcc_get_inst_index>:
    1084:	b580      	push	{r7, lr}
    1086:	b084      	sub	sp, #16
    1088:	af00      	add	r7, sp, #0
    108a:	6078      	str	r0, [r7, #4]
    108c:	2300      	movs	r3, #0
    108e:	60fb      	str	r3, [r7, #12]
    1090:	e00c      	b.n	10ac <_tcc_get_inst_index+0x28>
    1092:	4b0a      	ldr	r3, [pc, #40]	; (10bc <_tcc_get_inst_index+0x38>)
    1094:	68fa      	ldr	r2, [r7, #12]
    1096:	0092      	lsls	r2, r2, #2
    1098:	58d2      	ldr	r2, [r2, r3]
    109a:	687b      	ldr	r3, [r7, #4]
    109c:	429a      	cmp	r2, r3
    109e:	d102      	bne.n	10a6 <_tcc_get_inst_index+0x22>
    10a0:	68fb      	ldr	r3, [r7, #12]
    10a2:	b2db      	uxtb	r3, r3
    10a4:	e006      	b.n	10b4 <_tcc_get_inst_index+0x30>
    10a6:	68fb      	ldr	r3, [r7, #12]
    10a8:	3301      	adds	r3, #1
    10aa:	60fb      	str	r3, [r7, #12]
    10ac:	68fb      	ldr	r3, [r7, #12]
    10ae:	2b02      	cmp	r3, #2
    10b0:	d9ef      	bls.n	1092 <_tcc_get_inst_index+0xe>
    10b2:	2300      	movs	r3, #0
    10b4:	0018      	movs	r0, r3
    10b6:	46bd      	mov	sp, r7
    10b8:	b004      	add	sp, #16
    10ba:	bd80      	pop	{r7, pc}
    10bc:	000057a4 	.word	0x000057a4

000010c0 <tcc_get_config_defaults>:
    10c0:	b590      	push	{r4, r7, lr}
    10c2:	b085      	sub	sp, #20
    10c4:	af00      	add	r7, sp, #0
    10c6:	6078      	str	r0, [r7, #4]
    10c8:	6039      	str	r1, [r7, #0]
    10ca:	230f      	movs	r3, #15
    10cc:	18fc      	adds	r4, r7, r3
    10ce:	683b      	ldr	r3, [r7, #0]
    10d0:	0018      	movs	r0, r3
    10d2:	4bad      	ldr	r3, [pc, #692]	; (1388 <tcc_get_config_defaults+0x2c8>)
    10d4:	4798      	blx	r3
    10d6:	0003      	movs	r3, r0
    10d8:	7023      	strb	r3, [r4, #0]
    10da:	687b      	ldr	r3, [r7, #4]
    10dc:	2200      	movs	r2, #0
    10de:	601a      	str	r2, [r3, #0]
    10e0:	230f      	movs	r3, #15
    10e2:	18fb      	adds	r3, r7, r3
    10e4:	781a      	ldrb	r2, [r3, #0]
    10e6:	4ba9      	ldr	r3, [pc, #676]	; (138c <tcc_get_config_defaults+0x2cc>)
    10e8:	0092      	lsls	r2, r2, #2
    10ea:	58d2      	ldr	r2, [r2, r3]
    10ec:	687b      	ldr	r3, [r7, #4]
    10ee:	605a      	str	r2, [r3, #4]
    10f0:	687b      	ldr	r3, [r7, #4]
    10f2:	2200      	movs	r2, #0
    10f4:	729a      	strb	r2, [r3, #10]
    10f6:	687b      	ldr	r3, [r7, #4]
    10f8:	2200      	movs	r2, #0
    10fa:	72da      	strb	r2, [r3, #11]
    10fc:	687b      	ldr	r3, [r7, #4]
    10fe:	2200      	movs	r2, #0
    1100:	731a      	strb	r2, [r3, #12]
    1102:	687b      	ldr	r3, [r7, #4]
    1104:	2200      	movs	r2, #0
    1106:	725a      	strb	r2, [r3, #9]
    1108:	687b      	ldr	r3, [r7, #4]
    110a:	2200      	movs	r2, #0
    110c:	721a      	strb	r2, [r3, #8]
    110e:	687b      	ldr	r3, [r7, #4]
    1110:	2200      	movs	r2, #0
    1112:	61da      	str	r2, [r3, #28]
    1114:	687b      	ldr	r3, [r7, #4]
    1116:	2200      	movs	r2, #0
    1118:	621a      	str	r2, [r3, #32]
    111a:	687b      	ldr	r3, [r7, #4]
    111c:	2200      	movs	r2, #0
    111e:	625a      	str	r2, [r3, #36]	; 0x24
    1120:	687b      	ldr	r3, [r7, #4]
    1122:	2200      	movs	r2, #0
    1124:	629a      	str	r2, [r3, #40]	; 0x28
    1126:	687b      	ldr	r3, [r7, #4]
    1128:	2200      	movs	r2, #0
    112a:	751a      	strb	r2, [r3, #20]
    112c:	687b      	ldr	r3, [r7, #4]
    112e:	2200      	movs	r2, #0
    1130:	755a      	strb	r2, [r3, #21]
    1132:	687b      	ldr	r3, [r7, #4]
    1134:	2200      	movs	r2, #0
    1136:	759a      	strb	r2, [r3, #22]
    1138:	687b      	ldr	r3, [r7, #4]
    113a:	2200      	movs	r2, #0
    113c:	75da      	strb	r2, [r3, #23]
    113e:	687b      	ldr	r3, [r7, #4]
    1140:	2200      	movs	r2, #0
    1142:	761a      	strb	r2, [r3, #24]
    1144:	687b      	ldr	r3, [r7, #4]
    1146:	2200      	movs	r2, #0
    1148:	765a      	strb	r2, [r3, #25]
    114a:	687b      	ldr	r3, [r7, #4]
    114c:	2200      	movs	r2, #0
    114e:	741a      	strb	r2, [r3, #16]
    1150:	687b      	ldr	r3, [r7, #4]
    1152:	2200      	movs	r2, #0
    1154:	745a      	strb	r2, [r3, #17]
    1156:	687b      	ldr	r3, [r7, #4]
    1158:	2200      	movs	r2, #0
    115a:	749a      	strb	r2, [r3, #18]
    115c:	687b      	ldr	r3, [r7, #4]
    115e:	2200      	movs	r2, #0
    1160:	74da      	strb	r2, [r3, #19]
    1162:	687b      	ldr	r3, [r7, #4]
    1164:	222c      	movs	r2, #44	; 0x2c
    1166:	2100      	movs	r1, #0
    1168:	5499      	strb	r1, [r3, r2]
    116a:	687b      	ldr	r3, [r7, #4]
    116c:	222d      	movs	r2, #45	; 0x2d
    116e:	2100      	movs	r1, #0
    1170:	5499      	strb	r1, [r3, r2]
    1172:	687b      	ldr	r3, [r7, #4]
    1174:	222e      	movs	r2, #46	; 0x2e
    1176:	2100      	movs	r1, #0
    1178:	5499      	strb	r1, [r3, r2]
    117a:	687b      	ldr	r3, [r7, #4]
    117c:	222f      	movs	r2, #47	; 0x2f
    117e:	2100      	movs	r1, #0
    1180:	5499      	strb	r1, [r3, r2]
    1182:	687b      	ldr	r3, [r7, #4]
    1184:	2230      	movs	r2, #48	; 0x30
    1186:	2100      	movs	r1, #0
    1188:	5499      	strb	r1, [r3, r2]
    118a:	687b      	ldr	r3, [r7, #4]
    118c:	2231      	movs	r2, #49	; 0x31
    118e:	2100      	movs	r1, #0
    1190:	5499      	strb	r1, [r3, r2]
    1192:	687b      	ldr	r3, [r7, #4]
    1194:	2232      	movs	r2, #50	; 0x32
    1196:	2100      	movs	r1, #0
    1198:	5499      	strb	r1, [r3, r2]
    119a:	687b      	ldr	r3, [r7, #4]
    119c:	2233      	movs	r2, #51	; 0x33
    119e:	2100      	movs	r1, #0
    11a0:	5499      	strb	r1, [r3, r2]
    11a2:	687b      	ldr	r3, [r7, #4]
    11a4:	2234      	movs	r2, #52	; 0x34
    11a6:	2100      	movs	r1, #0
    11a8:	5499      	strb	r1, [r3, r2]
    11aa:	687b      	ldr	r3, [r7, #4]
    11ac:	2235      	movs	r2, #53	; 0x35
    11ae:	2100      	movs	r1, #0
    11b0:	5499      	strb	r1, [r3, r2]
    11b2:	687b      	ldr	r3, [r7, #4]
    11b4:	2236      	movs	r2, #54	; 0x36
    11b6:	2100      	movs	r1, #0
    11b8:	5499      	strb	r1, [r3, r2]
    11ba:	687b      	ldr	r3, [r7, #4]
    11bc:	2237      	movs	r2, #55	; 0x37
    11be:	2100      	movs	r1, #0
    11c0:	5499      	strb	r1, [r3, r2]
    11c2:	687b      	ldr	r3, [r7, #4]
    11c4:	2238      	movs	r2, #56	; 0x38
    11c6:	2100      	movs	r1, #0
    11c8:	5499      	strb	r1, [r3, r2]
    11ca:	687b      	ldr	r3, [r7, #4]
    11cc:	2239      	movs	r2, #57	; 0x39
    11ce:	2100      	movs	r1, #0
    11d0:	5499      	strb	r1, [r3, r2]
    11d2:	687b      	ldr	r3, [r7, #4]
    11d4:	223a      	movs	r2, #58	; 0x3a
    11d6:	2100      	movs	r1, #0
    11d8:	5499      	strb	r1, [r3, r2]
    11da:	687b      	ldr	r3, [r7, #4]
    11dc:	223b      	movs	r2, #59	; 0x3b
    11de:	2100      	movs	r1, #0
    11e0:	5499      	strb	r1, [r3, r2]
    11e2:	687b      	ldr	r3, [r7, #4]
    11e4:	223c      	movs	r2, #60	; 0x3c
    11e6:	2100      	movs	r1, #0
    11e8:	5499      	strb	r1, [r3, r2]
    11ea:	687b      	ldr	r3, [r7, #4]
    11ec:	223d      	movs	r2, #61	; 0x3d
    11ee:	2100      	movs	r1, #0
    11f0:	5499      	strb	r1, [r3, r2]
    11f2:	687b      	ldr	r3, [r7, #4]
    11f4:	223e      	movs	r2, #62	; 0x3e
    11f6:	2100      	movs	r1, #0
    11f8:	5499      	strb	r1, [r3, r2]
    11fa:	687b      	ldr	r3, [r7, #4]
    11fc:	223f      	movs	r2, #63	; 0x3f
    11fe:	2100      	movs	r1, #0
    1200:	5499      	strb	r1, [r3, r2]
    1202:	687b      	ldr	r3, [r7, #4]
    1204:	2240      	movs	r2, #64	; 0x40
    1206:	2100      	movs	r1, #0
    1208:	5499      	strb	r1, [r3, r2]
    120a:	687b      	ldr	r3, [r7, #4]
    120c:	2241      	movs	r2, #65	; 0x41
    120e:	2100      	movs	r1, #0
    1210:	5499      	strb	r1, [r3, r2]
    1212:	687b      	ldr	r3, [r7, #4]
    1214:	2242      	movs	r2, #66	; 0x42
    1216:	2100      	movs	r1, #0
    1218:	5499      	strb	r1, [r3, r2]
    121a:	687b      	ldr	r3, [r7, #4]
    121c:	2243      	movs	r2, #67	; 0x43
    121e:	2100      	movs	r1, #0
    1220:	5499      	strb	r1, [r3, r2]
    1222:	687b      	ldr	r3, [r7, #4]
    1224:	2244      	movs	r2, #68	; 0x44
    1226:	2100      	movs	r1, #0
    1228:	5499      	strb	r1, [r3, r2]
    122a:	687b      	ldr	r3, [r7, #4]
    122c:	2245      	movs	r2, #69	; 0x45
    122e:	2100      	movs	r1, #0
    1230:	5499      	strb	r1, [r3, r2]
    1232:	687b      	ldr	r3, [r7, #4]
    1234:	2246      	movs	r2, #70	; 0x46
    1236:	2100      	movs	r1, #0
    1238:	5499      	strb	r1, [r3, r2]
    123a:	687b      	ldr	r3, [r7, #4]
    123c:	2247      	movs	r2, #71	; 0x47
    123e:	2100      	movs	r1, #0
    1240:	5499      	strb	r1, [r3, r2]
    1242:	687b      	ldr	r3, [r7, #4]
    1244:	2248      	movs	r2, #72	; 0x48
    1246:	2100      	movs	r1, #0
    1248:	5499      	strb	r1, [r3, r2]
    124a:	687b      	ldr	r3, [r7, #4]
    124c:	2249      	movs	r2, #73	; 0x49
    124e:	2100      	movs	r1, #0
    1250:	5499      	strb	r1, [r3, r2]
    1252:	687b      	ldr	r3, [r7, #4]
    1254:	224a      	movs	r2, #74	; 0x4a
    1256:	2100      	movs	r1, #0
    1258:	5499      	strb	r1, [r3, r2]
    125a:	687b      	ldr	r3, [r7, #4]
    125c:	224b      	movs	r2, #75	; 0x4b
    125e:	2100      	movs	r1, #0
    1260:	5499      	strb	r1, [r3, r2]
    1262:	687b      	ldr	r3, [r7, #4]
    1264:	224c      	movs	r2, #76	; 0x4c
    1266:	2100      	movs	r1, #0
    1268:	5499      	strb	r1, [r3, r2]
    126a:	687b      	ldr	r3, [r7, #4]
    126c:	224d      	movs	r2, #77	; 0x4d
    126e:	2100      	movs	r1, #0
    1270:	5499      	strb	r1, [r3, r2]
    1272:	687b      	ldr	r3, [r7, #4]
    1274:	224e      	movs	r2, #78	; 0x4e
    1276:	2100      	movs	r1, #0
    1278:	5499      	strb	r1, [r3, r2]
    127a:	687b      	ldr	r3, [r7, #4]
    127c:	224f      	movs	r2, #79	; 0x4f
    127e:	2100      	movs	r1, #0
    1280:	5499      	strb	r1, [r3, r2]
    1282:	687b      	ldr	r3, [r7, #4]
    1284:	2250      	movs	r2, #80	; 0x50
    1286:	2100      	movs	r1, #0
    1288:	5499      	strb	r1, [r3, r2]
    128a:	687b      	ldr	r3, [r7, #4]
    128c:	2251      	movs	r2, #81	; 0x51
    128e:	2100      	movs	r1, #0
    1290:	5499      	strb	r1, [r3, r2]
    1292:	687b      	ldr	r3, [r7, #4]
    1294:	2252      	movs	r2, #82	; 0x52
    1296:	2100      	movs	r1, #0
    1298:	5499      	strb	r1, [r3, r2]
    129a:	687b      	ldr	r3, [r7, #4]
    129c:	2253      	movs	r2, #83	; 0x53
    129e:	2100      	movs	r1, #0
    12a0:	5499      	strb	r1, [r3, r2]
    12a2:	687b      	ldr	r3, [r7, #4]
    12a4:	2254      	movs	r2, #84	; 0x54
    12a6:	2100      	movs	r1, #0
    12a8:	5499      	strb	r1, [r3, r2]
    12aa:	687b      	ldr	r3, [r7, #4]
    12ac:	2255      	movs	r2, #85	; 0x55
    12ae:	2100      	movs	r1, #0
    12b0:	5499      	strb	r1, [r3, r2]
    12b2:	687b      	ldr	r3, [r7, #4]
    12b4:	2256      	movs	r2, #86	; 0x56
    12b6:	2100      	movs	r1, #0
    12b8:	5499      	strb	r1, [r3, r2]
    12ba:	687b      	ldr	r3, [r7, #4]
    12bc:	2257      	movs	r2, #87	; 0x57
    12be:	2100      	movs	r1, #0
    12c0:	5499      	strb	r1, [r3, r2]
    12c2:	687b      	ldr	r3, [r7, #4]
    12c4:	2298      	movs	r2, #152	; 0x98
    12c6:	2100      	movs	r1, #0
    12c8:	5499      	strb	r1, [r3, r2]
    12ca:	687b      	ldr	r3, [r7, #4]
    12cc:	2200      	movs	r2, #0
    12ce:	659a      	str	r2, [r3, #88]	; 0x58
    12d0:	687b      	ldr	r3, [r7, #4]
    12d2:	2200      	movs	r2, #0
    12d4:	679a      	str	r2, [r3, #120]	; 0x78
    12d6:	687b      	ldr	r3, [r7, #4]
    12d8:	2299      	movs	r2, #153	; 0x99
    12da:	2100      	movs	r1, #0
    12dc:	5499      	strb	r1, [r3, r2]
    12de:	687b      	ldr	r3, [r7, #4]
    12e0:	2200      	movs	r2, #0
    12e2:	65da      	str	r2, [r3, #92]	; 0x5c
    12e4:	687b      	ldr	r3, [r7, #4]
    12e6:	2200      	movs	r2, #0
    12e8:	67da      	str	r2, [r3, #124]	; 0x7c
    12ea:	687b      	ldr	r3, [r7, #4]
    12ec:	229a      	movs	r2, #154	; 0x9a
    12ee:	2100      	movs	r1, #0
    12f0:	5499      	strb	r1, [r3, r2]
    12f2:	687b      	ldr	r3, [r7, #4]
    12f4:	2200      	movs	r2, #0
    12f6:	661a      	str	r2, [r3, #96]	; 0x60
    12f8:	687b      	ldr	r3, [r7, #4]
    12fa:	2280      	movs	r2, #128	; 0x80
    12fc:	2100      	movs	r1, #0
    12fe:	5099      	str	r1, [r3, r2]
    1300:	687b      	ldr	r3, [r7, #4]
    1302:	229b      	movs	r2, #155	; 0x9b
    1304:	2100      	movs	r1, #0
    1306:	5499      	strb	r1, [r3, r2]
    1308:	687b      	ldr	r3, [r7, #4]
    130a:	2200      	movs	r2, #0
    130c:	665a      	str	r2, [r3, #100]	; 0x64
    130e:	687b      	ldr	r3, [r7, #4]
    1310:	2284      	movs	r2, #132	; 0x84
    1312:	2100      	movs	r1, #0
    1314:	5099      	str	r1, [r3, r2]
    1316:	687b      	ldr	r3, [r7, #4]
    1318:	229c      	movs	r2, #156	; 0x9c
    131a:	2100      	movs	r1, #0
    131c:	5499      	strb	r1, [r3, r2]
    131e:	687b      	ldr	r3, [r7, #4]
    1320:	2200      	movs	r2, #0
    1322:	669a      	str	r2, [r3, #104]	; 0x68
    1324:	687b      	ldr	r3, [r7, #4]
    1326:	2288      	movs	r2, #136	; 0x88
    1328:	2100      	movs	r1, #0
    132a:	5099      	str	r1, [r3, r2]
    132c:	687b      	ldr	r3, [r7, #4]
    132e:	229d      	movs	r2, #157	; 0x9d
    1330:	2100      	movs	r1, #0
    1332:	5499      	strb	r1, [r3, r2]
    1334:	687b      	ldr	r3, [r7, #4]
    1336:	2200      	movs	r2, #0
    1338:	66da      	str	r2, [r3, #108]	; 0x6c
    133a:	687b      	ldr	r3, [r7, #4]
    133c:	228c      	movs	r2, #140	; 0x8c
    133e:	2100      	movs	r1, #0
    1340:	5099      	str	r1, [r3, r2]
    1342:	687b      	ldr	r3, [r7, #4]
    1344:	229e      	movs	r2, #158	; 0x9e
    1346:	2100      	movs	r1, #0
    1348:	5499      	strb	r1, [r3, r2]
    134a:	687b      	ldr	r3, [r7, #4]
    134c:	2200      	movs	r2, #0
    134e:	671a      	str	r2, [r3, #112]	; 0x70
    1350:	687b      	ldr	r3, [r7, #4]
    1352:	2290      	movs	r2, #144	; 0x90
    1354:	2100      	movs	r1, #0
    1356:	5099      	str	r1, [r3, r2]
    1358:	687b      	ldr	r3, [r7, #4]
    135a:	229f      	movs	r2, #159	; 0x9f
    135c:	2100      	movs	r1, #0
    135e:	5499      	strb	r1, [r3, r2]
    1360:	687b      	ldr	r3, [r7, #4]
    1362:	2200      	movs	r2, #0
    1364:	675a      	str	r2, [r3, #116]	; 0x74
    1366:	687b      	ldr	r3, [r7, #4]
    1368:	2294      	movs	r2, #148	; 0x94
    136a:	2100      	movs	r1, #0
    136c:	5099      	str	r1, [r3, r2]
    136e:	687b      	ldr	r3, [r7, #4]
    1370:	22a0      	movs	r2, #160	; 0xa0
    1372:	2101      	movs	r1, #1
    1374:	5499      	strb	r1, [r3, r2]
    1376:	687b      	ldr	r3, [r7, #4]
    1378:	22a1      	movs	r2, #161	; 0xa1
    137a:	2100      	movs	r1, #0
    137c:	5499      	strb	r1, [r3, r2]
    137e:	46c0      	nop			; (mov r8, r8)
    1380:	46bd      	mov	sp, r7
    1382:	b005      	add	sp, #20
    1384:	bd90      	pop	{r4, r7, pc}
    1386:	46c0      	nop			; (mov r8, r8)
    1388:	00001085 	.word	0x00001085
    138c:	000057c0 	.word	0x000057c0

00001390 <_tcc_build_ctrla>:
    1390:	b580      	push	{r7, lr}
    1392:	b086      	sub	sp, #24
    1394:	af00      	add	r7, sp, #0
    1396:	60b9      	str	r1, [r7, #8]
    1398:	607a      	str	r2, [r7, #4]
    139a:	230f      	movs	r3, #15
    139c:	18fb      	adds	r3, r7, r3
    139e:	1c02      	adds	r2, r0, #0
    13a0:	701a      	strb	r2, [r3, #0]
    13a2:	2300      	movs	r3, #0
    13a4:	617b      	str	r3, [r7, #20]
    13a6:	2300      	movs	r3, #0
    13a8:	613b      	str	r3, [r7, #16]
    13aa:	e01d      	b.n	13e8 <_tcc_build_ctrla+0x58>
    13ac:	68ba      	ldr	r2, [r7, #8]
    13ae:	693b      	ldr	r3, [r7, #16]
    13b0:	18d3      	adds	r3, r2, r3
    13b2:	3310      	adds	r3, #16
    13b4:	781b      	ldrb	r3, [r3, #0]
    13b6:	2b01      	cmp	r3, #1
    13b8:	d113      	bne.n	13e2 <_tcc_build_ctrla+0x52>
    13ba:	230f      	movs	r3, #15
    13bc:	18fb      	adds	r3, r7, r3
    13be:	781b      	ldrb	r3, [r3, #0]
    13c0:	4a1b      	ldr	r2, [pc, #108]	; (1430 <_tcc_build_ctrla+0xa0>)
    13c2:	5cd3      	ldrb	r3, [r2, r3]
    13c4:	1e1a      	subs	r2, r3, #0
    13c6:	693b      	ldr	r3, [r7, #16]
    13c8:	429a      	cmp	r2, r3
    13ca:	da01      	bge.n	13d0 <_tcc_build_ctrla+0x40>
    13cc:	2317      	movs	r3, #23
    13ce:	e02a      	b.n	1426 <_tcc_build_ctrla+0x96>
    13d0:	2380      	movs	r3, #128	; 0x80
    13d2:	045a      	lsls	r2, r3, #17
    13d4:	693b      	ldr	r3, [r7, #16]
    13d6:	409a      	lsls	r2, r3
    13d8:	0013      	movs	r3, r2
    13da:	001a      	movs	r2, r3
    13dc:	697b      	ldr	r3, [r7, #20]
    13de:	4313      	orrs	r3, r2
    13e0:	617b      	str	r3, [r7, #20]
    13e2:	693b      	ldr	r3, [r7, #16]
    13e4:	3301      	adds	r3, #1
    13e6:	613b      	str	r3, [r7, #16]
    13e8:	693b      	ldr	r3, [r7, #16]
    13ea:	2b03      	cmp	r3, #3
    13ec:	ddde      	ble.n	13ac <_tcc_build_ctrla+0x1c>
    13ee:	68bb      	ldr	r3, [r7, #8]
    13f0:	22a1      	movs	r2, #161	; 0xa1
    13f2:	5c9b      	ldrb	r3, [r3, r2]
    13f4:	2b00      	cmp	r3, #0
    13f6:	d004      	beq.n	1402 <_tcc_build_ctrla+0x72>
    13f8:	697b      	ldr	r3, [r7, #20]
    13fa:	2280      	movs	r2, #128	; 0x80
    13fc:	0112      	lsls	r2, r2, #4
    13fe:	4313      	orrs	r3, r2
    1400:	617b      	str	r3, [r7, #20]
    1402:	68bb      	ldr	r3, [r7, #8]
    1404:	7b1b      	ldrb	r3, [r3, #12]
    1406:	031b      	lsls	r3, r3, #12
    1408:	001a      	movs	r2, r3
    140a:	697b      	ldr	r3, [r7, #20]
    140c:	4313      	orrs	r3, r2
    140e:	617b      	str	r3, [r7, #20]
    1410:	68bb      	ldr	r3, [r7, #8]
    1412:	7adb      	ldrb	r3, [r3, #11]
    1414:	021b      	lsls	r3, r3, #8
    1416:	001a      	movs	r2, r3
    1418:	697b      	ldr	r3, [r7, #20]
    141a:	4313      	orrs	r3, r2
    141c:	617b      	str	r3, [r7, #20]
    141e:	687b      	ldr	r3, [r7, #4]
    1420:	697a      	ldr	r2, [r7, #20]
    1422:	601a      	str	r2, [r3, #0]
    1424:	2300      	movs	r3, #0
    1426:	0018      	movs	r0, r3
    1428:	46bd      	mov	sp, r7
    142a:	b006      	add	sp, #24
    142c:	bd80      	pop	{r7, pc}
    142e:	46c0      	nop			; (mov r8, r8)
    1430:	000057cc 	.word	0x000057cc

00001434 <_tcc_build_ctrlb>:
    1434:	b580      	push	{r7, lr}
    1436:	b086      	sub	sp, #24
    1438:	af00      	add	r7, sp, #0
    143a:	60b9      	str	r1, [r7, #8]
    143c:	607a      	str	r2, [r7, #4]
    143e:	230f      	movs	r3, #15
    1440:	18fb      	adds	r3, r7, r3
    1442:	1c02      	adds	r2, r0, #0
    1444:	701a      	strb	r2, [r3, #0]
    1446:	2317      	movs	r3, #23
    1448:	18fb      	adds	r3, r7, r3
    144a:	2200      	movs	r2, #0
    144c:	701a      	strb	r2, [r3, #0]
    144e:	68bb      	ldr	r3, [r7, #8]
    1450:	7a1b      	ldrb	r3, [r3, #8]
    1452:	2b00      	cmp	r3, #0
    1454:	d007      	beq.n	1466 <_tcc_build_ctrlb+0x32>
    1456:	2317      	movs	r3, #23
    1458:	18fb      	adds	r3, r7, r3
    145a:	2217      	movs	r2, #23
    145c:	18ba      	adds	r2, r7, r2
    145e:	7812      	ldrb	r2, [r2, #0]
    1460:	2104      	movs	r1, #4
    1462:	430a      	orrs	r2, r1
    1464:	701a      	strb	r2, [r3, #0]
    1466:	68bb      	ldr	r3, [r7, #8]
    1468:	7a5b      	ldrb	r3, [r3, #9]
    146a:	2b01      	cmp	r3, #1
    146c:	d107      	bne.n	147e <_tcc_build_ctrlb+0x4a>
    146e:	2317      	movs	r3, #23
    1470:	18fb      	adds	r3, r7, r3
    1472:	2217      	movs	r2, #23
    1474:	18ba      	adds	r2, r7, r2
    1476:	7812      	ldrb	r2, [r2, #0]
    1478:	2101      	movs	r1, #1
    147a:	430a      	orrs	r2, r1
    147c:	701a      	strb	r2, [r3, #0]
    147e:	687b      	ldr	r3, [r7, #4]
    1480:	2217      	movs	r2, #23
    1482:	18ba      	adds	r2, r7, r2
    1484:	7812      	ldrb	r2, [r2, #0]
    1486:	701a      	strb	r2, [r3, #0]
    1488:	46c0      	nop			; (mov r8, r8)
    148a:	46bd      	mov	sp, r7
    148c:	b006      	add	sp, #24
    148e:	bd80      	pop	{r7, pc}

00001490 <_tcc_build_faults>:
    1490:	b580      	push	{r7, lr}
    1492:	b088      	sub	sp, #32
    1494:	af00      	add	r7, sp, #0
    1496:	60b9      	str	r1, [r7, #8]
    1498:	607a      	str	r2, [r7, #4]
    149a:	230f      	movs	r3, #15
    149c:	18fb      	adds	r3, r7, r3
    149e:	1c02      	adds	r2, r0, #0
    14a0:	701a      	strb	r2, [r3, #0]
    14a2:	230f      	movs	r3, #15
    14a4:	18fb      	adds	r3, r7, r3
    14a6:	781a      	ldrb	r2, [r3, #0]
    14a8:	231b      	movs	r3, #27
    14aa:	18fb      	adds	r3, r7, r3
    14ac:	493e      	ldr	r1, [pc, #248]	; (15a8 <_tcc_build_faults+0x118>)
    14ae:	5c8a      	ldrb	r2, [r1, r2]
    14b0:	701a      	strb	r2, [r3, #0]
    14b2:	2300      	movs	r3, #0
    14b4:	61fb      	str	r3, [r7, #28]
    14b6:	e06e      	b.n	1596 <_tcc_build_faults+0x106>
    14b8:	69fa      	ldr	r2, [r7, #28]
    14ba:	0013      	movs	r3, r2
    14bc:	009b      	lsls	r3, r3, #2
    14be:	189b      	adds	r3, r3, r2
    14c0:	005b      	lsls	r3, r3, #1
    14c2:	3328      	adds	r3, #40	; 0x28
    14c4:	68ba      	ldr	r2, [r7, #8]
    14c6:	18d3      	adds	r3, r2, r3
    14c8:	3304      	adds	r3, #4
    14ca:	617b      	str	r3, [r7, #20]
    14cc:	697b      	ldr	r3, [r7, #20]
    14ce:	7a5b      	ldrb	r3, [r3, #9]
    14d0:	221b      	movs	r2, #27
    14d2:	18ba      	adds	r2, r7, r2
    14d4:	7812      	ldrb	r2, [r2, #0]
    14d6:	429a      	cmp	r2, r3
    14d8:	d801      	bhi.n	14de <_tcc_build_faults+0x4e>
    14da:	2317      	movs	r3, #23
    14dc:	e05f      	b.n	159e <_tcc_build_faults+0x10e>
    14de:	697b      	ldr	r3, [r7, #20]
    14e0:	781b      	ldrb	r3, [r3, #0]
    14e2:	2b0f      	cmp	r3, #15
    14e4:	d901      	bls.n	14ea <_tcc_build_faults+0x5a>
    14e6:	2317      	movs	r3, #23
    14e8:	e059      	b.n	159e <_tcc_build_faults+0x10e>
    14ea:	697b      	ldr	r3, [r7, #20]
    14ec:	781b      	ldrb	r3, [r3, #0]
    14ee:	061b      	lsls	r3, r3, #24
    14f0:	001a      	movs	r2, r3
    14f2:	23f0      	movs	r3, #240	; 0xf0
    14f4:	051b      	lsls	r3, r3, #20
    14f6:	401a      	ands	r2, r3
    14f8:	697b      	ldr	r3, [r7, #20]
    14fa:	785b      	ldrb	r3, [r3, #1]
    14fc:	041b      	lsls	r3, r3, #16
    14fe:	0019      	movs	r1, r3
    1500:	23ff      	movs	r3, #255	; 0xff
    1502:	041b      	lsls	r3, r3, #16
    1504:	400b      	ands	r3, r1
    1506:	431a      	orrs	r2, r3
    1508:	697b      	ldr	r3, [r7, #20]
    150a:	789b      	ldrb	r3, [r3, #2]
    150c:	2b00      	cmp	r3, #0
    150e:	d001      	beq.n	1514 <_tcc_build_faults+0x84>
    1510:	2380      	movs	r3, #128	; 0x80
    1512:	e000      	b.n	1516 <_tcc_build_faults+0x86>
    1514:	2300      	movs	r3, #0
    1516:	431a      	orrs	r2, r3
    1518:	697b      	ldr	r3, [r7, #20]
    151a:	78db      	ldrb	r3, [r3, #3]
    151c:	2b00      	cmp	r3, #0
    151e:	d001      	beq.n	1524 <_tcc_build_faults+0x94>
    1520:	2308      	movs	r3, #8
    1522:	e000      	b.n	1526 <_tcc_build_faults+0x96>
    1524:	2300      	movs	r3, #0
    1526:	431a      	orrs	r2, r3
    1528:	697b      	ldr	r3, [r7, #20]
    152a:	791b      	ldrb	r3, [r3, #4]
    152c:	2b00      	cmp	r3, #0
    152e:	d001      	beq.n	1534 <_tcc_build_faults+0xa4>
    1530:	2310      	movs	r3, #16
    1532:	e000      	b.n	1536 <_tcc_build_faults+0xa6>
    1534:	2300      	movs	r3, #0
    1536:	431a      	orrs	r2, r3
    1538:	697b      	ldr	r3, [r7, #20]
    153a:	795b      	ldrb	r3, [r3, #5]
    153c:	0019      	movs	r1, r3
    153e:	2303      	movs	r3, #3
    1540:	400b      	ands	r3, r1
    1542:	431a      	orrs	r2, r3
    1544:	697b      	ldr	r3, [r7, #20]
    1546:	799b      	ldrb	r3, [r3, #6]
    1548:	015b      	lsls	r3, r3, #5
    154a:	0019      	movs	r1, r3
    154c:	2360      	movs	r3, #96	; 0x60
    154e:	400b      	ands	r3, r1
    1550:	431a      	orrs	r2, r3
    1552:	697b      	ldr	r3, [r7, #20]
    1554:	79db      	ldrb	r3, [r3, #7]
    1556:	021b      	lsls	r3, r3, #8
    1558:	0019      	movs	r1, r3
    155a:	23c0      	movs	r3, #192	; 0xc0
    155c:	009b      	lsls	r3, r3, #2
    155e:	400b      	ands	r3, r1
    1560:	431a      	orrs	r2, r3
    1562:	697b      	ldr	r3, [r7, #20]
    1564:	7a1b      	ldrb	r3, [r3, #8]
    1566:	031b      	lsls	r3, r3, #12
    1568:	0019      	movs	r1, r3
    156a:	23e0      	movs	r3, #224	; 0xe0
    156c:	01db      	lsls	r3, r3, #7
    156e:	400b      	ands	r3, r1
    1570:	431a      	orrs	r2, r3
    1572:	697b      	ldr	r3, [r7, #20]
    1574:	7a5b      	ldrb	r3, [r3, #9]
    1576:	029b      	lsls	r3, r3, #10
    1578:	0019      	movs	r1, r3
    157a:	23c0      	movs	r3, #192	; 0xc0
    157c:	011b      	lsls	r3, r3, #4
    157e:	400b      	ands	r3, r1
    1580:	4313      	orrs	r3, r2
    1582:	613b      	str	r3, [r7, #16]
    1584:	69fb      	ldr	r3, [r7, #28]
    1586:	009b      	lsls	r3, r3, #2
    1588:	687a      	ldr	r2, [r7, #4]
    158a:	18d3      	adds	r3, r2, r3
    158c:	693a      	ldr	r2, [r7, #16]
    158e:	601a      	str	r2, [r3, #0]
    1590:	69fb      	ldr	r3, [r7, #28]
    1592:	3301      	adds	r3, #1
    1594:	61fb      	str	r3, [r7, #28]
    1596:	69fb      	ldr	r3, [r7, #28]
    1598:	2b01      	cmp	r3, #1
    159a:	dd8d      	ble.n	14b8 <_tcc_build_faults+0x28>
    159c:	2300      	movs	r3, #0
    159e:	0018      	movs	r0, r3
    15a0:	46bd      	mov	sp, r7
    15a2:	b008      	add	sp, #32
    15a4:	bd80      	pop	{r7, pc}
    15a6:	46c0      	nop			; (mov r8, r8)
    15a8:	000057cc 	.word	0x000057cc

000015ac <_tcc_build_drvctrl>:
    15ac:	b580      	push	{r7, lr}
    15ae:	b088      	sub	sp, #32
    15b0:	af00      	add	r7, sp, #0
    15b2:	60b9      	str	r1, [r7, #8]
    15b4:	607a      	str	r2, [r7, #4]
    15b6:	230f      	movs	r3, #15
    15b8:	18fb      	adds	r3, r7, r3
    15ba:	1c02      	adds	r2, r0, #0
    15bc:	701a      	strb	r2, [r3, #0]
    15be:	230f      	movs	r3, #15
    15c0:	18fb      	adds	r3, r7, r3
    15c2:	781a      	ldrb	r2, [r3, #0]
    15c4:	2317      	movs	r3, #23
    15c6:	18fb      	adds	r3, r7, r3
    15c8:	492d      	ldr	r1, [pc, #180]	; (1680 <_tcc_build_drvctrl+0xd4>)
    15ca:	5c8a      	ldrb	r2, [r1, r2]
    15cc:	701a      	strb	r2, [r3, #0]
    15ce:	2300      	movs	r3, #0
    15d0:	61bb      	str	r3, [r7, #24]
    15d2:	2300      	movs	r3, #0
    15d4:	61fb      	str	r3, [r7, #28]
    15d6:	e048      	b.n	166a <_tcc_build_drvctrl+0xbe>
    15d8:	68ba      	ldr	r2, [r7, #8]
    15da:	2150      	movs	r1, #80	; 0x50
    15dc:	69fb      	ldr	r3, [r7, #28]
    15de:	18d3      	adds	r3, r2, r3
    15e0:	185b      	adds	r3, r3, r1
    15e2:	781b      	ldrb	r3, [r3, #0]
    15e4:	2b00      	cmp	r3, #0
    15e6:	d010      	beq.n	160a <_tcc_build_drvctrl+0x5e>
    15e8:	2317      	movs	r3, #23
    15ea:	18fb      	adds	r3, r7, r3
    15ec:	781a      	ldrb	r2, [r3, #0]
    15ee:	69fb      	ldr	r3, [r7, #28]
    15f0:	429a      	cmp	r2, r3
    15f2:	d801      	bhi.n	15f8 <_tcc_build_drvctrl+0x4c>
    15f4:	2317      	movs	r3, #23
    15f6:	e03f      	b.n	1678 <_tcc_build_drvctrl+0xcc>
    15f8:	2380      	movs	r3, #128	; 0x80
    15fa:	025a      	lsls	r2, r3, #9
    15fc:	69fb      	ldr	r3, [r7, #28]
    15fe:	409a      	lsls	r2, r3
    1600:	0013      	movs	r3, r2
    1602:	001a      	movs	r2, r3
    1604:	69bb      	ldr	r3, [r7, #24]
    1606:	4313      	orrs	r3, r2
    1608:	61bb      	str	r3, [r7, #24]
    160a:	68ba      	ldr	r2, [r7, #8]
    160c:	69fb      	ldr	r3, [r7, #28]
    160e:	331c      	adds	r3, #28
    1610:	005b      	lsls	r3, r3, #1
    1612:	18d3      	adds	r3, r2, r3
    1614:	3309      	adds	r3, #9
    1616:	781b      	ldrb	r3, [r3, #0]
    1618:	2b00      	cmp	r3, #0
    161a:	d023      	beq.n	1664 <_tcc_build_drvctrl+0xb8>
    161c:	2317      	movs	r3, #23
    161e:	18fb      	adds	r3, r7, r3
    1620:	781a      	ldrb	r2, [r3, #0]
    1622:	69fb      	ldr	r3, [r7, #28]
    1624:	429a      	cmp	r2, r3
    1626:	d801      	bhi.n	162c <_tcc_build_drvctrl+0x80>
    1628:	2317      	movs	r3, #23
    162a:	e025      	b.n	1678 <_tcc_build_drvctrl+0xcc>
    162c:	68ba      	ldr	r2, [r7, #8]
    162e:	69fb      	ldr	r3, [r7, #28]
    1630:	331c      	adds	r3, #28
    1632:	005b      	lsls	r3, r3, #1
    1634:	18d3      	adds	r3, r2, r3
    1636:	3309      	adds	r3, #9
    1638:	781b      	ldrb	r3, [r3, #0]
    163a:	2b02      	cmp	r3, #2
    163c:	d10a      	bne.n	1654 <_tcc_build_drvctrl+0xa8>
    163e:	2302      	movs	r3, #2
    1640:	33ff      	adds	r3, #255	; 0xff
    1642:	001a      	movs	r2, r3
    1644:	69fb      	ldr	r3, [r7, #28]
    1646:	409a      	lsls	r2, r3
    1648:	0013      	movs	r3, r2
    164a:	001a      	movs	r2, r3
    164c:	69bb      	ldr	r3, [r7, #24]
    164e:	4313      	orrs	r3, r2
    1650:	61bb      	str	r3, [r7, #24]
    1652:	e007      	b.n	1664 <_tcc_build_drvctrl+0xb8>
    1654:	2201      	movs	r2, #1
    1656:	69fb      	ldr	r3, [r7, #28]
    1658:	409a      	lsls	r2, r3
    165a:	0013      	movs	r3, r2
    165c:	001a      	movs	r2, r3
    165e:	69bb      	ldr	r3, [r7, #24]
    1660:	4313      	orrs	r3, r2
    1662:	61bb      	str	r3, [r7, #24]
    1664:	69fb      	ldr	r3, [r7, #28]
    1666:	3301      	adds	r3, #1
    1668:	61fb      	str	r3, [r7, #28]
    166a:	69fb      	ldr	r3, [r7, #28]
    166c:	2b07      	cmp	r3, #7
    166e:	d9b3      	bls.n	15d8 <_tcc_build_drvctrl+0x2c>
    1670:	687b      	ldr	r3, [r7, #4]
    1672:	69ba      	ldr	r2, [r7, #24]
    1674:	601a      	str	r2, [r3, #0]
    1676:	2300      	movs	r3, #0
    1678:	0018      	movs	r0, r3
    167a:	46bd      	mov	sp, r7
    167c:	b008      	add	sp, #32
    167e:	bd80      	pop	{r7, pc}
    1680:	000057d0 	.word	0x000057d0

00001684 <_tcc_build_waves>:
    1684:	b580      	push	{r7, lr}
    1686:	b088      	sub	sp, #32
    1688:	af00      	add	r7, sp, #0
    168a:	60b9      	str	r1, [r7, #8]
    168c:	607a      	str	r2, [r7, #4]
    168e:	230f      	movs	r3, #15
    1690:	18fb      	adds	r3, r7, r3
    1692:	1c02      	adds	r2, r0, #0
    1694:	701a      	strb	r2, [r3, #0]
    1696:	230f      	movs	r3, #15
    1698:	18fb      	adds	r3, r7, r3
    169a:	781a      	ldrb	r2, [r3, #0]
    169c:	2317      	movs	r3, #23
    169e:	18fb      	adds	r3, r7, r3
    16a0:	491d      	ldr	r1, [pc, #116]	; (1718 <_tcc_build_waves+0x94>)
    16a2:	5c8a      	ldrb	r2, [r1, r2]
    16a4:	701a      	strb	r2, [r3, #0]
    16a6:	68bb      	ldr	r3, [r7, #8]
    16a8:	3310      	adds	r3, #16
    16aa:	613b      	str	r3, [r7, #16]
    16ac:	693b      	ldr	r3, [r7, #16]
    16ae:	7a5b      	ldrb	r3, [r3, #9]
    16b0:	011b      	lsls	r3, r3, #4
    16b2:	001a      	movs	r2, r3
    16b4:	2330      	movs	r3, #48	; 0x30
    16b6:	401a      	ands	r2, r3
    16b8:	693b      	ldr	r3, [r7, #16]
    16ba:	7a1b      	ldrb	r3, [r3, #8]
    16bc:	0019      	movs	r1, r3
    16be:	2307      	movs	r3, #7
    16c0:	400b      	ands	r3, r1
    16c2:	4313      	orrs	r3, r2
    16c4:	61bb      	str	r3, [r7, #24]
    16c6:	2300      	movs	r3, #0
    16c8:	61fb      	str	r3, [r7, #28]
    16ca:	e01a      	b.n	1702 <_tcc_build_waves+0x7e>
    16cc:	693a      	ldr	r2, [r7, #16]
    16ce:	69fb      	ldr	r3, [r7, #28]
    16d0:	18d3      	adds	r3, r2, r3
    16d2:	3304      	adds	r3, #4
    16d4:	781b      	ldrb	r3, [r3, #0]
    16d6:	2b00      	cmp	r3, #0
    16d8:	d010      	beq.n	16fc <_tcc_build_waves+0x78>
    16da:	2317      	movs	r3, #23
    16dc:	18fb      	adds	r3, r7, r3
    16de:	781a      	ldrb	r2, [r3, #0]
    16e0:	69fb      	ldr	r3, [r7, #28]
    16e2:	429a      	cmp	r2, r3
    16e4:	dc01      	bgt.n	16ea <_tcc_build_waves+0x66>
    16e6:	2317      	movs	r3, #23
    16e8:	e012      	b.n	1710 <_tcc_build_waves+0x8c>
    16ea:	2380      	movs	r3, #128	; 0x80
    16ec:	025a      	lsls	r2, r3, #9
    16ee:	69fb      	ldr	r3, [r7, #28]
    16f0:	409a      	lsls	r2, r3
    16f2:	0013      	movs	r3, r2
    16f4:	001a      	movs	r2, r3
    16f6:	69bb      	ldr	r3, [r7, #24]
    16f8:	4313      	orrs	r3, r2
    16fa:	61bb      	str	r3, [r7, #24]
    16fc:	69fb      	ldr	r3, [r7, #28]
    16fe:	3301      	adds	r3, #1
    1700:	61fb      	str	r3, [r7, #28]
    1702:	69fb      	ldr	r3, [r7, #28]
    1704:	2b03      	cmp	r3, #3
    1706:	dde1      	ble.n	16cc <_tcc_build_waves+0x48>
    1708:	687b      	ldr	r3, [r7, #4]
    170a:	69ba      	ldr	r2, [r7, #24]
    170c:	601a      	str	r2, [r3, #0]
    170e:	2300      	movs	r3, #0
    1710:	0018      	movs	r0, r3
    1712:	46bd      	mov	sp, r7
    1714:	b008      	add	sp, #32
    1716:	bd80      	pop	{r7, pc}
    1718:	000057cc 	.word	0x000057cc

0000171c <tcc_init>:
    171c:	b590      	push	{r4, r7, lr}
    171e:	b091      	sub	sp, #68	; 0x44
    1720:	af00      	add	r7, sp, #0
    1722:	60f8      	str	r0, [r7, #12]
    1724:	60b9      	str	r1, [r7, #8]
    1726:	607a      	str	r2, [r7, #4]
    1728:	233b      	movs	r3, #59	; 0x3b
    172a:	18fc      	adds	r4, r7, r3
    172c:	68bb      	ldr	r3, [r7, #8]
    172e:	0018      	movs	r0, r3
    1730:	4bc4      	ldr	r3, [pc, #784]	; (1a44 <tcc_init+0x328>)
    1732:	4798      	blx	r3
    1734:	0003      	movs	r3, r0
    1736:	7023      	strb	r3, [r4, #0]
    1738:	233b      	movs	r3, #59	; 0x3b
    173a:	18fb      	adds	r3, r7, r3
    173c:	781a      	ldrb	r2, [r3, #0]
    173e:	4bc2      	ldr	r3, [pc, #776]	; (1a48 <tcc_init+0x32c>)
    1740:	0092      	lsls	r2, r2, #2
    1742:	58d3      	ldr	r3, [r2, r3]
    1744:	0019      	movs	r1, r3
    1746:	2002      	movs	r0, #2
    1748:	4bc0      	ldr	r3, [pc, #768]	; (1a4c <tcc_init+0x330>)
    174a:	4798      	blx	r3
    174c:	68bb      	ldr	r3, [r7, #8]
    174e:	681b      	ldr	r3, [r3, #0]
    1750:	2202      	movs	r2, #2
    1752:	4013      	ands	r3, r2
    1754:	d001      	beq.n	175a <tcc_init+0x3e>
    1756:	231c      	movs	r3, #28
    1758:	e1be      	b.n	1ad8 <tcc_init+0x3bc>
    175a:	68bb      	ldr	r3, [r7, #8]
    175c:	681b      	ldr	r3, [r3, #0]
    175e:	2201      	movs	r2, #1
    1760:	4013      	ands	r3, r2
    1762:	d001      	beq.n	1768 <tcc_init+0x4c>
    1764:	231c      	movs	r3, #28
    1766:	e1b7      	b.n	1ad8 <tcc_init+0x3bc>
    1768:	233b      	movs	r3, #59	; 0x3b
    176a:	18fb      	adds	r3, r7, r3
    176c:	781a      	ldrb	r2, [r3, #0]
    176e:	4bb8      	ldr	r3, [pc, #736]	; (1a50 <tcc_init+0x334>)
    1770:	0092      	lsls	r2, r2, #2
    1772:	58d3      	ldr	r3, [r2, r3]
    1774:	637b      	str	r3, [r7, #52]	; 0x34
    1776:	687b      	ldr	r3, [r7, #4]
    1778:	681a      	ldr	r2, [r3, #0]
    177a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    177c:	429a      	cmp	r2, r3
    177e:	d804      	bhi.n	178a <tcc_init+0x6e>
    1780:	687b      	ldr	r3, [r7, #4]
    1782:	685a      	ldr	r2, [r3, #4]
    1784:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    1786:	429a      	cmp	r2, r3
    1788:	d901      	bls.n	178e <tcc_init+0x72>
    178a:	2317      	movs	r3, #23
    178c:	e1a4      	b.n	1ad8 <tcc_init+0x3bc>
    178e:	2300      	movs	r3, #0
    1790:	63fb      	str	r3, [r7, #60]	; 0x3c
    1792:	e00e      	b.n	17b2 <tcc_init+0x96>
    1794:	687a      	ldr	r2, [r7, #4]
    1796:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1798:	3306      	adds	r3, #6
    179a:	009b      	lsls	r3, r3, #2
    179c:	18d3      	adds	r3, r2, r3
    179e:	3304      	adds	r3, #4
    17a0:	681a      	ldr	r2, [r3, #0]
    17a2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    17a4:	429a      	cmp	r2, r3
    17a6:	d901      	bls.n	17ac <tcc_init+0x90>
    17a8:	2317      	movs	r3, #23
    17aa:	e195      	b.n	1ad8 <tcc_init+0x3bc>
    17ac:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17ae:	3301      	adds	r3, #1
    17b0:	63fb      	str	r3, [r7, #60]	; 0x3c
    17b2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17b4:	2b03      	cmp	r3, #3
    17b6:	dded      	ble.n	1794 <tcc_init+0x78>
    17b8:	2300      	movs	r3, #0
    17ba:	63fb      	str	r3, [r7, #60]	; 0x3c
    17bc:	e019      	b.n	17f2 <tcc_init+0xd6>
    17be:	687a      	ldr	r2, [r7, #4]
    17c0:	2198      	movs	r1, #152	; 0x98
    17c2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17c4:	18d3      	adds	r3, r2, r3
    17c6:	185b      	adds	r3, r3, r1
    17c8:	781b      	ldrb	r3, [r3, #0]
    17ca:	2201      	movs	r2, #1
    17cc:	4053      	eors	r3, r2
    17ce:	b2db      	uxtb	r3, r3
    17d0:	2b00      	cmp	r3, #0
    17d2:	d10a      	bne.n	17ea <tcc_init+0xce>
    17d4:	233b      	movs	r3, #59	; 0x3b
    17d6:	18fb      	adds	r3, r7, r3
    17d8:	781b      	ldrb	r3, [r3, #0]
    17da:	4a9e      	ldr	r2, [pc, #632]	; (1a54 <tcc_init+0x338>)
    17dc:	5cd3      	ldrb	r3, [r2, r3]
    17de:	1e1a      	subs	r2, r3, #0
    17e0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17e2:	429a      	cmp	r2, r3
    17e4:	dc02      	bgt.n	17ec <tcc_init+0xd0>
    17e6:	2317      	movs	r3, #23
    17e8:	e176      	b.n	1ad8 <tcc_init+0x3bc>
    17ea:	46c0      	nop			; (mov r8, r8)
    17ec:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17ee:	3301      	adds	r3, #1
    17f0:	63fb      	str	r3, [r7, #60]	; 0x3c
    17f2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    17f4:	2b07      	cmp	r3, #7
    17f6:	dde2      	ble.n	17be <tcc_init+0xa2>
    17f8:	2300      	movs	r3, #0
    17fa:	62fb      	str	r3, [r7, #44]	; 0x2c
    17fc:	2333      	movs	r3, #51	; 0x33
    17fe:	18fc      	adds	r4, r7, r3
    1800:	232c      	movs	r3, #44	; 0x2c
    1802:	18fa      	adds	r2, r7, r3
    1804:	6879      	ldr	r1, [r7, #4]
    1806:	233b      	movs	r3, #59	; 0x3b
    1808:	18fb      	adds	r3, r7, r3
    180a:	781b      	ldrb	r3, [r3, #0]
    180c:	0018      	movs	r0, r3
    180e:	4b92      	ldr	r3, [pc, #584]	; (1a58 <tcc_init+0x33c>)
    1810:	4798      	blx	r3
    1812:	0003      	movs	r3, r0
    1814:	7023      	strb	r3, [r4, #0]
    1816:	2333      	movs	r3, #51	; 0x33
    1818:	18fb      	adds	r3, r7, r3
    181a:	781b      	ldrb	r3, [r3, #0]
    181c:	2b00      	cmp	r3, #0
    181e:	d003      	beq.n	1828 <tcc_init+0x10c>
    1820:	2333      	movs	r3, #51	; 0x33
    1822:	18fb      	adds	r3, r7, r3
    1824:	781b      	ldrb	r3, [r3, #0]
    1826:	e157      	b.n	1ad8 <tcc_init+0x3bc>
    1828:	232b      	movs	r3, #43	; 0x2b
    182a:	18fa      	adds	r2, r7, r3
    182c:	6879      	ldr	r1, [r7, #4]
    182e:	233b      	movs	r3, #59	; 0x3b
    1830:	18fb      	adds	r3, r7, r3
    1832:	781b      	ldrb	r3, [r3, #0]
    1834:	0018      	movs	r0, r3
    1836:	4b89      	ldr	r3, [pc, #548]	; (1a5c <tcc_init+0x340>)
    1838:	4798      	blx	r3
    183a:	2333      	movs	r3, #51	; 0x33
    183c:	18fc      	adds	r4, r7, r3
    183e:	2320      	movs	r3, #32
    1840:	18fa      	adds	r2, r7, r3
    1842:	6879      	ldr	r1, [r7, #4]
    1844:	233b      	movs	r3, #59	; 0x3b
    1846:	18fb      	adds	r3, r7, r3
    1848:	781b      	ldrb	r3, [r3, #0]
    184a:	0018      	movs	r0, r3
    184c:	4b84      	ldr	r3, [pc, #528]	; (1a60 <tcc_init+0x344>)
    184e:	4798      	blx	r3
    1850:	0003      	movs	r3, r0
    1852:	7023      	strb	r3, [r4, #0]
    1854:	2333      	movs	r3, #51	; 0x33
    1856:	18fb      	adds	r3, r7, r3
    1858:	781b      	ldrb	r3, [r3, #0]
    185a:	2b00      	cmp	r3, #0
    185c:	d003      	beq.n	1866 <tcc_init+0x14a>
    185e:	2333      	movs	r3, #51	; 0x33
    1860:	18fb      	adds	r3, r7, r3
    1862:	781b      	ldrb	r3, [r3, #0]
    1864:	e138      	b.n	1ad8 <tcc_init+0x3bc>
    1866:	2300      	movs	r3, #0
    1868:	61fb      	str	r3, [r7, #28]
    186a:	2333      	movs	r3, #51	; 0x33
    186c:	18fc      	adds	r4, r7, r3
    186e:	231c      	movs	r3, #28
    1870:	18fa      	adds	r2, r7, r3
    1872:	6879      	ldr	r1, [r7, #4]
    1874:	233b      	movs	r3, #59	; 0x3b
    1876:	18fb      	adds	r3, r7, r3
    1878:	781b      	ldrb	r3, [r3, #0]
    187a:	0018      	movs	r0, r3
    187c:	4b79      	ldr	r3, [pc, #484]	; (1a64 <tcc_init+0x348>)
    187e:	4798      	blx	r3
    1880:	0003      	movs	r3, r0
    1882:	7023      	strb	r3, [r4, #0]
    1884:	2333      	movs	r3, #51	; 0x33
    1886:	18fb      	adds	r3, r7, r3
    1888:	781b      	ldrb	r3, [r3, #0]
    188a:	2b00      	cmp	r3, #0
    188c:	d003      	beq.n	1896 <tcc_init+0x17a>
    188e:	2333      	movs	r3, #51	; 0x33
    1890:	18fb      	adds	r3, r7, r3
    1892:	781b      	ldrb	r3, [r3, #0]
    1894:	e120      	b.n	1ad8 <tcc_init+0x3bc>
    1896:	2333      	movs	r3, #51	; 0x33
    1898:	18fc      	adds	r4, r7, r3
    189a:	2318      	movs	r3, #24
    189c:	18fa      	adds	r2, r7, r3
    189e:	6879      	ldr	r1, [r7, #4]
    18a0:	233b      	movs	r3, #59	; 0x3b
    18a2:	18fb      	adds	r3, r7, r3
    18a4:	781b      	ldrb	r3, [r3, #0]
    18a6:	0018      	movs	r0, r3
    18a8:	4b6f      	ldr	r3, [pc, #444]	; (1a68 <tcc_init+0x34c>)
    18aa:	4798      	blx	r3
    18ac:	0003      	movs	r3, r0
    18ae:	7023      	strb	r3, [r4, #0]
    18b0:	2333      	movs	r3, #51	; 0x33
    18b2:	18fb      	adds	r3, r7, r3
    18b4:	781b      	ldrb	r3, [r3, #0]
    18b6:	2b00      	cmp	r3, #0
    18b8:	d003      	beq.n	18c2 <tcc_init+0x1a6>
    18ba:	2333      	movs	r3, #51	; 0x33
    18bc:	18fb      	adds	r3, r7, r3
    18be:	781b      	ldrb	r3, [r3, #0]
    18c0:	e10a      	b.n	1ad8 <tcc_init+0x3bc>
    18c2:	2300      	movs	r3, #0
    18c4:	63fb      	str	r3, [r7, #60]	; 0x3c
    18c6:	e009      	b.n	18dc <tcc_init+0x1c0>
    18c8:	68fa      	ldr	r2, [r7, #12]
    18ca:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    18cc:	009b      	lsls	r3, r3, #2
    18ce:	18d3      	adds	r3, r2, r3
    18d0:	3304      	adds	r3, #4
    18d2:	2200      	movs	r2, #0
    18d4:	601a      	str	r2, [r3, #0]
    18d6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    18d8:	3301      	adds	r3, #1
    18da:	63fb      	str	r3, [r7, #60]	; 0x3c
    18dc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    18de:	2b0b      	cmp	r3, #11
    18e0:	ddf2      	ble.n	18c8 <tcc_init+0x1ac>
    18e2:	68fb      	ldr	r3, [r7, #12]
    18e4:	2200      	movs	r2, #0
    18e6:	635a      	str	r2, [r3, #52]	; 0x34
    18e8:	68fb      	ldr	r3, [r7, #12]
    18ea:	2200      	movs	r2, #0
    18ec:	639a      	str	r2, [r3, #56]	; 0x38
    18ee:	233b      	movs	r3, #59	; 0x3b
    18f0:	18fb      	adds	r3, r7, r3
    18f2:	781a      	ldrb	r2, [r3, #0]
    18f4:	4b5d      	ldr	r3, [pc, #372]	; (1a6c <tcc_init+0x350>)
    18f6:	0092      	lsls	r2, r2, #2
    18f8:	68f9      	ldr	r1, [r7, #12]
    18fa:	50d1      	str	r1, [r2, r3]
    18fc:	68fb      	ldr	r3, [r7, #12]
    18fe:	68ba      	ldr	r2, [r7, #8]
    1900:	601a      	str	r2, [r3, #0]
    1902:	687b      	ldr	r3, [r7, #4]
    1904:	22a0      	movs	r2, #160	; 0xa0
    1906:	5c99      	ldrb	r1, [r3, r2]
    1908:	68fb      	ldr	r3, [r7, #12]
    190a:	223c      	movs	r2, #60	; 0x3c
    190c:	5499      	strb	r1, [r3, r2]
    190e:	2314      	movs	r3, #20
    1910:	18fb      	adds	r3, r7, r3
    1912:	0018      	movs	r0, r3
    1914:	4b56      	ldr	r3, [pc, #344]	; (1a70 <tcc_init+0x354>)
    1916:	4798      	blx	r3
    1918:	687b      	ldr	r3, [r7, #4]
    191a:	7a9a      	ldrb	r2, [r3, #10]
    191c:	2314      	movs	r3, #20
    191e:	18fb      	adds	r3, r7, r3
    1920:	701a      	strb	r2, [r3, #0]
    1922:	233b      	movs	r3, #59	; 0x3b
    1924:	18fb      	adds	r3, r7, r3
    1926:	781b      	ldrb	r3, [r3, #0]
    1928:	4a52      	ldr	r2, [pc, #328]	; (1a74 <tcc_init+0x358>)
    192a:	5cd3      	ldrb	r3, [r2, r3]
    192c:	2214      	movs	r2, #20
    192e:	18ba      	adds	r2, r7, r2
    1930:	0011      	movs	r1, r2
    1932:	0018      	movs	r0, r3
    1934:	4b50      	ldr	r3, [pc, #320]	; (1a78 <tcc_init+0x35c>)
    1936:	4798      	blx	r3
    1938:	233b      	movs	r3, #59	; 0x3b
    193a:	18fb      	adds	r3, r7, r3
    193c:	781b      	ldrb	r3, [r3, #0]
    193e:	4a4d      	ldr	r2, [pc, #308]	; (1a74 <tcc_init+0x358>)
    1940:	5cd3      	ldrb	r3, [r2, r3]
    1942:	0018      	movs	r0, r3
    1944:	4b4d      	ldr	r3, [pc, #308]	; (1a7c <tcc_init+0x360>)
    1946:	4798      	blx	r3
    1948:	2300      	movs	r3, #0
    194a:	63fb      	str	r3, [r7, #60]	; 0x3c
    194c:	e02d      	b.n	19aa <tcc_init+0x28e>
    194e:	687a      	ldr	r2, [r7, #4]
    1950:	2198      	movs	r1, #152	; 0x98
    1952:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1954:	18d3      	adds	r3, r2, r3
    1956:	185b      	adds	r3, r3, r1
    1958:	781b      	ldrb	r3, [r3, #0]
    195a:	2201      	movs	r2, #1
    195c:	4053      	eors	r3, r2
    195e:	b2db      	uxtb	r3, r3
    1960:	2b00      	cmp	r3, #0
    1962:	d11e      	bne.n	19a2 <tcc_init+0x286>
    1964:	2310      	movs	r3, #16
    1966:	18fb      	adds	r3, r7, r3
    1968:	0018      	movs	r0, r3
    196a:	4b45      	ldr	r3, [pc, #276]	; (1a80 <tcc_init+0x364>)
    196c:	4798      	blx	r3
    196e:	687b      	ldr	r3, [r7, #4]
    1970:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    1972:	321e      	adds	r2, #30
    1974:	0092      	lsls	r2, r2, #2
    1976:	58d3      	ldr	r3, [r2, r3]
    1978:	b2da      	uxtb	r2, r3
    197a:	2310      	movs	r3, #16
    197c:	18fb      	adds	r3, r7, r3
    197e:	701a      	strb	r2, [r3, #0]
    1980:	2310      	movs	r3, #16
    1982:	18fb      	adds	r3, r7, r3
    1984:	2201      	movs	r2, #1
    1986:	705a      	strb	r2, [r3, #1]
    1988:	687b      	ldr	r3, [r7, #4]
    198a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    198c:	3216      	adds	r2, #22
    198e:	0092      	lsls	r2, r2, #2
    1990:	58d3      	ldr	r3, [r2, r3]
    1992:	b2db      	uxtb	r3, r3
    1994:	2210      	movs	r2, #16
    1996:	18ba      	adds	r2, r7, r2
    1998:	0011      	movs	r1, r2
    199a:	0018      	movs	r0, r3
    199c:	4b39      	ldr	r3, [pc, #228]	; (1a84 <tcc_init+0x368>)
    199e:	4798      	blx	r3
    19a0:	e000      	b.n	19a4 <tcc_init+0x288>
    19a2:	46c0      	nop			; (mov r8, r8)
    19a4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    19a6:	3301      	adds	r3, #1
    19a8:	63fb      	str	r3, [r7, #60]	; 0x3c
    19aa:	233b      	movs	r3, #59	; 0x3b
    19ac:	18fb      	adds	r3, r7, r3
    19ae:	781b      	ldrb	r3, [r3, #0]
    19b0:	4a28      	ldr	r2, [pc, #160]	; (1a54 <tcc_init+0x338>)
    19b2:	5cd3      	ldrb	r3, [r2, r3]
    19b4:	1e1a      	subs	r2, r3, #0
    19b6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    19b8:	429a      	cmp	r2, r3
    19ba:	dcc8      	bgt.n	194e <tcc_init+0x232>
    19bc:	6afa      	ldr	r2, [r7, #44]	; 0x2c
    19be:	68bb      	ldr	r3, [r7, #8]
    19c0:	601a      	str	r2, [r3, #0]
    19c2:	46c0      	nop			; (mov r8, r8)
    19c4:	68bb      	ldr	r3, [r7, #8]
    19c6:	689b      	ldr	r3, [r3, #8]
    19c8:	2204      	movs	r2, #4
    19ca:	4013      	ands	r3, r2
    19cc:	d1fa      	bne.n	19c4 <tcc_init+0x2a8>
    19ce:	68bb      	ldr	r3, [r7, #8]
    19d0:	22ff      	movs	r2, #255	; 0xff
    19d2:	711a      	strb	r2, [r3, #4]
    19d4:	46c0      	nop			; (mov r8, r8)
    19d6:	68bb      	ldr	r3, [r7, #8]
    19d8:	689b      	ldr	r3, [r3, #8]
    19da:	2204      	movs	r2, #4
    19dc:	4013      	ands	r3, r2
    19de:	d1fa      	bne.n	19d6 <tcc_init+0x2ba>
    19e0:	232b      	movs	r3, #43	; 0x2b
    19e2:	18fb      	adds	r3, r7, r3
    19e4:	781a      	ldrb	r2, [r3, #0]
    19e6:	68bb      	ldr	r3, [r7, #8]
    19e8:	715a      	strb	r2, [r3, #5]
    19ea:	2320      	movs	r3, #32
    19ec:	18fb      	adds	r3, r7, r3
    19ee:	681a      	ldr	r2, [r3, #0]
    19f0:	68bb      	ldr	r3, [r7, #8]
    19f2:	60da      	str	r2, [r3, #12]
    19f4:	2320      	movs	r3, #32
    19f6:	18fb      	adds	r3, r7, r3
    19f8:	685a      	ldr	r2, [r3, #4]
    19fa:	68bb      	ldr	r3, [r7, #8]
    19fc:	611a      	str	r2, [r3, #16]
    19fe:	69fa      	ldr	r2, [r7, #28]
    1a00:	68bb      	ldr	r3, [r7, #8]
    1a02:	619a      	str	r2, [r3, #24]
    1a04:	46c0      	nop			; (mov r8, r8)
    1a06:	68bb      	ldr	r3, [r7, #8]
    1a08:	689b      	ldr	r3, [r3, #8]
    1a0a:	4a1f      	ldr	r2, [pc, #124]	; (1a88 <tcc_init+0x36c>)
    1a0c:	4013      	ands	r3, r2
    1a0e:	d1fa      	bne.n	1a06 <tcc_init+0x2ea>
    1a10:	69ba      	ldr	r2, [r7, #24]
    1a12:	68bb      	ldr	r3, [r7, #8]
    1a14:	63da      	str	r2, [r3, #60]	; 0x3c
    1a16:	46c0      	nop			; (mov r8, r8)
    1a18:	68bb      	ldr	r3, [r7, #8]
    1a1a:	689b      	ldr	r3, [r3, #8]
    1a1c:	2210      	movs	r2, #16
    1a1e:	4013      	ands	r3, r2
    1a20:	d1fa      	bne.n	1a18 <tcc_init+0x2fc>
    1a22:	687b      	ldr	r3, [r7, #4]
    1a24:	681a      	ldr	r2, [r3, #0]
    1a26:	68bb      	ldr	r3, [r7, #8]
    1a28:	635a      	str	r2, [r3, #52]	; 0x34
    1a2a:	46c0      	nop			; (mov r8, r8)
    1a2c:	68bb      	ldr	r3, [r7, #8]
    1a2e:	689b      	ldr	r3, [r3, #8]
    1a30:	4a16      	ldr	r2, [pc, #88]	; (1a8c <tcc_init+0x370>)
    1a32:	4013      	ands	r3, r2
    1a34:	d1fa      	bne.n	1a2c <tcc_init+0x310>
    1a36:	687b      	ldr	r3, [r7, #4]
    1a38:	685a      	ldr	r2, [r3, #4]
    1a3a:	68bb      	ldr	r3, [r7, #8]
    1a3c:	641a      	str	r2, [r3, #64]	; 0x40
    1a3e:	2300      	movs	r3, #0
    1a40:	63fb      	str	r3, [r7, #60]	; 0x3c
    1a42:	e03f      	b.n	1ac4 <tcc_init+0x3a8>
    1a44:	00001085 	.word	0x00001085
    1a48:	000057b4 	.word	0x000057b4
    1a4c:	00001001 	.word	0x00001001
    1a50:	000057c0 	.word	0x000057c0
    1a54:	000057d0 	.word	0x000057d0
    1a58:	00001391 	.word	0x00001391
    1a5c:	00001435 	.word	0x00001435
    1a60:	00001491 	.word	0x00001491
    1a64:	000015ad 	.word	0x000015ad
    1a68:	00001685 	.word	0x00001685
    1a6c:	200000c4 	.word	0x200000c4
    1a70:	00000fe9 	.word	0x00000fe9
    1a74:	000057b0 	.word	0x000057b0
    1a78:	000039c5 	.word	0x000039c5
    1a7c:	00003a09 	.word	0x00003a09
    1a80:	0000105d 	.word	0x0000105d
    1a84:	00003cb1 	.word	0x00003cb1
    1a88:	00020040 	.word	0x00020040
    1a8c:	00040080 	.word	0x00040080
    1a90:	46c0      	nop			; (mov r8, r8)
    1a92:	68bb      	ldr	r3, [r7, #8]
    1a94:	689b      	ldr	r3, [r3, #8]
    1a96:	4912      	ldr	r1, [pc, #72]	; (1ae0 <tcc_init+0x3c4>)
    1a98:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    1a9a:	4091      	lsls	r1, r2
    1a9c:	000a      	movs	r2, r1
    1a9e:	4013      	ands	r3, r2
    1aa0:	d1f7      	bne.n	1a92 <tcc_init+0x376>
    1aa2:	687a      	ldr	r2, [r7, #4]
    1aa4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1aa6:	3306      	adds	r3, #6
    1aa8:	009b      	lsls	r3, r3, #2
    1aaa:	18d3      	adds	r3, r2, r3
    1aac:	3304      	adds	r3, #4
    1aae:	681a      	ldr	r2, [r3, #0]
    1ab0:	68b9      	ldr	r1, [r7, #8]
    1ab2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1ab4:	3310      	adds	r3, #16
    1ab6:	009b      	lsls	r3, r3, #2
    1ab8:	18cb      	adds	r3, r1, r3
    1aba:	3304      	adds	r3, #4
    1abc:	601a      	str	r2, [r3, #0]
    1abe:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1ac0:	3301      	adds	r3, #1
    1ac2:	63fb      	str	r3, [r7, #60]	; 0x3c
    1ac4:	233b      	movs	r3, #59	; 0x3b
    1ac6:	18fb      	adds	r3, r7, r3
    1ac8:	781b      	ldrb	r3, [r3, #0]
    1aca:	4a06      	ldr	r2, [pc, #24]	; (1ae4 <tcc_init+0x3c8>)
    1acc:	5cd3      	ldrb	r3, [r2, r3]
    1ace:	1e1a      	subs	r2, r3, #0
    1ad0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    1ad2:	429a      	cmp	r2, r3
    1ad4:	dcdc      	bgt.n	1a90 <tcc_init+0x374>
    1ad6:	2300      	movs	r3, #0
    1ad8:	0018      	movs	r0, r3
    1ada:	46bd      	mov	sp, r7
    1adc:	b011      	add	sp, #68	; 0x44
    1ade:	bd90      	pop	{r4, r7, pc}
    1ae0:	00080100 	.word	0x00080100
    1ae4:	000057cc 	.word	0x000057cc

00001ae8 <_tcc_set_compare_value>:
    1ae8:	b590      	push	{r4, r7, lr}
    1aea:	b089      	sub	sp, #36	; 0x24
    1aec:	af00      	add	r7, sp, #0
    1aee:	60f8      	str	r0, [r7, #12]
    1af0:	0008      	movs	r0, r1
    1af2:	607a      	str	r2, [r7, #4]
    1af4:	0019      	movs	r1, r3
    1af6:	230b      	movs	r3, #11
    1af8:	18fb      	adds	r3, r7, r3
    1afa:	1c02      	adds	r2, r0, #0
    1afc:	701a      	strb	r2, [r3, #0]
    1afe:	230a      	movs	r3, #10
    1b00:	18fb      	adds	r3, r7, r3
    1b02:	1c0a      	adds	r2, r1, #0
    1b04:	701a      	strb	r2, [r3, #0]
    1b06:	68fb      	ldr	r3, [r7, #12]
    1b08:	681b      	ldr	r3, [r3, #0]
    1b0a:	61fb      	str	r3, [r7, #28]
    1b0c:	231b      	movs	r3, #27
    1b0e:	18fc      	adds	r4, r7, r3
    1b10:	69fb      	ldr	r3, [r7, #28]
    1b12:	0018      	movs	r0, r3
    1b14:	4b28      	ldr	r3, [pc, #160]	; (1bb8 <_tcc_set_compare_value+0xd0>)
    1b16:	4798      	blx	r3
    1b18:	0003      	movs	r3, r0
    1b1a:	7023      	strb	r3, [r4, #0]
    1b1c:	231b      	movs	r3, #27
    1b1e:	18fb      	adds	r3, r7, r3
    1b20:	781b      	ldrb	r3, [r3, #0]
    1b22:	4a26      	ldr	r2, [pc, #152]	; (1bbc <_tcc_set_compare_value+0xd4>)
    1b24:	5cd3      	ldrb	r3, [r2, r3]
    1b26:	220b      	movs	r2, #11
    1b28:	18ba      	adds	r2, r7, r2
    1b2a:	7812      	ldrb	r2, [r2, #0]
    1b2c:	429a      	cmp	r2, r3
    1b2e:	d301      	bcc.n	1b34 <_tcc_set_compare_value+0x4c>
    1b30:	2317      	movs	r3, #23
    1b32:	e03d      	b.n	1bb0 <_tcc_set_compare_value+0xc8>
    1b34:	231b      	movs	r3, #27
    1b36:	18fb      	adds	r3, r7, r3
    1b38:	781a      	ldrb	r2, [r3, #0]
    1b3a:	4b21      	ldr	r3, [pc, #132]	; (1bc0 <_tcc_set_compare_value+0xd8>)
    1b3c:	0092      	lsls	r2, r2, #2
    1b3e:	58d3      	ldr	r3, [r2, r3]
    1b40:	617b      	str	r3, [r7, #20]
    1b42:	687a      	ldr	r2, [r7, #4]
    1b44:	697b      	ldr	r3, [r7, #20]
    1b46:	429a      	cmp	r2, r3
    1b48:	d901      	bls.n	1b4e <_tcc_set_compare_value+0x66>
    1b4a:	2317      	movs	r3, #23
    1b4c:	e030      	b.n	1bb0 <_tcc_set_compare_value+0xc8>
    1b4e:	230a      	movs	r3, #10
    1b50:	18fb      	adds	r3, r7, r3
    1b52:	781b      	ldrb	r3, [r3, #0]
    1b54:	2b00      	cmp	r3, #0
    1b56:	d014      	beq.n	1b82 <_tcc_set_compare_value+0x9a>
    1b58:	46c0      	nop			; (mov r8, r8)
    1b5a:	69fb      	ldr	r3, [r7, #28]
    1b5c:	689b      	ldr	r3, [r3, #8]
    1b5e:	220b      	movs	r2, #11
    1b60:	18ba      	adds	r2, r7, r2
    1b62:	7812      	ldrb	r2, [r2, #0]
    1b64:	2180      	movs	r1, #128	; 0x80
    1b66:	0309      	lsls	r1, r1, #12
    1b68:	4091      	lsls	r1, r2
    1b6a:	000a      	movs	r2, r1
    1b6c:	4013      	ands	r3, r2
    1b6e:	d1f4      	bne.n	1b5a <_tcc_set_compare_value+0x72>
    1b70:	230b      	movs	r3, #11
    1b72:	18fb      	adds	r3, r7, r3
    1b74:	781a      	ldrb	r2, [r3, #0]
    1b76:	69fb      	ldr	r3, [r7, #28]
    1b78:	321c      	adds	r2, #28
    1b7a:	0092      	lsls	r2, r2, #2
    1b7c:	6879      	ldr	r1, [r7, #4]
    1b7e:	50d1      	str	r1, [r2, r3]
    1b80:	e015      	b.n	1bae <_tcc_set_compare_value+0xc6>
    1b82:	46c0      	nop			; (mov r8, r8)
    1b84:	69fb      	ldr	r3, [r7, #28]
    1b86:	689b      	ldr	r3, [r3, #8]
    1b88:	220b      	movs	r2, #11
    1b8a:	18ba      	adds	r2, r7, r2
    1b8c:	7812      	ldrb	r2, [r2, #0]
    1b8e:	2180      	movs	r1, #128	; 0x80
    1b90:	0049      	lsls	r1, r1, #1
    1b92:	4091      	lsls	r1, r2
    1b94:	000a      	movs	r2, r1
    1b96:	4013      	ands	r3, r2
    1b98:	d1f4      	bne.n	1b84 <_tcc_set_compare_value+0x9c>
    1b9a:	230b      	movs	r3, #11
    1b9c:	18fb      	adds	r3, r7, r3
    1b9e:	781b      	ldrb	r3, [r3, #0]
    1ba0:	69fa      	ldr	r2, [r7, #28]
    1ba2:	3310      	adds	r3, #16
    1ba4:	009b      	lsls	r3, r3, #2
    1ba6:	18d3      	adds	r3, r2, r3
    1ba8:	3304      	adds	r3, #4
    1baa:	687a      	ldr	r2, [r7, #4]
    1bac:	601a      	str	r2, [r3, #0]
    1bae:	2300      	movs	r3, #0
    1bb0:	0018      	movs	r0, r3
    1bb2:	46bd      	mov	sp, r7
    1bb4:	b009      	add	sp, #36	; 0x24
    1bb6:	bd90      	pop	{r4, r7, pc}
    1bb8:	00001085 	.word	0x00001085
    1bbc:	000057cc 	.word	0x000057cc
    1bc0:	000057c0 	.word	0x000057c0

00001bc4 <tcc_set_compare_value>:
    1bc4:	b590      	push	{r4, r7, lr}
    1bc6:	b085      	sub	sp, #20
    1bc8:	af00      	add	r7, sp, #0
    1bca:	60f8      	str	r0, [r7, #12]
    1bcc:	607a      	str	r2, [r7, #4]
    1bce:	230b      	movs	r3, #11
    1bd0:	18fb      	adds	r3, r7, r3
    1bd2:	1c0a      	adds	r2, r1, #0
    1bd4:	701a      	strb	r2, [r3, #0]
    1bd6:	68fb      	ldr	r3, [r7, #12]
    1bd8:	223c      	movs	r2, #60	; 0x3c
    1bda:	5c9c      	ldrb	r4, [r3, r2]
    1bdc:	687a      	ldr	r2, [r7, #4]
    1bde:	230b      	movs	r3, #11
    1be0:	18fb      	adds	r3, r7, r3
    1be2:	7819      	ldrb	r1, [r3, #0]
    1be4:	68f8      	ldr	r0, [r7, #12]
    1be6:	0023      	movs	r3, r4
    1be8:	4c03      	ldr	r4, [pc, #12]	; (1bf8 <tcc_set_compare_value+0x34>)
    1bea:	47a0      	blx	r4
    1bec:	0003      	movs	r3, r0
    1bee:	0018      	movs	r0, r3
    1bf0:	46bd      	mov	sp, r7
    1bf2:	b005      	add	sp, #20
    1bf4:	bd90      	pop	{r4, r7, pc}
    1bf6:	46c0      	nop			; (mov r8, r8)
    1bf8:	00001ae9 	.word	0x00001ae9

00001bfc <TCC0_Handler>:
    1bfc:	b580      	push	{r7, lr}
    1bfe:	af00      	add	r7, sp, #0
    1c00:	2000      	movs	r0, #0
    1c02:	4b02      	ldr	r3, [pc, #8]	; (1c0c <TCC0_Handler+0x10>)
    1c04:	4798      	blx	r3
    1c06:	46c0      	nop			; (mov r8, r8)
    1c08:	46bd      	mov	sp, r7
    1c0a:	bd80      	pop	{r7, pc}
    1c0c:	00001c39 	.word	0x00001c39

00001c10 <TCC1_Handler>:
    1c10:	b580      	push	{r7, lr}
    1c12:	af00      	add	r7, sp, #0
    1c14:	2001      	movs	r0, #1
    1c16:	4b02      	ldr	r3, [pc, #8]	; (1c20 <TCC1_Handler+0x10>)
    1c18:	4798      	blx	r3
    1c1a:	46c0      	nop			; (mov r8, r8)
    1c1c:	46bd      	mov	sp, r7
    1c1e:	bd80      	pop	{r7, pc}
    1c20:	00001c39 	.word	0x00001c39

00001c24 <TCC2_Handler>:
    1c24:	b580      	push	{r7, lr}
    1c26:	af00      	add	r7, sp, #0
    1c28:	2002      	movs	r0, #2
    1c2a:	4b02      	ldr	r3, [pc, #8]	; (1c34 <TCC2_Handler+0x10>)
    1c2c:	4798      	blx	r3
    1c2e:	46c0      	nop			; (mov r8, r8)
    1c30:	46bd      	mov	sp, r7
    1c32:	bd80      	pop	{r7, pc}
    1c34:	00001c39 	.word	0x00001c39

00001c38 <_tcc_interrupt_handler>:
    1c38:	b580      	push	{r7, lr}
    1c3a:	b086      	sub	sp, #24
    1c3c:	af00      	add	r7, sp, #0
    1c3e:	0002      	movs	r2, r0
    1c40:	1dfb      	adds	r3, r7, #7
    1c42:	701a      	strb	r2, [r3, #0]
    1c44:	1dfb      	adds	r3, r7, #7
    1c46:	781a      	ldrb	r2, [r3, #0]
    1c48:	4b18      	ldr	r3, [pc, #96]	; (1cac <_tcc_interrupt_handler+0x74>)
    1c4a:	0092      	lsls	r2, r2, #2
    1c4c:	58d3      	ldr	r3, [r2, r3]
    1c4e:	613b      	str	r3, [r7, #16]
    1c50:	693b      	ldr	r3, [r7, #16]
    1c52:	681b      	ldr	r3, [r3, #0]
    1c54:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    1c56:	693b      	ldr	r3, [r7, #16]
    1c58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    1c5a:	401a      	ands	r2, r3
    1c5c:	693b      	ldr	r3, [r7, #16]
    1c5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
    1c60:	4013      	ands	r3, r2
    1c62:	60fb      	str	r3, [r7, #12]
    1c64:	2300      	movs	r3, #0
    1c66:	617b      	str	r3, [r7, #20]
    1c68:	e019      	b.n	1c9e <_tcc_interrupt_handler+0x66>
    1c6a:	4b11      	ldr	r3, [pc, #68]	; (1cb0 <_tcc_interrupt_handler+0x78>)
    1c6c:	697a      	ldr	r2, [r7, #20]
    1c6e:	0092      	lsls	r2, r2, #2
    1c70:	58d3      	ldr	r3, [r2, r3]
    1c72:	68fa      	ldr	r2, [r7, #12]
    1c74:	4013      	ands	r3, r2
    1c76:	d00f      	beq.n	1c98 <_tcc_interrupt_handler+0x60>
    1c78:	693a      	ldr	r2, [r7, #16]
    1c7a:	697b      	ldr	r3, [r7, #20]
    1c7c:	009b      	lsls	r3, r3, #2
    1c7e:	18d3      	adds	r3, r2, r3
    1c80:	3304      	adds	r3, #4
    1c82:	681b      	ldr	r3, [r3, #0]
    1c84:	693a      	ldr	r2, [r7, #16]
    1c86:	0010      	movs	r0, r2
    1c88:	4798      	blx	r3
    1c8a:	693b      	ldr	r3, [r7, #16]
    1c8c:	681b      	ldr	r3, [r3, #0]
    1c8e:	4a08      	ldr	r2, [pc, #32]	; (1cb0 <_tcc_interrupt_handler+0x78>)
    1c90:	6979      	ldr	r1, [r7, #20]
    1c92:	0089      	lsls	r1, r1, #2
    1c94:	588a      	ldr	r2, [r1, r2]
    1c96:	62da      	str	r2, [r3, #44]	; 0x2c
    1c98:	697b      	ldr	r3, [r7, #20]
    1c9a:	3301      	adds	r3, #1
    1c9c:	617b      	str	r3, [r7, #20]
    1c9e:	697b      	ldr	r3, [r7, #20]
    1ca0:	2b0b      	cmp	r3, #11
    1ca2:	dde2      	ble.n	1c6a <_tcc_interrupt_handler+0x32>
    1ca4:	46c0      	nop			; (mov r8, r8)
    1ca6:	46bd      	mov	sp, r7
    1ca8:	b006      	add	sp, #24
    1caa:	bd80      	pop	{r7, pc}
    1cac:	200000c4 	.word	0x200000c4
    1cb0:	000057d4 	.word	0x000057d4

00001cb4 <TC3_Handler>:
    1cb4:	b580      	push	{r7, lr}
    1cb6:	af00      	add	r7, sp, #0
    1cb8:	2000      	movs	r0, #0
    1cba:	4b02      	ldr	r3, [pc, #8]	; (1cc4 <TC3_Handler+0x10>)
    1cbc:	4798      	blx	r3
    1cbe:	46c0      	nop			; (mov r8, r8)
    1cc0:	46bd      	mov	sp, r7
    1cc2:	bd80      	pop	{r7, pc}
    1cc4:	00001cf1 	.word	0x00001cf1

00001cc8 <TC4_Handler>:
    1cc8:	b580      	push	{r7, lr}
    1cca:	af00      	add	r7, sp, #0
    1ccc:	2001      	movs	r0, #1
    1cce:	4b02      	ldr	r3, [pc, #8]	; (1cd8 <TC4_Handler+0x10>)
    1cd0:	4798      	blx	r3
    1cd2:	46c0      	nop			; (mov r8, r8)
    1cd4:	46bd      	mov	sp, r7
    1cd6:	bd80      	pop	{r7, pc}
    1cd8:	00001cf1 	.word	0x00001cf1

00001cdc <TC5_Handler>:
    1cdc:	b580      	push	{r7, lr}
    1cde:	af00      	add	r7, sp, #0
    1ce0:	2002      	movs	r0, #2
    1ce2:	4b02      	ldr	r3, [pc, #8]	; (1cec <TC5_Handler+0x10>)
    1ce4:	4798      	blx	r3
    1ce6:	46c0      	nop			; (mov r8, r8)
    1ce8:	46bd      	mov	sp, r7
    1cea:	bd80      	pop	{r7, pc}
    1cec:	00001cf1 	.word	0x00001cf1

00001cf0 <_tc_interrupt_handler>:
    1cf0:	b580      	push	{r7, lr}
    1cf2:	b084      	sub	sp, #16
    1cf4:	af00      	add	r7, sp, #0
    1cf6:	0002      	movs	r2, r0
    1cf8:	1dfb      	adds	r3, r7, #7
    1cfa:	701a      	strb	r2, [r3, #0]
    1cfc:	1dfb      	adds	r3, r7, #7
    1cfe:	781a      	ldrb	r2, [r3, #0]
    1d00:	4b28      	ldr	r3, [pc, #160]	; (1da4 <_tc_interrupt_handler+0xb4>)
    1d02:	0092      	lsls	r2, r2, #2
    1d04:	58d3      	ldr	r3, [r2, r3]
    1d06:	60fb      	str	r3, [r7, #12]
    1d08:	68fb      	ldr	r3, [r7, #12]
    1d0a:	681b      	ldr	r3, [r3, #0]
    1d0c:	7b9b      	ldrb	r3, [r3, #14]
    1d0e:	b2db      	uxtb	r3, r3
    1d10:	68fa      	ldr	r2, [r7, #12]
    1d12:	7e12      	ldrb	r2, [r2, #24]
    1d14:	4013      	ands	r3, r2
    1d16:	b2da      	uxtb	r2, r3
    1d18:	68fb      	ldr	r3, [r7, #12]
    1d1a:	7e59      	ldrb	r1, [r3, #25]
    1d1c:	230b      	movs	r3, #11
    1d1e:	18fb      	adds	r3, r7, r3
    1d20:	400a      	ands	r2, r1
    1d22:	701a      	strb	r2, [r3, #0]
    1d24:	230b      	movs	r3, #11
    1d26:	18fb      	adds	r3, r7, r3
    1d28:	781b      	ldrb	r3, [r3, #0]
    1d2a:	2201      	movs	r2, #1
    1d2c:	4013      	ands	r3, r2
    1d2e:	d008      	beq.n	1d42 <_tc_interrupt_handler+0x52>
    1d30:	68fb      	ldr	r3, [r7, #12]
    1d32:	689b      	ldr	r3, [r3, #8]
    1d34:	68fa      	ldr	r2, [r7, #12]
    1d36:	0010      	movs	r0, r2
    1d38:	4798      	blx	r3
    1d3a:	68fb      	ldr	r3, [r7, #12]
    1d3c:	681b      	ldr	r3, [r3, #0]
    1d3e:	2201      	movs	r2, #1
    1d40:	739a      	strb	r2, [r3, #14]
    1d42:	230b      	movs	r3, #11
    1d44:	18fb      	adds	r3, r7, r3
    1d46:	781b      	ldrb	r3, [r3, #0]
    1d48:	2202      	movs	r2, #2
    1d4a:	4013      	ands	r3, r2
    1d4c:	d008      	beq.n	1d60 <_tc_interrupt_handler+0x70>
    1d4e:	68fb      	ldr	r3, [r7, #12]
    1d50:	68db      	ldr	r3, [r3, #12]
    1d52:	68fa      	ldr	r2, [r7, #12]
    1d54:	0010      	movs	r0, r2
    1d56:	4798      	blx	r3
    1d58:	68fb      	ldr	r3, [r7, #12]
    1d5a:	681b      	ldr	r3, [r3, #0]
    1d5c:	2202      	movs	r2, #2
    1d5e:	739a      	strb	r2, [r3, #14]
    1d60:	230b      	movs	r3, #11
    1d62:	18fb      	adds	r3, r7, r3
    1d64:	781b      	ldrb	r3, [r3, #0]
    1d66:	2210      	movs	r2, #16
    1d68:	4013      	ands	r3, r2
    1d6a:	d008      	beq.n	1d7e <_tc_interrupt_handler+0x8e>
    1d6c:	68fb      	ldr	r3, [r7, #12]
    1d6e:	691b      	ldr	r3, [r3, #16]
    1d70:	68fa      	ldr	r2, [r7, #12]
    1d72:	0010      	movs	r0, r2
    1d74:	4798      	blx	r3
    1d76:	68fb      	ldr	r3, [r7, #12]
    1d78:	681b      	ldr	r3, [r3, #0]
    1d7a:	2210      	movs	r2, #16
    1d7c:	739a      	strb	r2, [r3, #14]
    1d7e:	230b      	movs	r3, #11
    1d80:	18fb      	adds	r3, r7, r3
    1d82:	781b      	ldrb	r3, [r3, #0]
    1d84:	2220      	movs	r2, #32
    1d86:	4013      	ands	r3, r2
    1d88:	d008      	beq.n	1d9c <_tc_interrupt_handler+0xac>
    1d8a:	68fb      	ldr	r3, [r7, #12]
    1d8c:	695b      	ldr	r3, [r3, #20]
    1d8e:	68fa      	ldr	r2, [r7, #12]
    1d90:	0010      	movs	r0, r2
    1d92:	4798      	blx	r3
    1d94:	68fb      	ldr	r3, [r7, #12]
    1d96:	681b      	ldr	r3, [r3, #0]
    1d98:	2220      	movs	r2, #32
    1d9a:	739a      	strb	r2, [r3, #14]
    1d9c:	46c0      	nop			; (mov r8, r8)
    1d9e:	46bd      	mov	sp, r7
    1da0:	b004      	add	sp, #16
    1da2:	bd80      	pop	{r7, pc}
    1da4:	200000d0 	.word	0x200000d0

00001da8 <system_pinmux_get_config_defaults>:
    1da8:	b580      	push	{r7, lr}
    1daa:	b082      	sub	sp, #8
    1dac:	af00      	add	r7, sp, #0
    1dae:	6078      	str	r0, [r7, #4]
    1db0:	687b      	ldr	r3, [r7, #4]
    1db2:	2280      	movs	r2, #128	; 0x80
    1db4:	701a      	strb	r2, [r3, #0]
    1db6:	687b      	ldr	r3, [r7, #4]
    1db8:	2200      	movs	r2, #0
    1dba:	705a      	strb	r2, [r3, #1]
    1dbc:	687b      	ldr	r3, [r7, #4]
    1dbe:	2201      	movs	r2, #1
    1dc0:	709a      	strb	r2, [r3, #2]
    1dc2:	687b      	ldr	r3, [r7, #4]
    1dc4:	2200      	movs	r2, #0
    1dc6:	70da      	strb	r2, [r3, #3]
    1dc8:	46c0      	nop			; (mov r8, r8)
    1dca:	46bd      	mov	sp, r7
    1dcc:	b002      	add	sp, #8
    1dce:	bd80      	pop	{r7, pc}

00001dd0 <system_pinmux_get_group_from_gpio_pin>:
    1dd0:	b580      	push	{r7, lr}
    1dd2:	b084      	sub	sp, #16
    1dd4:	af00      	add	r7, sp, #0
    1dd6:	0002      	movs	r2, r0
    1dd8:	1dfb      	adds	r3, r7, #7
    1dda:	701a      	strb	r2, [r3, #0]
    1ddc:	230f      	movs	r3, #15
    1dde:	18fb      	adds	r3, r7, r3
    1de0:	1dfa      	adds	r2, r7, #7
    1de2:	7812      	ldrb	r2, [r2, #0]
    1de4:	09d2      	lsrs	r2, r2, #7
    1de6:	701a      	strb	r2, [r3, #0]
    1de8:	230e      	movs	r3, #14
    1dea:	18fb      	adds	r3, r7, r3
    1dec:	1dfa      	adds	r2, r7, #7
    1dee:	7812      	ldrb	r2, [r2, #0]
    1df0:	0952      	lsrs	r2, r2, #5
    1df2:	701a      	strb	r2, [r3, #0]
    1df4:	4b0d      	ldr	r3, [pc, #52]	; (1e2c <system_pinmux_get_group_from_gpio_pin+0x5c>)
    1df6:	60bb      	str	r3, [r7, #8]
    1df8:	230f      	movs	r3, #15
    1dfa:	18fb      	adds	r3, r7, r3
    1dfc:	781b      	ldrb	r3, [r3, #0]
    1dfe:	2b00      	cmp	r3, #0
    1e00:	d10f      	bne.n	1e22 <system_pinmux_get_group_from_gpio_pin+0x52>
    1e02:	230f      	movs	r3, #15
    1e04:	18fb      	adds	r3, r7, r3
    1e06:	781b      	ldrb	r3, [r3, #0]
    1e08:	009b      	lsls	r3, r3, #2
    1e0a:	2210      	movs	r2, #16
    1e0c:	4694      	mov	ip, r2
    1e0e:	44bc      	add	ip, r7
    1e10:	4463      	add	r3, ip
    1e12:	3b08      	subs	r3, #8
    1e14:	681a      	ldr	r2, [r3, #0]
    1e16:	230e      	movs	r3, #14
    1e18:	18fb      	adds	r3, r7, r3
    1e1a:	781b      	ldrb	r3, [r3, #0]
    1e1c:	01db      	lsls	r3, r3, #7
    1e1e:	18d3      	adds	r3, r2, r3
    1e20:	e000      	b.n	1e24 <system_pinmux_get_group_from_gpio_pin+0x54>
    1e22:	2300      	movs	r3, #0
    1e24:	0018      	movs	r0, r3
    1e26:	46bd      	mov	sp, r7
    1e28:	b004      	add	sp, #16
    1e2a:	bd80      	pop	{r7, pc}
    1e2c:	41004400 	.word	0x41004400

00001e30 <port_get_group_from_gpio_pin>:
    1e30:	b580      	push	{r7, lr}
    1e32:	b082      	sub	sp, #8
    1e34:	af00      	add	r7, sp, #0
    1e36:	0002      	movs	r2, r0
    1e38:	1dfb      	adds	r3, r7, #7
    1e3a:	701a      	strb	r2, [r3, #0]
    1e3c:	1dfb      	adds	r3, r7, #7
    1e3e:	781b      	ldrb	r3, [r3, #0]
    1e40:	0018      	movs	r0, r3
    1e42:	4b03      	ldr	r3, [pc, #12]	; (1e50 <port_get_group_from_gpio_pin+0x20>)
    1e44:	4798      	blx	r3
    1e46:	0003      	movs	r3, r0
    1e48:	0018      	movs	r0, r3
    1e4a:	46bd      	mov	sp, r7
    1e4c:	b002      	add	sp, #8
    1e4e:	bd80      	pop	{r7, pc}
    1e50:	00001dd1 	.word	0x00001dd1

00001e54 <port_pin_set_output_level>:
    1e54:	b580      	push	{r7, lr}
    1e56:	b084      	sub	sp, #16
    1e58:	af00      	add	r7, sp, #0
    1e5a:	0002      	movs	r2, r0
    1e5c:	1dfb      	adds	r3, r7, #7
    1e5e:	701a      	strb	r2, [r3, #0]
    1e60:	1dbb      	adds	r3, r7, #6
    1e62:	1c0a      	adds	r2, r1, #0
    1e64:	701a      	strb	r2, [r3, #0]
    1e66:	1dfb      	adds	r3, r7, #7
    1e68:	781b      	ldrb	r3, [r3, #0]
    1e6a:	0018      	movs	r0, r3
    1e6c:	4b0d      	ldr	r3, [pc, #52]	; (1ea4 <port_pin_set_output_level+0x50>)
    1e6e:	4798      	blx	r3
    1e70:	0003      	movs	r3, r0
    1e72:	60fb      	str	r3, [r7, #12]
    1e74:	1dfb      	adds	r3, r7, #7
    1e76:	781b      	ldrb	r3, [r3, #0]
    1e78:	221f      	movs	r2, #31
    1e7a:	4013      	ands	r3, r2
    1e7c:	2201      	movs	r2, #1
    1e7e:	409a      	lsls	r2, r3
    1e80:	0013      	movs	r3, r2
    1e82:	60bb      	str	r3, [r7, #8]
    1e84:	1dbb      	adds	r3, r7, #6
    1e86:	781b      	ldrb	r3, [r3, #0]
    1e88:	2b00      	cmp	r3, #0
    1e8a:	d003      	beq.n	1e94 <port_pin_set_output_level+0x40>
    1e8c:	68fb      	ldr	r3, [r7, #12]
    1e8e:	68ba      	ldr	r2, [r7, #8]
    1e90:	619a      	str	r2, [r3, #24]
    1e92:	e002      	b.n	1e9a <port_pin_set_output_level+0x46>
    1e94:	68fb      	ldr	r3, [r7, #12]
    1e96:	68ba      	ldr	r2, [r7, #8]
    1e98:	615a      	str	r2, [r3, #20]
    1e9a:	46c0      	nop			; (mov r8, r8)
    1e9c:	46bd      	mov	sp, r7
    1e9e:	b004      	add	sp, #16
    1ea0:	bd80      	pop	{r7, pc}
    1ea2:	46c0      	nop			; (mov r8, r8)
    1ea4:	00001e31 	.word	0x00001e31

00001ea8 <system_gclk_chan_get_config_defaults>:
    1ea8:	b580      	push	{r7, lr}
    1eaa:	b082      	sub	sp, #8
    1eac:	af00      	add	r7, sp, #0
    1eae:	6078      	str	r0, [r7, #4]
    1eb0:	687b      	ldr	r3, [r7, #4]
    1eb2:	2200      	movs	r2, #0
    1eb4:	701a      	strb	r2, [r3, #0]
    1eb6:	46c0      	nop			; (mov r8, r8)
    1eb8:	46bd      	mov	sp, r7
    1eba:	b002      	add	sp, #8
    1ebc:	bd80      	pop	{r7, pc}
    1ebe:	46c0      	nop			; (mov r8, r8)

00001ec0 <system_apb_clock_set_mask>:
    1ec0:	b580      	push	{r7, lr}
    1ec2:	b082      	sub	sp, #8
    1ec4:	af00      	add	r7, sp, #0
    1ec6:	0002      	movs	r2, r0
    1ec8:	6039      	str	r1, [r7, #0]
    1eca:	1dfb      	adds	r3, r7, #7
    1ecc:	701a      	strb	r2, [r3, #0]
    1ece:	1dfb      	adds	r3, r7, #7
    1ed0:	781b      	ldrb	r3, [r3, #0]
    1ed2:	2b01      	cmp	r3, #1
    1ed4:	d00a      	beq.n	1eec <system_apb_clock_set_mask+0x2c>
    1ed6:	2b02      	cmp	r3, #2
    1ed8:	d00f      	beq.n	1efa <system_apb_clock_set_mask+0x3a>
    1eda:	2b00      	cmp	r3, #0
    1edc:	d114      	bne.n	1f08 <system_apb_clock_set_mask+0x48>
    1ede:	4b0e      	ldr	r3, [pc, #56]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1ee0:	4a0d      	ldr	r2, [pc, #52]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1ee2:	6991      	ldr	r1, [r2, #24]
    1ee4:	683a      	ldr	r2, [r7, #0]
    1ee6:	430a      	orrs	r2, r1
    1ee8:	619a      	str	r2, [r3, #24]
    1eea:	e00f      	b.n	1f0c <system_apb_clock_set_mask+0x4c>
    1eec:	4b0a      	ldr	r3, [pc, #40]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1eee:	4a0a      	ldr	r2, [pc, #40]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1ef0:	69d1      	ldr	r1, [r2, #28]
    1ef2:	683a      	ldr	r2, [r7, #0]
    1ef4:	430a      	orrs	r2, r1
    1ef6:	61da      	str	r2, [r3, #28]
    1ef8:	e008      	b.n	1f0c <system_apb_clock_set_mask+0x4c>
    1efa:	4b07      	ldr	r3, [pc, #28]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1efc:	4a06      	ldr	r2, [pc, #24]	; (1f18 <system_apb_clock_set_mask+0x58>)
    1efe:	6a11      	ldr	r1, [r2, #32]
    1f00:	683a      	ldr	r2, [r7, #0]
    1f02:	430a      	orrs	r2, r1
    1f04:	621a      	str	r2, [r3, #32]
    1f06:	e001      	b.n	1f0c <system_apb_clock_set_mask+0x4c>
    1f08:	2317      	movs	r3, #23
    1f0a:	e000      	b.n	1f0e <system_apb_clock_set_mask+0x4e>
    1f0c:	2300      	movs	r3, #0
    1f0e:	0018      	movs	r0, r3
    1f10:	46bd      	mov	sp, r7
    1f12:	b002      	add	sp, #8
    1f14:	bd80      	pop	{r7, pc}
    1f16:	46c0      	nop			; (mov r8, r8)
    1f18:	40000400 	.word	0x40000400

00001f1c <system_is_debugger_present>:
    1f1c:	b580      	push	{r7, lr}
    1f1e:	af00      	add	r7, sp, #0
    1f20:	4b05      	ldr	r3, [pc, #20]	; (1f38 <system_is_debugger_present+0x1c>)
    1f22:	789b      	ldrb	r3, [r3, #2]
    1f24:	b2db      	uxtb	r3, r3
    1f26:	001a      	movs	r2, r3
    1f28:	2302      	movs	r3, #2
    1f2a:	4013      	ands	r3, r2
    1f2c:	1e5a      	subs	r2, r3, #1
    1f2e:	4193      	sbcs	r3, r2
    1f30:	b2db      	uxtb	r3, r3
    1f32:	0018      	movs	r0, r3
    1f34:	46bd      	mov	sp, r7
    1f36:	bd80      	pop	{r7, pc}
    1f38:	41002000 	.word	0x41002000

00001f3c <spi_is_ready_to_write>:
    1f3c:	b580      	push	{r7, lr}
    1f3e:	b084      	sub	sp, #16
    1f40:	af00      	add	r7, sp, #0
    1f42:	6078      	str	r0, [r7, #4]
    1f44:	687b      	ldr	r3, [r7, #4]
    1f46:	681b      	ldr	r3, [r3, #0]
    1f48:	60fb      	str	r3, [r7, #12]
    1f4a:	68fb      	ldr	r3, [r7, #12]
    1f4c:	7e1b      	ldrb	r3, [r3, #24]
    1f4e:	b2db      	uxtb	r3, r3
    1f50:	001a      	movs	r2, r3
    1f52:	2301      	movs	r3, #1
    1f54:	4013      	ands	r3, r2
    1f56:	1e5a      	subs	r2, r3, #1
    1f58:	4193      	sbcs	r3, r2
    1f5a:	b2db      	uxtb	r3, r3
    1f5c:	0018      	movs	r0, r3
    1f5e:	46bd      	mov	sp, r7
    1f60:	b004      	add	sp, #16
    1f62:	bd80      	pop	{r7, pc}

00001f64 <spi_is_ready_to_read>:
    1f64:	b580      	push	{r7, lr}
    1f66:	b084      	sub	sp, #16
    1f68:	af00      	add	r7, sp, #0
    1f6a:	6078      	str	r0, [r7, #4]
    1f6c:	687b      	ldr	r3, [r7, #4]
    1f6e:	681b      	ldr	r3, [r3, #0]
    1f70:	60fb      	str	r3, [r7, #12]
    1f72:	68fb      	ldr	r3, [r7, #12]
    1f74:	7e1b      	ldrb	r3, [r3, #24]
    1f76:	b2db      	uxtb	r3, r3
    1f78:	001a      	movs	r2, r3
    1f7a:	2304      	movs	r3, #4
    1f7c:	4013      	ands	r3, r2
    1f7e:	1e5a      	subs	r2, r3, #1
    1f80:	4193      	sbcs	r3, r2
    1f82:	b2db      	uxtb	r3, r3
    1f84:	0018      	movs	r0, r3
    1f86:	46bd      	mov	sp, r7
    1f88:	b004      	add	sp, #16
    1f8a:	bd80      	pop	{r7, pc}

00001f8c <spi_write>:
    1f8c:	b580      	push	{r7, lr}
    1f8e:	b084      	sub	sp, #16
    1f90:	af00      	add	r7, sp, #0
    1f92:	6078      	str	r0, [r7, #4]
    1f94:	000a      	movs	r2, r1
    1f96:	1cbb      	adds	r3, r7, #2
    1f98:	801a      	strh	r2, [r3, #0]
    1f9a:	687b      	ldr	r3, [r7, #4]
    1f9c:	681b      	ldr	r3, [r3, #0]
    1f9e:	60fb      	str	r3, [r7, #12]
    1fa0:	687b      	ldr	r3, [r7, #4]
    1fa2:	0018      	movs	r0, r3
    1fa4:	4b0a      	ldr	r3, [pc, #40]	; (1fd0 <spi_write+0x44>)
    1fa6:	4798      	blx	r3
    1fa8:	0003      	movs	r3, r0
    1faa:	001a      	movs	r2, r3
    1fac:	2301      	movs	r3, #1
    1fae:	4053      	eors	r3, r2
    1fb0:	b2db      	uxtb	r3, r3
    1fb2:	2b00      	cmp	r3, #0
    1fb4:	d001      	beq.n	1fba <spi_write+0x2e>
    1fb6:	2305      	movs	r3, #5
    1fb8:	e006      	b.n	1fc8 <spi_write+0x3c>
    1fba:	1cbb      	adds	r3, r7, #2
    1fbc:	881b      	ldrh	r3, [r3, #0]
    1fbe:	05db      	lsls	r3, r3, #23
    1fc0:	0dda      	lsrs	r2, r3, #23
    1fc2:	68fb      	ldr	r3, [r7, #12]
    1fc4:	629a      	str	r2, [r3, #40]	; 0x28
    1fc6:	2300      	movs	r3, #0
    1fc8:	0018      	movs	r0, r3
    1fca:	46bd      	mov	sp, r7
    1fcc:	b004      	add	sp, #16
    1fce:	bd80      	pop	{r7, pc}
    1fd0:	00001f3d 	.word	0x00001f3d

00001fd4 <spi_read>:
    1fd4:	b580      	push	{r7, lr}
    1fd6:	b084      	sub	sp, #16
    1fd8:	af00      	add	r7, sp, #0
    1fda:	6078      	str	r0, [r7, #4]
    1fdc:	6039      	str	r1, [r7, #0]
    1fde:	687b      	ldr	r3, [r7, #4]
    1fe0:	681b      	ldr	r3, [r3, #0]
    1fe2:	60bb      	str	r3, [r7, #8]
    1fe4:	687b      	ldr	r3, [r7, #4]
    1fe6:	0018      	movs	r0, r3
    1fe8:	4b1b      	ldr	r3, [pc, #108]	; (2058 <STACK_SIZE+0x58>)
    1fea:	4798      	blx	r3
    1fec:	0003      	movs	r3, r0
    1fee:	001a      	movs	r2, r3
    1ff0:	2301      	movs	r3, #1
    1ff2:	4053      	eors	r3, r2
    1ff4:	b2db      	uxtb	r3, r3
    1ff6:	2b00      	cmp	r3, #0
    1ff8:	d001      	beq.n	1ffe <spi_read+0x2a>
    1ffa:	2310      	movs	r3, #16
    1ffc:	e027      	b.n	204e <STACK_SIZE+0x4e>
    1ffe:	230f      	movs	r3, #15
    2000:	18fb      	adds	r3, r7, r3
    2002:	2200      	movs	r2, #0
    2004:	701a      	strb	r2, [r3, #0]
    2006:	68bb      	ldr	r3, [r7, #8]
    2008:	8b5b      	ldrh	r3, [r3, #26]
    200a:	b29b      	uxth	r3, r3
    200c:	001a      	movs	r2, r3
    200e:	2304      	movs	r3, #4
    2010:	4013      	ands	r3, r2
    2012:	d006      	beq.n	2022 <STACK_SIZE+0x22>
    2014:	230f      	movs	r3, #15
    2016:	18fb      	adds	r3, r7, r3
    2018:	221e      	movs	r2, #30
    201a:	701a      	strb	r2, [r3, #0]
    201c:	68bb      	ldr	r3, [r7, #8]
    201e:	2204      	movs	r2, #4
    2020:	835a      	strh	r2, [r3, #26]
    2022:	687b      	ldr	r3, [r7, #4]
    2024:	799b      	ldrb	r3, [r3, #6]
    2026:	2b01      	cmp	r3, #1
    2028:	d108      	bne.n	203c <STACK_SIZE+0x3c>
    202a:	68bb      	ldr	r3, [r7, #8]
    202c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    202e:	b29b      	uxth	r3, r3
    2030:	05db      	lsls	r3, r3, #23
    2032:	0ddb      	lsrs	r3, r3, #23
    2034:	b29a      	uxth	r2, r3
    2036:	683b      	ldr	r3, [r7, #0]
    2038:	801a      	strh	r2, [r3, #0]
    203a:	e005      	b.n	2048 <STACK_SIZE+0x48>
    203c:	68bb      	ldr	r3, [r7, #8]
    203e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2040:	b2db      	uxtb	r3, r3
    2042:	b29a      	uxth	r2, r3
    2044:	683b      	ldr	r3, [r7, #0]
    2046:	801a      	strh	r2, [r3, #0]
    2048:	230f      	movs	r3, #15
    204a:	18fb      	adds	r3, r7, r3
    204c:	781b      	ldrb	r3, [r3, #0]
    204e:	0018      	movs	r0, r3
    2050:	46bd      	mov	sp, r7
    2052:	b004      	add	sp, #16
    2054:	bd80      	pop	{r7, pc}
    2056:	46c0      	nop			; (mov r8, r8)
    2058:	00001f65 	.word	0x00001f65

0000205c <_spi_set_config>:
    205c:	b590      	push	{r4, r7, lr}
    205e:	b093      	sub	sp, #76	; 0x4c
    2060:	af00      	add	r7, sp, #0
    2062:	6078      	str	r0, [r7, #4]
    2064:	6039      	str	r1, [r7, #0]
    2066:	687b      	ldr	r3, [r7, #4]
    2068:	681b      	ldr	r3, [r3, #0]
    206a:	637b      	str	r3, [r7, #52]	; 0x34
    206c:	687b      	ldr	r3, [r7, #4]
    206e:	681b      	ldr	r3, [r3, #0]
    2070:	633b      	str	r3, [r7, #48]	; 0x30
    2072:	231c      	movs	r3, #28
    2074:	18fb      	adds	r3, r7, r3
    2076:	0018      	movs	r0, r3
    2078:	4b85      	ldr	r3, [pc, #532]	; (2290 <_spi_set_config+0x234>)
    207a:	4798      	blx	r3
    207c:	231c      	movs	r3, #28
    207e:	18fb      	adds	r3, r7, r3
    2080:	2200      	movs	r2, #0
    2082:	705a      	strb	r2, [r3, #1]
    2084:	683b      	ldr	r3, [r7, #0]
    2086:	781b      	ldrb	r3, [r3, #0]
    2088:	2b00      	cmp	r3, #0
    208a:	d103      	bne.n	2094 <_spi_set_config+0x38>
    208c:	231c      	movs	r3, #28
    208e:	18fb      	adds	r3, r7, r3
    2090:	2200      	movs	r2, #0
    2092:	709a      	strb	r2, [r3, #2]
    2094:	683b      	ldr	r3, [r7, #0]
    2096:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    2098:	230c      	movs	r3, #12
    209a:	18fb      	adds	r3, r7, r3
    209c:	601a      	str	r2, [r3, #0]
    209e:	683b      	ldr	r3, [r7, #0]
    20a0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
    20a2:	230c      	movs	r3, #12
    20a4:	18fb      	adds	r3, r7, r3
    20a6:	605a      	str	r2, [r3, #4]
    20a8:	683b      	ldr	r3, [r7, #0]
    20aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
    20ac:	230c      	movs	r3, #12
    20ae:	18fb      	adds	r3, r7, r3
    20b0:	609a      	str	r2, [r3, #8]
    20b2:	683b      	ldr	r3, [r7, #0]
    20b4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
    20b6:	230c      	movs	r3, #12
    20b8:	18fb      	adds	r3, r7, r3
    20ba:	60da      	str	r2, [r3, #12]
    20bc:	2347      	movs	r3, #71	; 0x47
    20be:	18fb      	adds	r3, r7, r3
    20c0:	2200      	movs	r2, #0
    20c2:	701a      	strb	r2, [r3, #0]
    20c4:	e02c      	b.n	2120 <_spi_set_config+0xc4>
    20c6:	2347      	movs	r3, #71	; 0x47
    20c8:	18fb      	adds	r3, r7, r3
    20ca:	781a      	ldrb	r2, [r3, #0]
    20cc:	230c      	movs	r3, #12
    20ce:	18fb      	adds	r3, r7, r3
    20d0:	0092      	lsls	r2, r2, #2
    20d2:	58d3      	ldr	r3, [r2, r3]
    20d4:	643b      	str	r3, [r7, #64]	; 0x40
    20d6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    20d8:	2b00      	cmp	r3, #0
    20da:	d109      	bne.n	20f0 <_spi_set_config+0x94>
    20dc:	2347      	movs	r3, #71	; 0x47
    20de:	18fb      	adds	r3, r7, r3
    20e0:	781a      	ldrb	r2, [r3, #0]
    20e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
    20e4:	0011      	movs	r1, r2
    20e6:	0018      	movs	r0, r3
    20e8:	4b6a      	ldr	r3, [pc, #424]	; (2294 <_spi_set_config+0x238>)
    20ea:	4798      	blx	r3
    20ec:	0003      	movs	r3, r0
    20ee:	643b      	str	r3, [r7, #64]	; 0x40
    20f0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    20f2:	3301      	adds	r3, #1
    20f4:	d00d      	beq.n	2112 <_spi_set_config+0xb6>
    20f6:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    20f8:	b2da      	uxtb	r2, r3
    20fa:	231c      	movs	r3, #28
    20fc:	18fb      	adds	r3, r7, r3
    20fe:	701a      	strb	r2, [r3, #0]
    2100:	6c3b      	ldr	r3, [r7, #64]	; 0x40
    2102:	0c1b      	lsrs	r3, r3, #16
    2104:	b2db      	uxtb	r3, r3
    2106:	221c      	movs	r2, #28
    2108:	18ba      	adds	r2, r7, r2
    210a:	0011      	movs	r1, r2
    210c:	0018      	movs	r0, r3
    210e:	4b62      	ldr	r3, [pc, #392]	; (2298 <_spi_set_config+0x23c>)
    2110:	4798      	blx	r3
    2112:	2347      	movs	r3, #71	; 0x47
    2114:	18fb      	adds	r3, r7, r3
    2116:	781a      	ldrb	r2, [r3, #0]
    2118:	2347      	movs	r3, #71	; 0x47
    211a:	18fb      	adds	r3, r7, r3
    211c:	3201      	adds	r2, #1
    211e:	701a      	strb	r2, [r3, #0]
    2120:	2347      	movs	r3, #71	; 0x47
    2122:	18fb      	adds	r3, r7, r3
    2124:	781b      	ldrb	r3, [r3, #0]
    2126:	2b03      	cmp	r3, #3
    2128:	d9cd      	bls.n	20c6 <_spi_set_config+0x6a>
    212a:	683b      	ldr	r3, [r7, #0]
    212c:	781a      	ldrb	r2, [r3, #0]
    212e:	687b      	ldr	r3, [r7, #4]
    2130:	715a      	strb	r2, [r3, #5]
    2132:	683b      	ldr	r3, [r7, #0]
    2134:	7c1a      	ldrb	r2, [r3, #16]
    2136:	687b      	ldr	r3, [r7, #4]
    2138:	719a      	strb	r2, [r3, #6]
    213a:	683b      	ldr	r3, [r7, #0]
    213c:	7c9a      	ldrb	r2, [r3, #18]
    213e:	687b      	ldr	r3, [r7, #4]
    2140:	71da      	strb	r2, [r3, #7]
    2142:	683b      	ldr	r3, [r7, #0]
    2144:	7d1a      	ldrb	r2, [r3, #20]
    2146:	687b      	ldr	r3, [r7, #4]
    2148:	721a      	strb	r2, [r3, #8]
    214a:	230a      	movs	r3, #10
    214c:	18fb      	adds	r3, r7, r3
    214e:	2200      	movs	r2, #0
    2150:	801a      	strh	r2, [r3, #0]
    2152:	2300      	movs	r3, #0
    2154:	63fb      	str	r3, [r7, #60]	; 0x3c
    2156:	2300      	movs	r3, #0
    2158:	63bb      	str	r3, [r7, #56]	; 0x38
    215a:	683b      	ldr	r3, [r7, #0]
    215c:	781b      	ldrb	r3, [r3, #0]
    215e:	2b01      	cmp	r3, #1
    2160:	d129      	bne.n	21b6 <_spi_set_config+0x15a>
    2162:	687b      	ldr	r3, [r7, #4]
    2164:	681b      	ldr	r3, [r3, #0]
    2166:	0018      	movs	r0, r3
    2168:	4b4c      	ldr	r3, [pc, #304]	; (229c <_spi_set_config+0x240>)
    216a:	4798      	blx	r3
    216c:	0003      	movs	r3, r0
    216e:	62fb      	str	r3, [r7, #44]	; 0x2c
    2170:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    2172:	3314      	adds	r3, #20
    2174:	62bb      	str	r3, [r7, #40]	; 0x28
    2176:	6abb      	ldr	r3, [r7, #40]	; 0x28
    2178:	b2db      	uxtb	r3, r3
    217a:	0018      	movs	r0, r3
    217c:	4b48      	ldr	r3, [pc, #288]	; (22a0 <_spi_set_config+0x244>)
    217e:	4798      	blx	r3
    2180:	0003      	movs	r3, r0
    2182:	627b      	str	r3, [r7, #36]	; 0x24
    2184:	683b      	ldr	r3, [r7, #0]
    2186:	699b      	ldr	r3, [r3, #24]
    2188:	2223      	movs	r2, #35	; 0x23
    218a:	18bc      	adds	r4, r7, r2
    218c:	220a      	movs	r2, #10
    218e:	18ba      	adds	r2, r7, r2
    2190:	6a79      	ldr	r1, [r7, #36]	; 0x24
    2192:	0018      	movs	r0, r3
    2194:	4b43      	ldr	r3, [pc, #268]	; (22a4 <_spi_set_config+0x248>)
    2196:	4798      	blx	r3
    2198:	0003      	movs	r3, r0
    219a:	7023      	strb	r3, [r4, #0]
    219c:	2323      	movs	r3, #35	; 0x23
    219e:	18fb      	adds	r3, r7, r3
    21a0:	781b      	ldrb	r3, [r3, #0]
    21a2:	2b00      	cmp	r3, #0
    21a4:	d001      	beq.n	21aa <_spi_set_config+0x14e>
    21a6:	2317      	movs	r3, #23
    21a8:	e06d      	b.n	2286 <_spi_set_config+0x22a>
    21aa:	230a      	movs	r3, #10
    21ac:	18fb      	adds	r3, r7, r3
    21ae:	881b      	ldrh	r3, [r3, #0]
    21b0:	b2da      	uxtb	r2, r3
    21b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    21b4:	731a      	strb	r2, [r3, #12]
    21b6:	683b      	ldr	r3, [r7, #0]
    21b8:	781b      	ldrb	r3, [r3, #0]
    21ba:	2b00      	cmp	r3, #0
    21bc:	d11a      	bne.n	21f4 <_spi_set_config+0x198>
    21be:	683b      	ldr	r3, [r7, #0]
    21c0:	699b      	ldr	r3, [r3, #24]
    21c2:	63fb      	str	r3, [r7, #60]	; 0x3c
    21c4:	683b      	ldr	r3, [r7, #0]
    21c6:	8b9b      	ldrh	r3, [r3, #28]
    21c8:	63bb      	str	r3, [r7, #56]	; 0x38
    21ca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    21cc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    21ce:	683a      	ldr	r2, [r7, #0]
    21d0:	7f92      	ldrb	r2, [r2, #30]
    21d2:	0011      	movs	r1, r2
    21d4:	683a      	ldr	r2, [r7, #0]
    21d6:	7fd2      	ldrb	r2, [r2, #31]
    21d8:	0412      	lsls	r2, r2, #16
    21da:	430a      	orrs	r2, r1
    21dc:	431a      	orrs	r2, r3
    21de:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    21e0:	625a      	str	r2, [r3, #36]	; 0x24
    21e2:	683b      	ldr	r3, [r7, #0]
    21e4:	2220      	movs	r2, #32
    21e6:	5c9b      	ldrb	r3, [r3, r2]
    21e8:	2b00      	cmp	r3, #0
    21ea:	d003      	beq.n	21f4 <_spi_set_config+0x198>
    21ec:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    21ee:	2240      	movs	r2, #64	; 0x40
    21f0:	4313      	orrs	r3, r2
    21f2:	63bb      	str	r3, [r7, #56]	; 0x38
    21f4:	683b      	ldr	r3, [r7, #0]
    21f6:	685b      	ldr	r3, [r3, #4]
    21f8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    21fa:	4313      	orrs	r3, r2
    21fc:	63fb      	str	r3, [r7, #60]	; 0x3c
    21fe:	683b      	ldr	r3, [r7, #0]
    2200:	689b      	ldr	r3, [r3, #8]
    2202:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    2204:	4313      	orrs	r3, r2
    2206:	63fb      	str	r3, [r7, #60]	; 0x3c
    2208:	683b      	ldr	r3, [r7, #0]
    220a:	68db      	ldr	r3, [r3, #12]
    220c:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
    220e:	4313      	orrs	r3, r2
    2210:	63fb      	str	r3, [r7, #60]	; 0x3c
    2212:	683b      	ldr	r3, [r7, #0]
    2214:	7c1b      	ldrb	r3, [r3, #16]
    2216:	001a      	movs	r2, r3
    2218:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    221a:	4313      	orrs	r3, r2
    221c:	63bb      	str	r3, [r7, #56]	; 0x38
    221e:	683b      	ldr	r3, [r7, #0]
    2220:	7c5b      	ldrb	r3, [r3, #17]
    2222:	2b00      	cmp	r3, #0
    2224:	d103      	bne.n	222e <_spi_set_config+0x1d2>
    2226:	4b20      	ldr	r3, [pc, #128]	; (22a8 <_spi_set_config+0x24c>)
    2228:	4798      	blx	r3
    222a:	1e03      	subs	r3, r0, #0
    222c:	d003      	beq.n	2236 <_spi_set_config+0x1da>
    222e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    2230:	2280      	movs	r2, #128	; 0x80
    2232:	4313      	orrs	r3, r2
    2234:	63fb      	str	r3, [r7, #60]	; 0x3c
    2236:	683b      	ldr	r3, [r7, #0]
    2238:	7c9b      	ldrb	r3, [r3, #18]
    223a:	2b00      	cmp	r3, #0
    223c:	d004      	beq.n	2248 <_spi_set_config+0x1ec>
    223e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    2240:	2280      	movs	r2, #128	; 0x80
    2242:	0292      	lsls	r2, r2, #10
    2244:	4313      	orrs	r3, r2
    2246:	63bb      	str	r3, [r7, #56]	; 0x38
    2248:	683b      	ldr	r3, [r7, #0]
    224a:	7cdb      	ldrb	r3, [r3, #19]
    224c:	2b00      	cmp	r3, #0
    224e:	d004      	beq.n	225a <_spi_set_config+0x1fe>
    2250:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    2252:	2280      	movs	r2, #128	; 0x80
    2254:	0092      	lsls	r2, r2, #2
    2256:	4313      	orrs	r3, r2
    2258:	63bb      	str	r3, [r7, #56]	; 0x38
    225a:	683b      	ldr	r3, [r7, #0]
    225c:	7d1b      	ldrb	r3, [r3, #20]
    225e:	2b00      	cmp	r3, #0
    2260:	d004      	beq.n	226c <_spi_set_config+0x210>
    2262:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    2264:	2280      	movs	r2, #128	; 0x80
    2266:	0192      	lsls	r2, r2, #6
    2268:	4313      	orrs	r3, r2
    226a:	63bb      	str	r3, [r7, #56]	; 0x38
    226c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    226e:	681a      	ldr	r2, [r3, #0]
    2270:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
    2272:	431a      	orrs	r2, r3
    2274:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    2276:	601a      	str	r2, [r3, #0]
    2278:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    227a:	685a      	ldr	r2, [r3, #4]
    227c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
    227e:	431a      	orrs	r2, r3
    2280:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    2282:	605a      	str	r2, [r3, #4]
    2284:	2300      	movs	r3, #0
    2286:	0018      	movs	r0, r3
    2288:	46bd      	mov	sp, r7
    228a:	b013      	add	sp, #76	; 0x4c
    228c:	bd90      	pop	{r4, r7, pc}
    228e:	46c0      	nop			; (mov r8, r8)
    2290:	00001da9 	.word	0x00001da9
    2294:	00002c11 	.word	0x00002c11
    2298:	00003cb1 	.word	0x00003cb1
    229c:	00002dcd 	.word	0x00002dcd
    22a0:	00003ae9 	.word	0x00003ae9
    22a4:	00002b09 	.word	0x00002b09
    22a8:	00001f1d 	.word	0x00001f1d

000022ac <spi_init>:
    22ac:	b590      	push	{r4, r7, lr}
    22ae:	b08b      	sub	sp, #44	; 0x2c
    22b0:	af00      	add	r7, sp, #0
    22b2:	60f8      	str	r0, [r7, #12]
    22b4:	60b9      	str	r1, [r7, #8]
    22b6:	607a      	str	r2, [r7, #4]
    22b8:	68fb      	ldr	r3, [r7, #12]
    22ba:	68ba      	ldr	r2, [r7, #8]
    22bc:	601a      	str	r2, [r3, #0]
    22be:	68fb      	ldr	r3, [r7, #12]
    22c0:	681b      	ldr	r3, [r3, #0]
    22c2:	623b      	str	r3, [r7, #32]
    22c4:	6a3b      	ldr	r3, [r7, #32]
    22c6:	681b      	ldr	r3, [r3, #0]
    22c8:	2202      	movs	r2, #2
    22ca:	4013      	ands	r3, r2
    22cc:	d001      	beq.n	22d2 <spi_init+0x26>
    22ce:	231c      	movs	r3, #28
    22d0:	e0a6      	b.n	2420 <spi_init+0x174>
    22d2:	6a3b      	ldr	r3, [r7, #32]
    22d4:	681b      	ldr	r3, [r3, #0]
    22d6:	2201      	movs	r2, #1
    22d8:	4013      	ands	r3, r2
    22da:	d001      	beq.n	22e0 <spi_init+0x34>
    22dc:	2305      	movs	r3, #5
    22de:	e09f      	b.n	2420 <spi_init+0x174>
    22e0:	68fb      	ldr	r3, [r7, #12]
    22e2:	681b      	ldr	r3, [r3, #0]
    22e4:	0018      	movs	r0, r3
    22e6:	4b50      	ldr	r3, [pc, #320]	; (2428 <spi_init+0x17c>)
    22e8:	4798      	blx	r3
    22ea:	0003      	movs	r3, r0
    22ec:	61fb      	str	r3, [r7, #28]
    22ee:	69fb      	ldr	r3, [r7, #28]
    22f0:	3302      	adds	r3, #2
    22f2:	61bb      	str	r3, [r7, #24]
    22f4:	69fb      	ldr	r3, [r7, #28]
    22f6:	3314      	adds	r3, #20
    22f8:	617b      	str	r3, [r7, #20]
    22fa:	2201      	movs	r2, #1
    22fc:	69bb      	ldr	r3, [r7, #24]
    22fe:	409a      	lsls	r2, r3
    2300:	0013      	movs	r3, r2
    2302:	0019      	movs	r1, r3
    2304:	2002      	movs	r0, #2
    2306:	4b49      	ldr	r3, [pc, #292]	; (242c <spi_init+0x180>)
    2308:	4798      	blx	r3
    230a:	2310      	movs	r3, #16
    230c:	18fb      	adds	r3, r7, r3
    230e:	0018      	movs	r0, r3
    2310:	4b47      	ldr	r3, [pc, #284]	; (2430 <spi_init+0x184>)
    2312:	4798      	blx	r3
    2314:	687b      	ldr	r3, [r7, #4]
    2316:	2224      	movs	r2, #36	; 0x24
    2318:	5c9a      	ldrb	r2, [r3, r2]
    231a:	2310      	movs	r3, #16
    231c:	18fb      	adds	r3, r7, r3
    231e:	701a      	strb	r2, [r3, #0]
    2320:	697b      	ldr	r3, [r7, #20]
    2322:	b2db      	uxtb	r3, r3
    2324:	2210      	movs	r2, #16
    2326:	18ba      	adds	r2, r7, r2
    2328:	0011      	movs	r1, r2
    232a:	0018      	movs	r0, r3
    232c:	4b41      	ldr	r3, [pc, #260]	; (2434 <spi_init+0x188>)
    232e:	4798      	blx	r3
    2330:	697b      	ldr	r3, [r7, #20]
    2332:	b2db      	uxtb	r3, r3
    2334:	0018      	movs	r0, r3
    2336:	4b40      	ldr	r3, [pc, #256]	; (2438 <spi_init+0x18c>)
    2338:	4798      	blx	r3
    233a:	687b      	ldr	r3, [r7, #4]
    233c:	2224      	movs	r2, #36	; 0x24
    233e:	5c9b      	ldrb	r3, [r3, r2]
    2340:	2100      	movs	r1, #0
    2342:	0018      	movs	r0, r3
    2344:	4b3d      	ldr	r3, [pc, #244]	; (243c <spi_init+0x190>)
    2346:	4798      	blx	r3
    2348:	687b      	ldr	r3, [r7, #4]
    234a:	781b      	ldrb	r3, [r3, #0]
    234c:	2b01      	cmp	r3, #1
    234e:	d105      	bne.n	235c <spi_init+0xb0>
    2350:	6a3b      	ldr	r3, [r7, #32]
    2352:	681b      	ldr	r3, [r3, #0]
    2354:	220c      	movs	r2, #12
    2356:	431a      	orrs	r2, r3
    2358:	6a3b      	ldr	r3, [r7, #32]
    235a:	601a      	str	r2, [r3, #0]
    235c:	687b      	ldr	r3, [r7, #4]
    235e:	781b      	ldrb	r3, [r3, #0]
    2360:	2b00      	cmp	r3, #0
    2362:	d105      	bne.n	2370 <spi_init+0xc4>
    2364:	6a3b      	ldr	r3, [r7, #32]
    2366:	681b      	ldr	r3, [r3, #0]
    2368:	2208      	movs	r2, #8
    236a:	431a      	orrs	r2, r3
    236c:	6a3b      	ldr	r3, [r7, #32]
    236e:	601a      	str	r2, [r3, #0]
    2370:	2327      	movs	r3, #39	; 0x27
    2372:	18fb      	adds	r3, r7, r3
    2374:	2200      	movs	r2, #0
    2376:	701a      	strb	r2, [r3, #0]
    2378:	e010      	b.n	239c <spi_init+0xf0>
    237a:	2327      	movs	r3, #39	; 0x27
    237c:	18fb      	adds	r3, r7, r3
    237e:	781b      	ldrb	r3, [r3, #0]
    2380:	68fa      	ldr	r2, [r7, #12]
    2382:	3302      	adds	r3, #2
    2384:	009b      	lsls	r3, r3, #2
    2386:	18d3      	adds	r3, r2, r3
    2388:	3304      	adds	r3, #4
    238a:	2200      	movs	r2, #0
    238c:	601a      	str	r2, [r3, #0]
    238e:	2327      	movs	r3, #39	; 0x27
    2390:	18fb      	adds	r3, r7, r3
    2392:	781a      	ldrb	r2, [r3, #0]
    2394:	2327      	movs	r3, #39	; 0x27
    2396:	18fb      	adds	r3, r7, r3
    2398:	3201      	adds	r2, #1
    239a:	701a      	strb	r2, [r3, #0]
    239c:	2327      	movs	r3, #39	; 0x27
    239e:	18fb      	adds	r3, r7, r3
    23a0:	781b      	ldrb	r3, [r3, #0]
    23a2:	2b06      	cmp	r3, #6
    23a4:	d9e9      	bls.n	237a <spi_init+0xce>
    23a6:	68fb      	ldr	r3, [r7, #12]
    23a8:	2200      	movs	r2, #0
    23aa:	62da      	str	r2, [r3, #44]	; 0x2c
    23ac:	68fb      	ldr	r3, [r7, #12]
    23ae:	2200      	movs	r2, #0
    23b0:	629a      	str	r2, [r3, #40]	; 0x28
    23b2:	68fb      	ldr	r3, [r7, #12]
    23b4:	2200      	movs	r2, #0
    23b6:	869a      	strh	r2, [r3, #52]	; 0x34
    23b8:	68fb      	ldr	r3, [r7, #12]
    23ba:	2200      	movs	r2, #0
    23bc:	861a      	strh	r2, [r3, #48]	; 0x30
    23be:	68fb      	ldr	r3, [r7, #12]
    23c0:	2236      	movs	r2, #54	; 0x36
    23c2:	2100      	movs	r1, #0
    23c4:	5499      	strb	r1, [r3, r2]
    23c6:	68fb      	ldr	r3, [r7, #12]
    23c8:	2237      	movs	r2, #55	; 0x37
    23ca:	2100      	movs	r1, #0
    23cc:	5499      	strb	r1, [r3, r2]
    23ce:	68fb      	ldr	r3, [r7, #12]
    23d0:	2238      	movs	r2, #56	; 0x38
    23d2:	2100      	movs	r1, #0
    23d4:	5499      	strb	r1, [r3, r2]
    23d6:	68fb      	ldr	r3, [r7, #12]
    23d8:	2203      	movs	r2, #3
    23da:	725a      	strb	r2, [r3, #9]
    23dc:	68fb      	ldr	r3, [r7, #12]
    23de:	2200      	movs	r2, #0
    23e0:	711a      	strb	r2, [r3, #4]
    23e2:	68fb      	ldr	r3, [r7, #12]
    23e4:	681b      	ldr	r3, [r3, #0]
    23e6:	2213      	movs	r2, #19
    23e8:	18bc      	adds	r4, r7, r2
    23ea:	0018      	movs	r0, r3
    23ec:	4b0e      	ldr	r3, [pc, #56]	; (2428 <spi_init+0x17c>)
    23ee:	4798      	blx	r3
    23f0:	0003      	movs	r3, r0
    23f2:	7023      	strb	r3, [r4, #0]
    23f4:	4a12      	ldr	r2, [pc, #72]	; (2440 <spi_init+0x194>)
    23f6:	2313      	movs	r3, #19
    23f8:	18fb      	adds	r3, r7, r3
    23fa:	781b      	ldrb	r3, [r3, #0]
    23fc:	0011      	movs	r1, r2
    23fe:	0018      	movs	r0, r3
    2400:	4b10      	ldr	r3, [pc, #64]	; (2444 <spi_init+0x198>)
    2402:	4798      	blx	r3
    2404:	2313      	movs	r3, #19
    2406:	18fb      	adds	r3, r7, r3
    2408:	781a      	ldrb	r2, [r3, #0]
    240a:	4b0f      	ldr	r3, [pc, #60]	; (2448 <spi_init+0x19c>)
    240c:	0092      	lsls	r2, r2, #2
    240e:	68f9      	ldr	r1, [r7, #12]
    2410:	50d1      	str	r1, [r2, r3]
    2412:	687a      	ldr	r2, [r7, #4]
    2414:	68fb      	ldr	r3, [r7, #12]
    2416:	0011      	movs	r1, r2
    2418:	0018      	movs	r0, r3
    241a:	4b0c      	ldr	r3, [pc, #48]	; (244c <spi_init+0x1a0>)
    241c:	4798      	blx	r3
    241e:	0003      	movs	r3, r0
    2420:	0018      	movs	r0, r3
    2422:	46bd      	mov	sp, r7
    2424:	b00b      	add	sp, #44	; 0x2c
    2426:	bd90      	pop	{r4, r7, pc}
    2428:	00002dcd 	.word	0x00002dcd
    242c:	00001ec1 	.word	0x00001ec1
    2430:	00001ea9 	.word	0x00001ea9
    2434:	000039c5 	.word	0x000039c5
    2438:	00003a09 	.word	0x00003a09
    243c:	00002b85 	.word	0x00002b85
    2440:	000027e5 	.word	0x000027e5
    2444:	00002e31 	.word	0x00002e31
    2448:	200000e0 	.word	0x200000e0
    244c:	0000205d 	.word	0x0000205d

00002450 <spi_transceive_wait>:
    2450:	b590      	push	{r4, r7, lr}
    2452:	b087      	sub	sp, #28
    2454:	af00      	add	r7, sp, #0
    2456:	60f8      	str	r0, [r7, #12]
    2458:	607a      	str	r2, [r7, #4]
    245a:	230a      	movs	r3, #10
    245c:	18fb      	adds	r3, r7, r3
    245e:	1c0a      	adds	r2, r1, #0
    2460:	801a      	strh	r2, [r3, #0]
    2462:	68fb      	ldr	r3, [r7, #12]
    2464:	79db      	ldrb	r3, [r3, #7]
    2466:	2201      	movs	r2, #1
    2468:	4053      	eors	r3, r2
    246a:	b2db      	uxtb	r3, r3
    246c:	2b00      	cmp	r3, #0
    246e:	d001      	beq.n	2474 <spi_transceive_wait+0x24>
    2470:	231c      	movs	r3, #28
    2472:	e084      	b.n	257e <spi_transceive_wait+0x12e>
    2474:	68fb      	ldr	r3, [r7, #12]
    2476:	2238      	movs	r2, #56	; 0x38
    2478:	5c9b      	ldrb	r3, [r3, r2]
    247a:	b2db      	uxtb	r3, r3
    247c:	2b05      	cmp	r3, #5
    247e:	d101      	bne.n	2484 <spi_transceive_wait+0x34>
    2480:	2305      	movs	r3, #5
    2482:	e07c      	b.n	257e <spi_transceive_wait+0x12e>
    2484:	2315      	movs	r3, #21
    2486:	18fb      	adds	r3, r7, r3
    2488:	2200      	movs	r2, #0
    248a:	701a      	strb	r2, [r3, #0]
    248c:	68fb      	ldr	r3, [r7, #12]
    248e:	795b      	ldrb	r3, [r3, #5]
    2490:	2b00      	cmp	r3, #0
    2492:	d121      	bne.n	24d8 <spi_transceive_wait+0x88>
    2494:	2316      	movs	r3, #22
    2496:	18fb      	adds	r3, r7, r3
    2498:	2200      	movs	r2, #0
    249a:	801a      	strh	r2, [r3, #0]
    249c:	e014      	b.n	24c8 <spi_transceive_wait+0x78>
    249e:	68fb      	ldr	r3, [r7, #12]
    24a0:	0018      	movs	r0, r3
    24a2:	4b39      	ldr	r3, [pc, #228]	; (2588 <spi_transceive_wait+0x138>)
    24a4:	4798      	blx	r3
    24a6:	1e03      	subs	r3, r0, #0
    24a8:	d115      	bne.n	24d6 <spi_transceive_wait+0x86>
    24aa:	2316      	movs	r3, #22
    24ac:	18fb      	adds	r3, r7, r3
    24ae:	881b      	ldrh	r3, [r3, #0]
    24b0:	4a36      	ldr	r2, [pc, #216]	; (258c <spi_transceive_wait+0x13c>)
    24b2:	4293      	cmp	r3, r2
    24b4:	d101      	bne.n	24ba <spi_transceive_wait+0x6a>
    24b6:	2312      	movs	r3, #18
    24b8:	e061      	b.n	257e <spi_transceive_wait+0x12e>
    24ba:	2316      	movs	r3, #22
    24bc:	18fb      	adds	r3, r7, r3
    24be:	881a      	ldrh	r2, [r3, #0]
    24c0:	2316      	movs	r3, #22
    24c2:	18fb      	adds	r3, r7, r3
    24c4:	3201      	adds	r2, #1
    24c6:	801a      	strh	r2, [r3, #0]
    24c8:	2316      	movs	r3, #22
    24ca:	18fb      	adds	r3, r7, r3
    24cc:	881b      	ldrh	r3, [r3, #0]
    24ce:	4a2f      	ldr	r2, [pc, #188]	; (258c <spi_transceive_wait+0x13c>)
    24d0:	4293      	cmp	r3, r2
    24d2:	d9e4      	bls.n	249e <spi_transceive_wait+0x4e>
    24d4:	e000      	b.n	24d8 <spi_transceive_wait+0x88>
    24d6:	46c0      	nop			; (mov r8, r8)
    24d8:	46c0      	nop			; (mov r8, r8)
    24da:	68fb      	ldr	r3, [r7, #12]
    24dc:	0018      	movs	r0, r3
    24de:	4b2a      	ldr	r3, [pc, #168]	; (2588 <spi_transceive_wait+0x138>)
    24e0:	4798      	blx	r3
    24e2:	0003      	movs	r3, r0
    24e4:	001a      	movs	r2, r3
    24e6:	2301      	movs	r3, #1
    24e8:	4053      	eors	r3, r2
    24ea:	b2db      	uxtb	r3, r3
    24ec:	2b00      	cmp	r3, #0
    24ee:	d1f4      	bne.n	24da <spi_transceive_wait+0x8a>
    24f0:	230a      	movs	r3, #10
    24f2:	18fb      	adds	r3, r7, r3
    24f4:	881a      	ldrh	r2, [r3, #0]
    24f6:	68fb      	ldr	r3, [r7, #12]
    24f8:	0011      	movs	r1, r2
    24fa:	0018      	movs	r0, r3
    24fc:	4b24      	ldr	r3, [pc, #144]	; (2590 <spi_transceive_wait+0x140>)
    24fe:	4798      	blx	r3
    2500:	68fb      	ldr	r3, [r7, #12]
    2502:	795b      	ldrb	r3, [r3, #5]
    2504:	2b00      	cmp	r3, #0
    2506:	d121      	bne.n	254c <spi_transceive_wait+0xfc>
    2508:	2316      	movs	r3, #22
    250a:	18fb      	adds	r3, r7, r3
    250c:	2200      	movs	r2, #0
    250e:	801a      	strh	r2, [r3, #0]
    2510:	e014      	b.n	253c <spi_transceive_wait+0xec>
    2512:	68fb      	ldr	r3, [r7, #12]
    2514:	0018      	movs	r0, r3
    2516:	4b1f      	ldr	r3, [pc, #124]	; (2594 <spi_transceive_wait+0x144>)
    2518:	4798      	blx	r3
    251a:	1e03      	subs	r3, r0, #0
    251c:	d115      	bne.n	254a <spi_transceive_wait+0xfa>
    251e:	2316      	movs	r3, #22
    2520:	18fb      	adds	r3, r7, r3
    2522:	881b      	ldrh	r3, [r3, #0]
    2524:	4a19      	ldr	r2, [pc, #100]	; (258c <spi_transceive_wait+0x13c>)
    2526:	4293      	cmp	r3, r2
    2528:	d101      	bne.n	252e <spi_transceive_wait+0xde>
    252a:	2312      	movs	r3, #18
    252c:	e027      	b.n	257e <spi_transceive_wait+0x12e>
    252e:	2316      	movs	r3, #22
    2530:	18fb      	adds	r3, r7, r3
    2532:	881a      	ldrh	r2, [r3, #0]
    2534:	2316      	movs	r3, #22
    2536:	18fb      	adds	r3, r7, r3
    2538:	3201      	adds	r2, #1
    253a:	801a      	strh	r2, [r3, #0]
    253c:	2316      	movs	r3, #22
    253e:	18fb      	adds	r3, r7, r3
    2540:	881b      	ldrh	r3, [r3, #0]
    2542:	4a12      	ldr	r2, [pc, #72]	; (258c <spi_transceive_wait+0x13c>)
    2544:	4293      	cmp	r3, r2
    2546:	d9e4      	bls.n	2512 <spi_transceive_wait+0xc2>
    2548:	e000      	b.n	254c <spi_transceive_wait+0xfc>
    254a:	46c0      	nop			; (mov r8, r8)
    254c:	46c0      	nop			; (mov r8, r8)
    254e:	68fb      	ldr	r3, [r7, #12]
    2550:	0018      	movs	r0, r3
    2552:	4b10      	ldr	r3, [pc, #64]	; (2594 <spi_transceive_wait+0x144>)
    2554:	4798      	blx	r3
    2556:	0003      	movs	r3, r0
    2558:	001a      	movs	r2, r3
    255a:	2301      	movs	r3, #1
    255c:	4053      	eors	r3, r2
    255e:	b2db      	uxtb	r3, r3
    2560:	2b00      	cmp	r3, #0
    2562:	d1f4      	bne.n	254e <spi_transceive_wait+0xfe>
    2564:	2315      	movs	r3, #21
    2566:	18fc      	adds	r4, r7, r3
    2568:	687a      	ldr	r2, [r7, #4]
    256a:	68fb      	ldr	r3, [r7, #12]
    256c:	0011      	movs	r1, r2
    256e:	0018      	movs	r0, r3
    2570:	4b09      	ldr	r3, [pc, #36]	; (2598 <spi_transceive_wait+0x148>)
    2572:	4798      	blx	r3
    2574:	0003      	movs	r3, r0
    2576:	7023      	strb	r3, [r4, #0]
    2578:	2315      	movs	r3, #21
    257a:	18fb      	adds	r3, r7, r3
    257c:	781b      	ldrb	r3, [r3, #0]
    257e:	0018      	movs	r0, r3
    2580:	46bd      	mov	sp, r7
    2582:	b007      	add	sp, #28
    2584:	bd90      	pop	{r4, r7, pc}
    2586:	46c0      	nop			; (mov r8, r8)
    2588:	00001f3d 	.word	0x00001f3d
    258c:	00002710 	.word	0x00002710
    2590:	00001f8d 	.word	0x00001f8d
    2594:	00001f65 	.word	0x00001f65
    2598:	00001fd5 	.word	0x00001fd5

0000259c <spi_select_slave>:
    259c:	b580      	push	{r7, lr}
    259e:	b086      	sub	sp, #24
    25a0:	af00      	add	r7, sp, #0
    25a2:	60f8      	str	r0, [r7, #12]
    25a4:	60b9      	str	r1, [r7, #8]
    25a6:	1dfb      	adds	r3, r7, #7
    25a8:	701a      	strb	r2, [r3, #0]
    25aa:	68fb      	ldr	r3, [r7, #12]
    25ac:	795b      	ldrb	r3, [r3, #5]
    25ae:	2b01      	cmp	r3, #1
    25b0:	d001      	beq.n	25b6 <spi_select_slave+0x1a>
    25b2:	2315      	movs	r3, #21
    25b4:	e05c      	b.n	2670 <spi_select_slave+0xd4>
    25b6:	68fb      	ldr	r3, [r7, #12]
    25b8:	7a1b      	ldrb	r3, [r3, #8]
    25ba:	2201      	movs	r2, #1
    25bc:	4053      	eors	r3, r2
    25be:	b2db      	uxtb	r3, r3
    25c0:	2b00      	cmp	r3, #0
    25c2:	d054      	beq.n	266e <spi_select_slave+0xd2>
    25c4:	1dfb      	adds	r3, r7, #7
    25c6:	781b      	ldrb	r3, [r3, #0]
    25c8:	2b00      	cmp	r3, #0
    25ca:	d04a      	beq.n	2662 <spi_select_slave+0xc6>
    25cc:	68bb      	ldr	r3, [r7, #8]
    25ce:	785b      	ldrb	r3, [r3, #1]
    25d0:	2b00      	cmp	r3, #0
    25d2:	d03f      	beq.n	2654 <spi_select_slave+0xb8>
    25d4:	68fb      	ldr	r3, [r7, #12]
    25d6:	0018      	movs	r0, r3
    25d8:	4b27      	ldr	r3, [pc, #156]	; (2678 <spi_select_slave+0xdc>)
    25da:	4798      	blx	r3
    25dc:	0003      	movs	r3, r0
    25de:	001a      	movs	r2, r3
    25e0:	2301      	movs	r3, #1
    25e2:	4053      	eors	r3, r2
    25e4:	b2db      	uxtb	r3, r3
    25e6:	2b00      	cmp	r3, #0
    25e8:	d007      	beq.n	25fa <spi_select_slave+0x5e>
    25ea:	68bb      	ldr	r3, [r7, #8]
    25ec:	781b      	ldrb	r3, [r3, #0]
    25ee:	2101      	movs	r1, #1
    25f0:	0018      	movs	r0, r3
    25f2:	4b22      	ldr	r3, [pc, #136]	; (267c <spi_select_slave+0xe0>)
    25f4:	4798      	blx	r3
    25f6:	2305      	movs	r3, #5
    25f8:	e03a      	b.n	2670 <spi_select_slave+0xd4>
    25fa:	68bb      	ldr	r3, [r7, #8]
    25fc:	781b      	ldrb	r3, [r3, #0]
    25fe:	2100      	movs	r1, #0
    2600:	0018      	movs	r0, r3
    2602:	4b1e      	ldr	r3, [pc, #120]	; (267c <spi_select_slave+0xe0>)
    2604:	4798      	blx	r3
    2606:	68bb      	ldr	r3, [r7, #8]
    2608:	789b      	ldrb	r3, [r3, #2]
    260a:	b29a      	uxth	r2, r3
    260c:	68fb      	ldr	r3, [r7, #12]
    260e:	0011      	movs	r1, r2
    2610:	0018      	movs	r0, r3
    2612:	4b1b      	ldr	r3, [pc, #108]	; (2680 <spi_select_slave+0xe4>)
    2614:	4798      	blx	r3
    2616:	68fb      	ldr	r3, [r7, #12]
    2618:	79db      	ldrb	r3, [r3, #7]
    261a:	2201      	movs	r2, #1
    261c:	4053      	eors	r3, r2
    261e:	b2db      	uxtb	r3, r3
    2620:	2b00      	cmp	r3, #0
    2622:	d024      	beq.n	266e <spi_select_slave+0xd2>
    2624:	46c0      	nop			; (mov r8, r8)
    2626:	68fb      	ldr	r3, [r7, #12]
    2628:	0018      	movs	r0, r3
    262a:	4b16      	ldr	r3, [pc, #88]	; (2684 <spi_select_slave+0xe8>)
    262c:	4798      	blx	r3
    262e:	0003      	movs	r3, r0
    2630:	001a      	movs	r2, r3
    2632:	2301      	movs	r3, #1
    2634:	4053      	eors	r3, r2
    2636:	b2db      	uxtb	r3, r3
    2638:	2b00      	cmp	r3, #0
    263a:	d1f4      	bne.n	2626 <spi_select_slave+0x8a>
    263c:	2316      	movs	r3, #22
    263e:	18fb      	adds	r3, r7, r3
    2640:	2200      	movs	r2, #0
    2642:	801a      	strh	r2, [r3, #0]
    2644:	2316      	movs	r3, #22
    2646:	18fa      	adds	r2, r7, r3
    2648:	68fb      	ldr	r3, [r7, #12]
    264a:	0011      	movs	r1, r2
    264c:	0018      	movs	r0, r3
    264e:	4b0e      	ldr	r3, [pc, #56]	; (2688 <spi_select_slave+0xec>)
    2650:	4798      	blx	r3
    2652:	e00c      	b.n	266e <spi_select_slave+0xd2>
    2654:	68bb      	ldr	r3, [r7, #8]
    2656:	781b      	ldrb	r3, [r3, #0]
    2658:	2100      	movs	r1, #0
    265a:	0018      	movs	r0, r3
    265c:	4b07      	ldr	r3, [pc, #28]	; (267c <spi_select_slave+0xe0>)
    265e:	4798      	blx	r3
    2660:	e005      	b.n	266e <spi_select_slave+0xd2>
    2662:	68bb      	ldr	r3, [r7, #8]
    2664:	781b      	ldrb	r3, [r3, #0]
    2666:	2101      	movs	r1, #1
    2668:	0018      	movs	r0, r3
    266a:	4b04      	ldr	r3, [pc, #16]	; (267c <spi_select_slave+0xe0>)
    266c:	4798      	blx	r3
    266e:	2300      	movs	r3, #0
    2670:	0018      	movs	r0, r3
    2672:	46bd      	mov	sp, r7
    2674:	b006      	add	sp, #24
    2676:	bd80      	pop	{r7, pc}
    2678:	00001f3d 	.word	0x00001f3d
    267c:	00001e55 	.word	0x00001e55
    2680:	00001f8d 	.word	0x00001f8d
    2684:	00001f65 	.word	0x00001f65
    2688:	00001fd5 	.word	0x00001fd5

0000268c <_spi_write>:
    268c:	b580      	push	{r7, lr}
    268e:	b084      	sub	sp, #16
    2690:	af00      	add	r7, sp, #0
    2692:	6078      	str	r0, [r7, #4]
    2694:	687b      	ldr	r3, [r7, #4]
    2696:	681b      	ldr	r3, [r3, #0]
    2698:	60bb      	str	r3, [r7, #8]
    269a:	687b      	ldr	r3, [r7, #4]
    269c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    269e:	781b      	ldrb	r3, [r3, #0]
    26a0:	b2da      	uxtb	r2, r3
    26a2:	230e      	movs	r3, #14
    26a4:	18fb      	adds	r3, r7, r3
    26a6:	801a      	strh	r2, [r3, #0]
    26a8:	687b      	ldr	r3, [r7, #4]
    26aa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    26ac:	1c5a      	adds	r2, r3, #1
    26ae:	687b      	ldr	r3, [r7, #4]
    26b0:	62da      	str	r2, [r3, #44]	; 0x2c
    26b2:	687b      	ldr	r3, [r7, #4]
    26b4:	799b      	ldrb	r3, [r3, #6]
    26b6:	2b01      	cmp	r3, #1
    26b8:	d113      	bne.n	26e2 <_spi_write+0x56>
    26ba:	687b      	ldr	r3, [r7, #4]
    26bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    26be:	781b      	ldrb	r3, [r3, #0]
    26c0:	b2db      	uxtb	r3, r3
    26c2:	021b      	lsls	r3, r3, #8
    26c4:	b21a      	sxth	r2, r3
    26c6:	230e      	movs	r3, #14
    26c8:	18fb      	adds	r3, r7, r3
    26ca:	2100      	movs	r1, #0
    26cc:	5e5b      	ldrsh	r3, [r3, r1]
    26ce:	4313      	orrs	r3, r2
    26d0:	b21a      	sxth	r2, r3
    26d2:	230e      	movs	r3, #14
    26d4:	18fb      	adds	r3, r7, r3
    26d6:	801a      	strh	r2, [r3, #0]
    26d8:	687b      	ldr	r3, [r7, #4]
    26da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    26dc:	1c5a      	adds	r2, r3, #1
    26de:	687b      	ldr	r3, [r7, #4]
    26e0:	62da      	str	r2, [r3, #44]	; 0x2c
    26e2:	230e      	movs	r3, #14
    26e4:	18fb      	adds	r3, r7, r3
    26e6:	881b      	ldrh	r3, [r3, #0]
    26e8:	05db      	lsls	r3, r3, #23
    26ea:	0dda      	lsrs	r2, r3, #23
    26ec:	68bb      	ldr	r3, [r7, #8]
    26ee:	629a      	str	r2, [r3, #40]	; 0x28
    26f0:	687b      	ldr	r3, [r7, #4]
    26f2:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
    26f4:	b29b      	uxth	r3, r3
    26f6:	3b01      	subs	r3, #1
    26f8:	b29a      	uxth	r2, r3
    26fa:	687b      	ldr	r3, [r7, #4]
    26fc:	869a      	strh	r2, [r3, #52]	; 0x34
    26fe:	46c0      	nop			; (mov r8, r8)
    2700:	46bd      	mov	sp, r7
    2702:	b004      	add	sp, #16
    2704:	bd80      	pop	{r7, pc}
    2706:	46c0      	nop			; (mov r8, r8)

00002708 <_spi_write_dummy>:
    2708:	b580      	push	{r7, lr}
    270a:	b084      	sub	sp, #16
    270c:	af00      	add	r7, sp, #0
    270e:	6078      	str	r0, [r7, #4]
    2710:	687b      	ldr	r3, [r7, #4]
    2712:	681b      	ldr	r3, [r3, #0]
    2714:	60fb      	str	r3, [r7, #12]
    2716:	4b08      	ldr	r3, [pc, #32]	; (2738 <_spi_write_dummy+0x30>)
    2718:	881b      	ldrh	r3, [r3, #0]
    271a:	001a      	movs	r2, r3
    271c:	68fb      	ldr	r3, [r7, #12]
    271e:	629a      	str	r2, [r3, #40]	; 0x28
    2720:	687b      	ldr	r3, [r7, #4]
    2722:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    2724:	b29b      	uxth	r3, r3
    2726:	3b01      	subs	r3, #1
    2728:	b29a      	uxth	r2, r3
    272a:	687b      	ldr	r3, [r7, #4]
    272c:	865a      	strh	r2, [r3, #50]	; 0x32
    272e:	46c0      	nop			; (mov r8, r8)
    2730:	46bd      	mov	sp, r7
    2732:	b004      	add	sp, #16
    2734:	bd80      	pop	{r7, pc}
    2736:	46c0      	nop			; (mov r8, r8)
    2738:	200000dc 	.word	0x200000dc

0000273c <_spi_read_dummy>:
    273c:	b580      	push	{r7, lr}
    273e:	b084      	sub	sp, #16
    2740:	af00      	add	r7, sp, #0
    2742:	6078      	str	r0, [r7, #4]
    2744:	687b      	ldr	r3, [r7, #4]
    2746:	681b      	ldr	r3, [r3, #0]
    2748:	60fb      	str	r3, [r7, #12]
    274a:	230a      	movs	r3, #10
    274c:	18fb      	adds	r3, r7, r3
    274e:	2200      	movs	r2, #0
    2750:	801a      	strh	r2, [r3, #0]
    2752:	68fb      	ldr	r3, [r7, #12]
    2754:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    2756:	230a      	movs	r3, #10
    2758:	18fb      	adds	r3, r7, r3
    275a:	801a      	strh	r2, [r3, #0]
    275c:	687b      	ldr	r3, [r7, #4]
    275e:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    2760:	b29b      	uxth	r3, r3
    2762:	3b01      	subs	r3, #1
    2764:	b29a      	uxth	r2, r3
    2766:	687b      	ldr	r3, [r7, #4]
    2768:	865a      	strh	r2, [r3, #50]	; 0x32
    276a:	46c0      	nop			; (mov r8, r8)
    276c:	46bd      	mov	sp, r7
    276e:	b004      	add	sp, #16
    2770:	bd80      	pop	{r7, pc}
    2772:	46c0      	nop			; (mov r8, r8)

00002774 <_spi_read>:
    2774:	b580      	push	{r7, lr}
    2776:	b084      	sub	sp, #16
    2778:	af00      	add	r7, sp, #0
    277a:	6078      	str	r0, [r7, #4]
    277c:	687b      	ldr	r3, [r7, #4]
    277e:	681b      	ldr	r3, [r3, #0]
    2780:	60fb      	str	r3, [r7, #12]
    2782:	68fb      	ldr	r3, [r7, #12]
    2784:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2786:	b29a      	uxth	r2, r3
    2788:	230a      	movs	r3, #10
    278a:	18fb      	adds	r3, r7, r3
    278c:	05d2      	lsls	r2, r2, #23
    278e:	0dd2      	lsrs	r2, r2, #23
    2790:	801a      	strh	r2, [r3, #0]
    2792:	687b      	ldr	r3, [r7, #4]
    2794:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2796:	220a      	movs	r2, #10
    2798:	18ba      	adds	r2, r7, r2
    279a:	8812      	ldrh	r2, [r2, #0]
    279c:	b2d2      	uxtb	r2, r2
    279e:	701a      	strb	r2, [r3, #0]
    27a0:	687b      	ldr	r3, [r7, #4]
    27a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    27a4:	1c5a      	adds	r2, r3, #1
    27a6:	687b      	ldr	r3, [r7, #4]
    27a8:	629a      	str	r2, [r3, #40]	; 0x28
    27aa:	687b      	ldr	r3, [r7, #4]
    27ac:	799b      	ldrb	r3, [r3, #6]
    27ae:	2b01      	cmp	r3, #1
    27b0:	d10d      	bne.n	27ce <_spi_read+0x5a>
    27b2:	687b      	ldr	r3, [r7, #4]
    27b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    27b6:	220a      	movs	r2, #10
    27b8:	18ba      	adds	r2, r7, r2
    27ba:	8812      	ldrh	r2, [r2, #0]
    27bc:	0a12      	lsrs	r2, r2, #8
    27be:	b292      	uxth	r2, r2
    27c0:	b2d2      	uxtb	r2, r2
    27c2:	701a      	strb	r2, [r3, #0]
    27c4:	687b      	ldr	r3, [r7, #4]
    27c6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    27c8:	1c5a      	adds	r2, r3, #1
    27ca:	687b      	ldr	r3, [r7, #4]
    27cc:	629a      	str	r2, [r3, #40]	; 0x28
    27ce:	687b      	ldr	r3, [r7, #4]
    27d0:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
    27d2:	b29b      	uxth	r3, r3
    27d4:	3b01      	subs	r3, #1
    27d6:	b29a      	uxth	r2, r3
    27d8:	687b      	ldr	r3, [r7, #4]
    27da:	861a      	strh	r2, [r3, #48]	; 0x30
    27dc:	46c0      	nop			; (mov r8, r8)
    27de:	46bd      	mov	sp, r7
    27e0:	b004      	add	sp, #16
    27e2:	bd80      	pop	{r7, pc}

000027e4 <_spi_interrupt_handler>:
    27e4:	b580      	push	{r7, lr}
    27e6:	b086      	sub	sp, #24
    27e8:	af00      	add	r7, sp, #0
    27ea:	0002      	movs	r2, r0
    27ec:	1dfb      	adds	r3, r7, #7
    27ee:	701a      	strb	r2, [r3, #0]
    27f0:	1dfb      	adds	r3, r7, #7
    27f2:	781a      	ldrb	r2, [r3, #0]
    27f4:	4bb9      	ldr	r3, [pc, #740]	; (2adc <_spi_interrupt_handler+0x2f8>)
    27f6:	0092      	lsls	r2, r2, #2
    27f8:	58d3      	ldr	r3, [r2, r3]
    27fa:	617b      	str	r3, [r7, #20]
    27fc:	697b      	ldr	r3, [r7, #20]
    27fe:	681b      	ldr	r3, [r3, #0]
    2800:	613b      	str	r3, [r7, #16]
    2802:	697b      	ldr	r3, [r7, #20]
    2804:	2237      	movs	r2, #55	; 0x37
    2806:	5c9a      	ldrb	r2, [r3, r2]
    2808:	697b      	ldr	r3, [r7, #20]
    280a:	2136      	movs	r1, #54	; 0x36
    280c:	5c59      	ldrb	r1, [r3, r1]
    280e:	230f      	movs	r3, #15
    2810:	18fb      	adds	r3, r7, r3
    2812:	400a      	ands	r2, r1
    2814:	701a      	strb	r2, [r3, #0]
    2816:	693b      	ldr	r3, [r7, #16]
    2818:	7e1b      	ldrb	r3, [r3, #24]
    281a:	b2da      	uxtb	r2, r3
    281c:	230c      	movs	r3, #12
    281e:	18fb      	adds	r3, r7, r3
    2820:	801a      	strh	r2, [r3, #0]
    2822:	693b      	ldr	r3, [r7, #16]
    2824:	7d9b      	ldrb	r3, [r3, #22]
    2826:	b2db      	uxtb	r3, r3
    2828:	b29a      	uxth	r2, r3
    282a:	230c      	movs	r3, #12
    282c:	18fb      	adds	r3, r7, r3
    282e:	210c      	movs	r1, #12
    2830:	1879      	adds	r1, r7, r1
    2832:	8809      	ldrh	r1, [r1, #0]
    2834:	400a      	ands	r2, r1
    2836:	801a      	strh	r2, [r3, #0]
    2838:	230c      	movs	r3, #12
    283a:	18fb      	adds	r3, r7, r3
    283c:	881b      	ldrh	r3, [r3, #0]
    283e:	2201      	movs	r2, #1
    2840:	4013      	ands	r3, r2
    2842:	d041      	beq.n	28c8 <_spi_interrupt_handler+0xe4>
    2844:	697b      	ldr	r3, [r7, #20]
    2846:	795b      	ldrb	r3, [r3, #5]
    2848:	2b01      	cmp	r3, #1
    284a:	d110      	bne.n	286e <_spi_interrupt_handler+0x8a>
    284c:	697b      	ldr	r3, [r7, #20]
    284e:	7a5b      	ldrb	r3, [r3, #9]
    2850:	b2db      	uxtb	r3, r3
    2852:	2b00      	cmp	r3, #0
    2854:	d10b      	bne.n	286e <_spi_interrupt_handler+0x8a>
    2856:	697b      	ldr	r3, [r7, #20]
    2858:	0018      	movs	r0, r3
    285a:	4ba1      	ldr	r3, [pc, #644]	; (2ae0 <_spi_interrupt_handler+0x2fc>)
    285c:	4798      	blx	r3
    285e:	697b      	ldr	r3, [r7, #20]
    2860:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    2862:	b29b      	uxth	r3, r3
    2864:	2b00      	cmp	r3, #0
    2866:	d102      	bne.n	286e <_spi_interrupt_handler+0x8a>
    2868:	693b      	ldr	r3, [r7, #16]
    286a:	2201      	movs	r2, #1
    286c:	751a      	strb	r2, [r3, #20]
    286e:	697b      	ldr	r3, [r7, #20]
    2870:	795b      	ldrb	r3, [r3, #5]
    2872:	2b01      	cmp	r3, #1
    2874:	d104      	bne.n	2880 <_spi_interrupt_handler+0x9c>
    2876:	697b      	ldr	r3, [r7, #20]
    2878:	7a5b      	ldrb	r3, [r3, #9]
    287a:	b2db      	uxtb	r3, r3
    287c:	2b00      	cmp	r3, #0
    287e:	d108      	bne.n	2892 <_spi_interrupt_handler+0xae>
    2880:	697b      	ldr	r3, [r7, #20]
    2882:	795b      	ldrb	r3, [r3, #5]
    2884:	2b00      	cmp	r3, #0
    2886:	d11f      	bne.n	28c8 <_spi_interrupt_handler+0xe4>
    2888:	697b      	ldr	r3, [r7, #20]
    288a:	7a5b      	ldrb	r3, [r3, #9]
    288c:	b2db      	uxtb	r3, r3
    288e:	2b00      	cmp	r3, #0
    2890:	d01a      	beq.n	28c8 <_spi_interrupt_handler+0xe4>
    2892:	697b      	ldr	r3, [r7, #20]
    2894:	0018      	movs	r0, r3
    2896:	4b93      	ldr	r3, [pc, #588]	; (2ae4 <_spi_interrupt_handler+0x300>)
    2898:	4798      	blx	r3
    289a:	697b      	ldr	r3, [r7, #20]
    289c:	8e9b      	ldrh	r3, [r3, #52]	; 0x34
    289e:	b29b      	uxth	r3, r3
    28a0:	2b00      	cmp	r3, #0
    28a2:	d111      	bne.n	28c8 <_spi_interrupt_handler+0xe4>
    28a4:	693b      	ldr	r3, [r7, #16]
    28a6:	2201      	movs	r2, #1
    28a8:	751a      	strb	r2, [r3, #20]
    28aa:	697b      	ldr	r3, [r7, #20]
    28ac:	7a5b      	ldrb	r3, [r3, #9]
    28ae:	b2db      	uxtb	r3, r3
    28b0:	2b01      	cmp	r3, #1
    28b2:	d109      	bne.n	28c8 <_spi_interrupt_handler+0xe4>
    28b4:	697b      	ldr	r3, [r7, #20]
    28b6:	79db      	ldrb	r3, [r3, #7]
    28b8:	2201      	movs	r2, #1
    28ba:	4053      	eors	r3, r2
    28bc:	b2db      	uxtb	r3, r3
    28be:	2b00      	cmp	r3, #0
    28c0:	d002      	beq.n	28c8 <_spi_interrupt_handler+0xe4>
    28c2:	693b      	ldr	r3, [r7, #16]
    28c4:	2202      	movs	r2, #2
    28c6:	759a      	strb	r2, [r3, #22]
    28c8:	230c      	movs	r3, #12
    28ca:	18fb      	adds	r3, r7, r3
    28cc:	881b      	ldrh	r3, [r3, #0]
    28ce:	2204      	movs	r2, #4
    28d0:	4013      	ands	r3, r2
    28d2:	d100      	bne.n	28d6 <_spi_interrupt_handler+0xf2>
    28d4:	e07e      	b.n	29d4 <_spi_interrupt_handler+0x1f0>
    28d6:	693b      	ldr	r3, [r7, #16]
    28d8:	8b5b      	ldrh	r3, [r3, #26]
    28da:	b29b      	uxth	r3, r3
    28dc:	001a      	movs	r2, r3
    28de:	2304      	movs	r3, #4
    28e0:	4013      	ands	r3, r2
    28e2:	d022      	beq.n	292a <_spi_interrupt_handler+0x146>
    28e4:	697b      	ldr	r3, [r7, #20]
    28e6:	7a5b      	ldrb	r3, [r3, #9]
    28e8:	b2db      	uxtb	r3, r3
    28ea:	2b01      	cmp	r3, #1
    28ec:	d014      	beq.n	2918 <_spi_interrupt_handler+0x134>
    28ee:	697b      	ldr	r3, [r7, #20]
    28f0:	2238      	movs	r2, #56	; 0x38
    28f2:	211e      	movs	r1, #30
    28f4:	5499      	strb	r1, [r3, r2]
    28f6:	697b      	ldr	r3, [r7, #20]
    28f8:	2203      	movs	r2, #3
    28fa:	725a      	strb	r2, [r3, #9]
    28fc:	693b      	ldr	r3, [r7, #16]
    28fe:	2205      	movs	r2, #5
    2900:	751a      	strb	r2, [r3, #20]
    2902:	230f      	movs	r3, #15
    2904:	18fb      	adds	r3, r7, r3
    2906:	781b      	ldrb	r3, [r3, #0]
    2908:	2208      	movs	r2, #8
    290a:	4013      	ands	r3, r2
    290c:	d004      	beq.n	2918 <_spi_interrupt_handler+0x134>
    290e:	697b      	ldr	r3, [r7, #20]
    2910:	699b      	ldr	r3, [r3, #24]
    2912:	697a      	ldr	r2, [r7, #20]
    2914:	0010      	movs	r0, r2
    2916:	4798      	blx	r3
    2918:	693b      	ldr	r3, [r7, #16]
    291a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
    291c:	230a      	movs	r3, #10
    291e:	18fb      	adds	r3, r7, r3
    2920:	801a      	strh	r2, [r3, #0]
    2922:	693b      	ldr	r3, [r7, #16]
    2924:	2204      	movs	r2, #4
    2926:	835a      	strh	r2, [r3, #26]
    2928:	e054      	b.n	29d4 <_spi_interrupt_handler+0x1f0>
    292a:	697b      	ldr	r3, [r7, #20]
    292c:	7a5b      	ldrb	r3, [r3, #9]
    292e:	b2db      	uxtb	r3, r3
    2930:	2b01      	cmp	r3, #1
    2932:	d11e      	bne.n	2972 <_spi_interrupt_handler+0x18e>
    2934:	697b      	ldr	r3, [r7, #20]
    2936:	0018      	movs	r0, r3
    2938:	4b6b      	ldr	r3, [pc, #428]	; (2ae8 <_spi_interrupt_handler+0x304>)
    293a:	4798      	blx	r3
    293c:	697b      	ldr	r3, [r7, #20]
    293e:	8e5b      	ldrh	r3, [r3, #50]	; 0x32
    2940:	b29b      	uxth	r3, r3
    2942:	2b00      	cmp	r3, #0
    2944:	d146      	bne.n	29d4 <_spi_interrupt_handler+0x1f0>
    2946:	693b      	ldr	r3, [r7, #16]
    2948:	2204      	movs	r2, #4
    294a:	751a      	strb	r2, [r3, #20]
    294c:	697b      	ldr	r3, [r7, #20]
    294e:	2238      	movs	r2, #56	; 0x38
    2950:	2100      	movs	r1, #0
    2952:	5499      	strb	r1, [r3, r2]
    2954:	697b      	ldr	r3, [r7, #20]
    2956:	2203      	movs	r2, #3
    2958:	725a      	strb	r2, [r3, #9]
    295a:	230f      	movs	r3, #15
    295c:	18fb      	adds	r3, r7, r3
    295e:	781b      	ldrb	r3, [r3, #0]
    2960:	2201      	movs	r2, #1
    2962:	4013      	ands	r3, r2
    2964:	d036      	beq.n	29d4 <_spi_interrupt_handler+0x1f0>
    2966:	697b      	ldr	r3, [r7, #20]
    2968:	68db      	ldr	r3, [r3, #12]
    296a:	697a      	ldr	r2, [r7, #20]
    296c:	0010      	movs	r0, r2
    296e:	4798      	blx	r3
    2970:	e030      	b.n	29d4 <_spi_interrupt_handler+0x1f0>
    2972:	697b      	ldr	r3, [r7, #20]
    2974:	0018      	movs	r0, r3
    2976:	4b5d      	ldr	r3, [pc, #372]	; (2aec <_spi_interrupt_handler+0x308>)
    2978:	4798      	blx	r3
    297a:	697b      	ldr	r3, [r7, #20]
    297c:	8e1b      	ldrh	r3, [r3, #48]	; 0x30
    297e:	b29b      	uxth	r3, r3
    2980:	2b00      	cmp	r3, #0
    2982:	d127      	bne.n	29d4 <_spi_interrupt_handler+0x1f0>
    2984:	697b      	ldr	r3, [r7, #20]
    2986:	2238      	movs	r2, #56	; 0x38
    2988:	2100      	movs	r1, #0
    298a:	5499      	strb	r1, [r3, r2]
    298c:	693b      	ldr	r3, [r7, #16]
    298e:	2204      	movs	r2, #4
    2990:	751a      	strb	r2, [r3, #20]
    2992:	697b      	ldr	r3, [r7, #20]
    2994:	7a5b      	ldrb	r3, [r3, #9]
    2996:	b2db      	uxtb	r3, r3
    2998:	2b02      	cmp	r3, #2
    299a:	d10b      	bne.n	29b4 <_spi_interrupt_handler+0x1d0>
    299c:	230f      	movs	r3, #15
    299e:	18fb      	adds	r3, r7, r3
    29a0:	781b      	ldrb	r3, [r3, #0]
    29a2:	2204      	movs	r2, #4
    29a4:	4013      	ands	r3, r2
    29a6:	d015      	beq.n	29d4 <_spi_interrupt_handler+0x1f0>
    29a8:	697b      	ldr	r3, [r7, #20]
    29aa:	695b      	ldr	r3, [r3, #20]
    29ac:	697a      	ldr	r2, [r7, #20]
    29ae:	0010      	movs	r0, r2
    29b0:	4798      	blx	r3
    29b2:	e00f      	b.n	29d4 <_spi_interrupt_handler+0x1f0>
    29b4:	697b      	ldr	r3, [r7, #20]
    29b6:	7a5b      	ldrb	r3, [r3, #9]
    29b8:	b2db      	uxtb	r3, r3
    29ba:	2b00      	cmp	r3, #0
    29bc:	d10a      	bne.n	29d4 <_spi_interrupt_handler+0x1f0>
    29be:	230f      	movs	r3, #15
    29c0:	18fb      	adds	r3, r7, r3
    29c2:	781b      	ldrb	r3, [r3, #0]
    29c4:	2202      	movs	r2, #2
    29c6:	4013      	ands	r3, r2
    29c8:	d004      	beq.n	29d4 <_spi_interrupt_handler+0x1f0>
    29ca:	697b      	ldr	r3, [r7, #20]
    29cc:	691b      	ldr	r3, [r3, #16]
    29ce:	697a      	ldr	r2, [r7, #20]
    29d0:	0010      	movs	r0, r2
    29d2:	4798      	blx	r3
    29d4:	230c      	movs	r3, #12
    29d6:	18fb      	adds	r3, r7, r3
    29d8:	881b      	ldrh	r3, [r3, #0]
    29da:	2202      	movs	r2, #2
    29dc:	4013      	ands	r3, r2
    29de:	d046      	beq.n	2a6e <_spi_interrupt_handler+0x28a>
    29e0:	697b      	ldr	r3, [r7, #20]
    29e2:	795b      	ldrb	r3, [r3, #5]
    29e4:	2b00      	cmp	r3, #0
    29e6:	d11d      	bne.n	2a24 <_spi_interrupt_handler+0x240>
    29e8:	693b      	ldr	r3, [r7, #16]
    29ea:	2207      	movs	r2, #7
    29ec:	751a      	strb	r2, [r3, #20]
    29ee:	693b      	ldr	r3, [r7, #16]
    29f0:	2202      	movs	r2, #2
    29f2:	761a      	strb	r2, [r3, #24]
    29f4:	697b      	ldr	r3, [r7, #20]
    29f6:	2203      	movs	r2, #3
    29f8:	725a      	strb	r2, [r3, #9]
    29fa:	697b      	ldr	r3, [r7, #20]
    29fc:	2200      	movs	r2, #0
    29fe:	869a      	strh	r2, [r3, #52]	; 0x34
    2a00:	697b      	ldr	r3, [r7, #20]
    2a02:	2200      	movs	r2, #0
    2a04:	861a      	strh	r2, [r3, #48]	; 0x30
    2a06:	697b      	ldr	r3, [r7, #20]
    2a08:	2238      	movs	r2, #56	; 0x38
    2a0a:	2100      	movs	r1, #0
    2a0c:	5499      	strb	r1, [r3, r2]
    2a0e:	230f      	movs	r3, #15
    2a10:	18fb      	adds	r3, r7, r3
    2a12:	781b      	ldrb	r3, [r3, #0]
    2a14:	2210      	movs	r2, #16
    2a16:	4013      	ands	r3, r2
    2a18:	d004      	beq.n	2a24 <_spi_interrupt_handler+0x240>
    2a1a:	697b      	ldr	r3, [r7, #20]
    2a1c:	69db      	ldr	r3, [r3, #28]
    2a1e:	697a      	ldr	r2, [r7, #20]
    2a20:	0010      	movs	r0, r2
    2a22:	4798      	blx	r3
    2a24:	697b      	ldr	r3, [r7, #20]
    2a26:	795b      	ldrb	r3, [r3, #5]
    2a28:	2b01      	cmp	r3, #1
    2a2a:	d120      	bne.n	2a6e <_spi_interrupt_handler+0x28a>
    2a2c:	697b      	ldr	r3, [r7, #20]
    2a2e:	7a5b      	ldrb	r3, [r3, #9]
    2a30:	b2db      	uxtb	r3, r3
    2a32:	2b01      	cmp	r3, #1
    2a34:	d11b      	bne.n	2a6e <_spi_interrupt_handler+0x28a>
    2a36:	697b      	ldr	r3, [r7, #20]
    2a38:	79db      	ldrb	r3, [r3, #7]
    2a3a:	2201      	movs	r2, #1
    2a3c:	4053      	eors	r3, r2
    2a3e:	b2db      	uxtb	r3, r3
    2a40:	2b00      	cmp	r3, #0
    2a42:	d014      	beq.n	2a6e <_spi_interrupt_handler+0x28a>
    2a44:	693b      	ldr	r3, [r7, #16]
    2a46:	2202      	movs	r2, #2
    2a48:	751a      	strb	r2, [r3, #20]
    2a4a:	697b      	ldr	r3, [r7, #20]
    2a4c:	2203      	movs	r2, #3
    2a4e:	725a      	strb	r2, [r3, #9]
    2a50:	697b      	ldr	r3, [r7, #20]
    2a52:	2238      	movs	r2, #56	; 0x38
    2a54:	2100      	movs	r1, #0
    2a56:	5499      	strb	r1, [r3, r2]
    2a58:	230f      	movs	r3, #15
    2a5a:	18fb      	adds	r3, r7, r3
    2a5c:	781b      	ldrb	r3, [r3, #0]
    2a5e:	2201      	movs	r2, #1
    2a60:	4013      	ands	r3, r2
    2a62:	d004      	beq.n	2a6e <_spi_interrupt_handler+0x28a>
    2a64:	697b      	ldr	r3, [r7, #20]
    2a66:	68db      	ldr	r3, [r3, #12]
    2a68:	697a      	ldr	r2, [r7, #20]
    2a6a:	0010      	movs	r0, r2
    2a6c:	4798      	blx	r3
    2a6e:	230c      	movs	r3, #12
    2a70:	18fb      	adds	r3, r7, r3
    2a72:	881b      	ldrh	r3, [r3, #0]
    2a74:	2208      	movs	r2, #8
    2a76:	4013      	ands	r3, r2
    2a78:	d014      	beq.n	2aa4 <_spi_interrupt_handler+0x2c0>
    2a7a:	697b      	ldr	r3, [r7, #20]
    2a7c:	795b      	ldrb	r3, [r3, #5]
    2a7e:	2b00      	cmp	r3, #0
    2a80:	d110      	bne.n	2aa4 <_spi_interrupt_handler+0x2c0>
    2a82:	693b      	ldr	r3, [r7, #16]
    2a84:	2208      	movs	r2, #8
    2a86:	751a      	strb	r2, [r3, #20]
    2a88:	693b      	ldr	r3, [r7, #16]
    2a8a:	2208      	movs	r2, #8
    2a8c:	761a      	strb	r2, [r3, #24]
    2a8e:	230f      	movs	r3, #15
    2a90:	18fb      	adds	r3, r7, r3
    2a92:	781b      	ldrb	r3, [r3, #0]
    2a94:	2220      	movs	r2, #32
    2a96:	4013      	ands	r3, r2
    2a98:	d004      	beq.n	2aa4 <_spi_interrupt_handler+0x2c0>
    2a9a:	697b      	ldr	r3, [r7, #20]
    2a9c:	6a1b      	ldr	r3, [r3, #32]
    2a9e:	697a      	ldr	r2, [r7, #20]
    2aa0:	0010      	movs	r0, r2
    2aa2:	4798      	blx	r3
    2aa4:	230c      	movs	r3, #12
    2aa6:	18fb      	adds	r3, r7, r3
    2aa8:	881b      	ldrh	r3, [r3, #0]
    2aaa:	2280      	movs	r2, #128	; 0x80
    2aac:	4013      	ands	r3, r2
    2aae:	d010      	beq.n	2ad2 <_spi_interrupt_handler+0x2ee>
    2ab0:	693b      	ldr	r3, [r7, #16]
    2ab2:	2280      	movs	r2, #128	; 0x80
    2ab4:	751a      	strb	r2, [r3, #20]
    2ab6:	693b      	ldr	r3, [r7, #16]
    2ab8:	2280      	movs	r2, #128	; 0x80
    2aba:	761a      	strb	r2, [r3, #24]
    2abc:	230f      	movs	r3, #15
    2abe:	18fb      	adds	r3, r7, r3
    2ac0:	781b      	ldrb	r3, [r3, #0]
    2ac2:	2240      	movs	r2, #64	; 0x40
    2ac4:	4013      	ands	r3, r2
    2ac6:	d004      	beq.n	2ad2 <_spi_interrupt_handler+0x2ee>
    2ac8:	697b      	ldr	r3, [r7, #20]
    2aca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
    2acc:	697a      	ldr	r2, [r7, #20]
    2ace:	0010      	movs	r0, r2
    2ad0:	4798      	blx	r3
    2ad2:	46c0      	nop			; (mov r8, r8)
    2ad4:	46bd      	mov	sp, r7
    2ad6:	b006      	add	sp, #24
    2ad8:	bd80      	pop	{r7, pc}
    2ada:	46c0      	nop			; (mov r8, r8)
    2adc:	200000e0 	.word	0x200000e0
    2ae0:	00002709 	.word	0x00002709
    2ae4:	0000268d 	.word	0x0000268d
    2ae8:	0000273d 	.word	0x0000273d
    2aec:	00002775 	.word	0x00002775

00002af0 <system_gclk_chan_get_config_defaults>:
    2af0:	b580      	push	{r7, lr}
    2af2:	b082      	sub	sp, #8
    2af4:	af00      	add	r7, sp, #0
    2af6:	6078      	str	r0, [r7, #4]
    2af8:	687b      	ldr	r3, [r7, #4]
    2afa:	2200      	movs	r2, #0
    2afc:	701a      	strb	r2, [r3, #0]
    2afe:	46c0      	nop			; (mov r8, r8)
    2b00:	46bd      	mov	sp, r7
    2b02:	b002      	add	sp, #8
    2b04:	bd80      	pop	{r7, pc}
    2b06:	46c0      	nop			; (mov r8, r8)

00002b08 <_sercom_get_sync_baud_val>:
    2b08:	b580      	push	{r7, lr}
    2b0a:	b086      	sub	sp, #24
    2b0c:	af00      	add	r7, sp, #0
    2b0e:	60f8      	str	r0, [r7, #12]
    2b10:	60b9      	str	r1, [r7, #8]
    2b12:	607a      	str	r2, [r7, #4]
    2b14:	2316      	movs	r3, #22
    2b16:	18fb      	adds	r3, r7, r3
    2b18:	2200      	movs	r2, #0
    2b1a:	801a      	strh	r2, [r3, #0]
    2b1c:	68bb      	ldr	r3, [r7, #8]
    2b1e:	613b      	str	r3, [r7, #16]
    2b20:	68bb      	ldr	r3, [r7, #8]
    2b22:	085a      	lsrs	r2, r3, #1
    2b24:	68fb      	ldr	r3, [r7, #12]
    2b26:	429a      	cmp	r2, r3
    2b28:	d201      	bcs.n	2b2e <_sercom_get_sync_baud_val+0x26>
    2b2a:	2340      	movs	r3, #64	; 0x40
    2b2c:	e026      	b.n	2b7c <_sercom_get_sync_baud_val+0x74>
    2b2e:	68bb      	ldr	r3, [r7, #8]
    2b30:	085b      	lsrs	r3, r3, #1
    2b32:	613b      	str	r3, [r7, #16]
    2b34:	e00a      	b.n	2b4c <_sercom_get_sync_baud_val+0x44>
    2b36:	693a      	ldr	r2, [r7, #16]
    2b38:	68fb      	ldr	r3, [r7, #12]
    2b3a:	1ad3      	subs	r3, r2, r3
    2b3c:	613b      	str	r3, [r7, #16]
    2b3e:	2316      	movs	r3, #22
    2b40:	18fb      	adds	r3, r7, r3
    2b42:	881a      	ldrh	r2, [r3, #0]
    2b44:	2316      	movs	r3, #22
    2b46:	18fb      	adds	r3, r7, r3
    2b48:	3201      	adds	r2, #1
    2b4a:	801a      	strh	r2, [r3, #0]
    2b4c:	693a      	ldr	r2, [r7, #16]
    2b4e:	68fb      	ldr	r3, [r7, #12]
    2b50:	429a      	cmp	r2, r3
    2b52:	d2f0      	bcs.n	2b36 <_sercom_get_sync_baud_val+0x2e>
    2b54:	2316      	movs	r3, #22
    2b56:	18fb      	adds	r3, r7, r3
    2b58:	2216      	movs	r2, #22
    2b5a:	18ba      	adds	r2, r7, r2
    2b5c:	8812      	ldrh	r2, [r2, #0]
    2b5e:	3a01      	subs	r2, #1
    2b60:	801a      	strh	r2, [r3, #0]
    2b62:	2316      	movs	r3, #22
    2b64:	18fb      	adds	r3, r7, r3
    2b66:	881b      	ldrh	r3, [r3, #0]
    2b68:	2bff      	cmp	r3, #255	; 0xff
    2b6a:	d901      	bls.n	2b70 <_sercom_get_sync_baud_val+0x68>
    2b6c:	2340      	movs	r3, #64	; 0x40
    2b6e:	e005      	b.n	2b7c <_sercom_get_sync_baud_val+0x74>
    2b70:	687b      	ldr	r3, [r7, #4]
    2b72:	2216      	movs	r2, #22
    2b74:	18ba      	adds	r2, r7, r2
    2b76:	8812      	ldrh	r2, [r2, #0]
    2b78:	801a      	strh	r2, [r3, #0]
    2b7a:	2300      	movs	r3, #0
    2b7c:	0018      	movs	r0, r3
    2b7e:	46bd      	mov	sp, r7
    2b80:	b006      	add	sp, #24
    2b82:	bd80      	pop	{r7, pc}

00002b84 <sercom_set_gclk_generator>:
    2b84:	b580      	push	{r7, lr}
    2b86:	b084      	sub	sp, #16
    2b88:	af00      	add	r7, sp, #0
    2b8a:	0002      	movs	r2, r0
    2b8c:	1dfb      	adds	r3, r7, #7
    2b8e:	701a      	strb	r2, [r3, #0]
    2b90:	1dbb      	adds	r3, r7, #6
    2b92:	1c0a      	adds	r2, r1, #0
    2b94:	701a      	strb	r2, [r3, #0]
    2b96:	4b1a      	ldr	r3, [pc, #104]	; (2c00 <sercom_set_gclk_generator+0x7c>)
    2b98:	781b      	ldrb	r3, [r3, #0]
    2b9a:	2201      	movs	r2, #1
    2b9c:	4053      	eors	r3, r2
    2b9e:	b2db      	uxtb	r3, r3
    2ba0:	2b00      	cmp	r3, #0
    2ba2:	d103      	bne.n	2bac <sercom_set_gclk_generator+0x28>
    2ba4:	1dbb      	adds	r3, r7, #6
    2ba6:	781b      	ldrb	r3, [r3, #0]
    2ba8:	2b00      	cmp	r3, #0
    2baa:	d01b      	beq.n	2be4 <sercom_set_gclk_generator+0x60>
    2bac:	230c      	movs	r3, #12
    2bae:	18fb      	adds	r3, r7, r3
    2bb0:	0018      	movs	r0, r3
    2bb2:	4b14      	ldr	r3, [pc, #80]	; (2c04 <sercom_set_gclk_generator+0x80>)
    2bb4:	4798      	blx	r3
    2bb6:	230c      	movs	r3, #12
    2bb8:	18fb      	adds	r3, r7, r3
    2bba:	1dfa      	adds	r2, r7, #7
    2bbc:	7812      	ldrb	r2, [r2, #0]
    2bbe:	701a      	strb	r2, [r3, #0]
    2bc0:	230c      	movs	r3, #12
    2bc2:	18fb      	adds	r3, r7, r3
    2bc4:	0019      	movs	r1, r3
    2bc6:	2013      	movs	r0, #19
    2bc8:	4b0f      	ldr	r3, [pc, #60]	; (2c08 <sercom_set_gclk_generator+0x84>)
    2bca:	4798      	blx	r3
    2bcc:	2013      	movs	r0, #19
    2bce:	4b0f      	ldr	r3, [pc, #60]	; (2c0c <sercom_set_gclk_generator+0x88>)
    2bd0:	4798      	blx	r3
    2bd2:	4b0b      	ldr	r3, [pc, #44]	; (2c00 <sercom_set_gclk_generator+0x7c>)
    2bd4:	1dfa      	adds	r2, r7, #7
    2bd6:	7812      	ldrb	r2, [r2, #0]
    2bd8:	705a      	strb	r2, [r3, #1]
    2bda:	4b09      	ldr	r3, [pc, #36]	; (2c00 <sercom_set_gclk_generator+0x7c>)
    2bdc:	2201      	movs	r2, #1
    2bde:	701a      	strb	r2, [r3, #0]
    2be0:	2300      	movs	r3, #0
    2be2:	e008      	b.n	2bf6 <sercom_set_gclk_generator+0x72>
    2be4:	4b06      	ldr	r3, [pc, #24]	; (2c00 <sercom_set_gclk_generator+0x7c>)
    2be6:	785b      	ldrb	r3, [r3, #1]
    2be8:	1dfa      	adds	r2, r7, #7
    2bea:	7812      	ldrb	r2, [r2, #0]
    2bec:	429a      	cmp	r2, r3
    2bee:	d101      	bne.n	2bf4 <sercom_set_gclk_generator+0x70>
    2bf0:	2300      	movs	r3, #0
    2bf2:	e000      	b.n	2bf6 <sercom_set_gclk_generator+0x72>
    2bf4:	231d      	movs	r3, #29
    2bf6:	0018      	movs	r0, r3
    2bf8:	46bd      	mov	sp, r7
    2bfa:	b004      	add	sp, #16
    2bfc:	bd80      	pop	{r7, pc}
    2bfe:	46c0      	nop			; (mov r8, r8)
    2c00:	20000024 	.word	0x20000024
    2c04:	00002af1 	.word	0x00002af1
    2c08:	000039c5 	.word	0x000039c5
    2c0c:	00003a09 	.word	0x00003a09

00002c10 <_sercom_get_default_pad>:
    2c10:	b580      	push	{r7, lr}
    2c12:	b082      	sub	sp, #8
    2c14:	af00      	add	r7, sp, #0
    2c16:	6078      	str	r0, [r7, #4]
    2c18:	000a      	movs	r2, r1
    2c1a:	1cfb      	adds	r3, r7, #3
    2c1c:	701a      	strb	r2, [r3, #0]
    2c1e:	687b      	ldr	r3, [r7, #4]
    2c20:	4a4d      	ldr	r2, [pc, #308]	; (2d58 <_sercom_get_default_pad+0x148>)
    2c22:	4293      	cmp	r3, r2
    2c24:	d03f      	beq.n	2ca6 <_sercom_get_default_pad+0x96>
    2c26:	4a4c      	ldr	r2, [pc, #304]	; (2d58 <_sercom_get_default_pad+0x148>)
    2c28:	4293      	cmp	r3, r2
    2c2a:	d806      	bhi.n	2c3a <_sercom_get_default_pad+0x2a>
    2c2c:	4a4b      	ldr	r2, [pc, #300]	; (2d5c <_sercom_get_default_pad+0x14c>)
    2c2e:	4293      	cmp	r3, r2
    2c30:	d00f      	beq.n	2c52 <_sercom_get_default_pad+0x42>
    2c32:	4a4b      	ldr	r2, [pc, #300]	; (2d60 <_sercom_get_default_pad+0x150>)
    2c34:	4293      	cmp	r3, r2
    2c36:	d021      	beq.n	2c7c <_sercom_get_default_pad+0x6c>
    2c38:	e089      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c3a:	4a4a      	ldr	r2, [pc, #296]	; (2d64 <_sercom_get_default_pad+0x154>)
    2c3c:	4293      	cmp	r3, r2
    2c3e:	d100      	bne.n	2c42 <_sercom_get_default_pad+0x32>
    2c40:	e05b      	b.n	2cfa <_sercom_get_default_pad+0xea>
    2c42:	4a49      	ldr	r2, [pc, #292]	; (2d68 <_sercom_get_default_pad+0x158>)
    2c44:	4293      	cmp	r3, r2
    2c46:	d100      	bne.n	2c4a <_sercom_get_default_pad+0x3a>
    2c48:	e06c      	b.n	2d24 <_sercom_get_default_pad+0x114>
    2c4a:	4a48      	ldr	r2, [pc, #288]	; (2d6c <_sercom_get_default_pad+0x15c>)
    2c4c:	4293      	cmp	r3, r2
    2c4e:	d03f      	beq.n	2cd0 <_sercom_get_default_pad+0xc0>
    2c50:	e07d      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c52:	1cfb      	adds	r3, r7, #3
    2c54:	781b      	ldrb	r3, [r3, #0]
    2c56:	2b01      	cmp	r3, #1
    2c58:	d00a      	beq.n	2c70 <_sercom_get_default_pad+0x60>
    2c5a:	dc02      	bgt.n	2c62 <_sercom_get_default_pad+0x52>
    2c5c:	2b00      	cmp	r3, #0
    2c5e:	d005      	beq.n	2c6c <_sercom_get_default_pad+0x5c>
    2c60:	e075      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c62:	2b02      	cmp	r3, #2
    2c64:	d006      	beq.n	2c74 <_sercom_get_default_pad+0x64>
    2c66:	2b03      	cmp	r3, #3
    2c68:	d006      	beq.n	2c78 <_sercom_get_default_pad+0x68>
    2c6a:	e070      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c6c:	4b40      	ldr	r3, [pc, #256]	; (2d70 <_sercom_get_default_pad+0x160>)
    2c6e:	e06f      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c70:	4b40      	ldr	r3, [pc, #256]	; (2d74 <_sercom_get_default_pad+0x164>)
    2c72:	e06d      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c74:	4b40      	ldr	r3, [pc, #256]	; (2d78 <_sercom_get_default_pad+0x168>)
    2c76:	e06b      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c78:	4b40      	ldr	r3, [pc, #256]	; (2d7c <_sercom_get_default_pad+0x16c>)
    2c7a:	e069      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c7c:	1cfb      	adds	r3, r7, #3
    2c7e:	781b      	ldrb	r3, [r3, #0]
    2c80:	2b01      	cmp	r3, #1
    2c82:	d00a      	beq.n	2c9a <_sercom_get_default_pad+0x8a>
    2c84:	dc02      	bgt.n	2c8c <_sercom_get_default_pad+0x7c>
    2c86:	2b00      	cmp	r3, #0
    2c88:	d005      	beq.n	2c96 <_sercom_get_default_pad+0x86>
    2c8a:	e060      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c8c:	2b02      	cmp	r3, #2
    2c8e:	d006      	beq.n	2c9e <_sercom_get_default_pad+0x8e>
    2c90:	2b03      	cmp	r3, #3
    2c92:	d006      	beq.n	2ca2 <_sercom_get_default_pad+0x92>
    2c94:	e05b      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2c96:	2303      	movs	r3, #3
    2c98:	e05a      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c9a:	4b39      	ldr	r3, [pc, #228]	; (2d80 <_sercom_get_default_pad+0x170>)
    2c9c:	e058      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2c9e:	4b39      	ldr	r3, [pc, #228]	; (2d84 <_sercom_get_default_pad+0x174>)
    2ca0:	e056      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2ca2:	4b39      	ldr	r3, [pc, #228]	; (2d88 <_sercom_get_default_pad+0x178>)
    2ca4:	e054      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2ca6:	1cfb      	adds	r3, r7, #3
    2ca8:	781b      	ldrb	r3, [r3, #0]
    2caa:	2b01      	cmp	r3, #1
    2cac:	d00a      	beq.n	2cc4 <_sercom_get_default_pad+0xb4>
    2cae:	dc02      	bgt.n	2cb6 <_sercom_get_default_pad+0xa6>
    2cb0:	2b00      	cmp	r3, #0
    2cb2:	d005      	beq.n	2cc0 <_sercom_get_default_pad+0xb0>
    2cb4:	e04b      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2cb6:	2b02      	cmp	r3, #2
    2cb8:	d006      	beq.n	2cc8 <_sercom_get_default_pad+0xb8>
    2cba:	2b03      	cmp	r3, #3
    2cbc:	d006      	beq.n	2ccc <_sercom_get_default_pad+0xbc>
    2cbe:	e046      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2cc0:	4b32      	ldr	r3, [pc, #200]	; (2d8c <_sercom_get_default_pad+0x17c>)
    2cc2:	e045      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cc4:	4b32      	ldr	r3, [pc, #200]	; (2d90 <_sercom_get_default_pad+0x180>)
    2cc6:	e043      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cc8:	4b32      	ldr	r3, [pc, #200]	; (2d94 <_sercom_get_default_pad+0x184>)
    2cca:	e041      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2ccc:	4b32      	ldr	r3, [pc, #200]	; (2d98 <_sercom_get_default_pad+0x188>)
    2cce:	e03f      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cd0:	1cfb      	adds	r3, r7, #3
    2cd2:	781b      	ldrb	r3, [r3, #0]
    2cd4:	2b01      	cmp	r3, #1
    2cd6:	d00a      	beq.n	2cee <_sercom_get_default_pad+0xde>
    2cd8:	dc02      	bgt.n	2ce0 <_sercom_get_default_pad+0xd0>
    2cda:	2b00      	cmp	r3, #0
    2cdc:	d005      	beq.n	2cea <_sercom_get_default_pad+0xda>
    2cde:	e036      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2ce0:	2b02      	cmp	r3, #2
    2ce2:	d006      	beq.n	2cf2 <_sercom_get_default_pad+0xe2>
    2ce4:	2b03      	cmp	r3, #3
    2ce6:	d006      	beq.n	2cf6 <_sercom_get_default_pad+0xe6>
    2ce8:	e031      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2cea:	4b2c      	ldr	r3, [pc, #176]	; (2d9c <_sercom_get_default_pad+0x18c>)
    2cec:	e030      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cee:	4b2c      	ldr	r3, [pc, #176]	; (2da0 <_sercom_get_default_pad+0x190>)
    2cf0:	e02e      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cf2:	4b2c      	ldr	r3, [pc, #176]	; (2da4 <_sercom_get_default_pad+0x194>)
    2cf4:	e02c      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cf6:	4b2c      	ldr	r3, [pc, #176]	; (2da8 <_sercom_get_default_pad+0x198>)
    2cf8:	e02a      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2cfa:	1cfb      	adds	r3, r7, #3
    2cfc:	781b      	ldrb	r3, [r3, #0]
    2cfe:	2b01      	cmp	r3, #1
    2d00:	d00a      	beq.n	2d18 <_sercom_get_default_pad+0x108>
    2d02:	dc02      	bgt.n	2d0a <_sercom_get_default_pad+0xfa>
    2d04:	2b00      	cmp	r3, #0
    2d06:	d005      	beq.n	2d14 <_sercom_get_default_pad+0x104>
    2d08:	e021      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2d0a:	2b02      	cmp	r3, #2
    2d0c:	d006      	beq.n	2d1c <_sercom_get_default_pad+0x10c>
    2d0e:	2b03      	cmp	r3, #3
    2d10:	d006      	beq.n	2d20 <_sercom_get_default_pad+0x110>
    2d12:	e01c      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2d14:	4b25      	ldr	r3, [pc, #148]	; (2dac <_sercom_get_default_pad+0x19c>)
    2d16:	e01b      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d18:	4b25      	ldr	r3, [pc, #148]	; (2db0 <_sercom_get_default_pad+0x1a0>)
    2d1a:	e019      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d1c:	4b25      	ldr	r3, [pc, #148]	; (2db4 <_sercom_get_default_pad+0x1a4>)
    2d1e:	e017      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d20:	4b25      	ldr	r3, [pc, #148]	; (2db8 <_sercom_get_default_pad+0x1a8>)
    2d22:	e015      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d24:	1cfb      	adds	r3, r7, #3
    2d26:	781b      	ldrb	r3, [r3, #0]
    2d28:	2b01      	cmp	r3, #1
    2d2a:	d00a      	beq.n	2d42 <_sercom_get_default_pad+0x132>
    2d2c:	dc02      	bgt.n	2d34 <_sercom_get_default_pad+0x124>
    2d2e:	2b00      	cmp	r3, #0
    2d30:	d005      	beq.n	2d3e <_sercom_get_default_pad+0x12e>
    2d32:	e00c      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2d34:	2b02      	cmp	r3, #2
    2d36:	d006      	beq.n	2d46 <_sercom_get_default_pad+0x136>
    2d38:	2b03      	cmp	r3, #3
    2d3a:	d006      	beq.n	2d4a <_sercom_get_default_pad+0x13a>
    2d3c:	e007      	b.n	2d4e <_sercom_get_default_pad+0x13e>
    2d3e:	4b1f      	ldr	r3, [pc, #124]	; (2dbc <_sercom_get_default_pad+0x1ac>)
    2d40:	e006      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d42:	4b1f      	ldr	r3, [pc, #124]	; (2dc0 <_sercom_get_default_pad+0x1b0>)
    2d44:	e004      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d46:	4b1f      	ldr	r3, [pc, #124]	; (2dc4 <_sercom_get_default_pad+0x1b4>)
    2d48:	e002      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d4a:	4b1f      	ldr	r3, [pc, #124]	; (2dc8 <_sercom_get_default_pad+0x1b8>)
    2d4c:	e000      	b.n	2d50 <_sercom_get_default_pad+0x140>
    2d4e:	2300      	movs	r3, #0
    2d50:	0018      	movs	r0, r3
    2d52:	46bd      	mov	sp, r7
    2d54:	b002      	add	sp, #8
    2d56:	bd80      	pop	{r7, pc}
    2d58:	42001000 	.word	0x42001000
    2d5c:	42000800 	.word	0x42000800
    2d60:	42000c00 	.word	0x42000c00
    2d64:	42001800 	.word	0x42001800
    2d68:	42001c00 	.word	0x42001c00
    2d6c:	42001400 	.word	0x42001400
    2d70:	00040003 	.word	0x00040003
    2d74:	00050003 	.word	0x00050003
    2d78:	00060003 	.word	0x00060003
    2d7c:	00070003 	.word	0x00070003
    2d80:	00010003 	.word	0x00010003
    2d84:	001e0003 	.word	0x001e0003
    2d88:	001f0003 	.word	0x001f0003
    2d8c:	00080003 	.word	0x00080003
    2d90:	00090003 	.word	0x00090003
    2d94:	000a0003 	.word	0x000a0003
    2d98:	000b0003 	.word	0x000b0003
    2d9c:	00100003 	.word	0x00100003
    2da0:	00110003 	.word	0x00110003
    2da4:	00120003 	.word	0x00120003
    2da8:	00130003 	.word	0x00130003
    2dac:	000c0003 	.word	0x000c0003
    2db0:	000d0003 	.word	0x000d0003
    2db4:	000e0003 	.word	0x000e0003
    2db8:	000f0003 	.word	0x000f0003
    2dbc:	00160003 	.word	0x00160003
    2dc0:	00170003 	.word	0x00170003
    2dc4:	00180003 	.word	0x00180003
    2dc8:	00190003 	.word	0x00190003

00002dcc <_sercom_get_sercom_inst_index>:
    2dcc:	b590      	push	{r4, r7, lr}
    2dce:	b08b      	sub	sp, #44	; 0x2c
    2dd0:	af00      	add	r7, sp, #0
    2dd2:	6078      	str	r0, [r7, #4]
    2dd4:	230c      	movs	r3, #12
    2dd6:	18fb      	adds	r3, r7, r3
    2dd8:	4a0f      	ldr	r2, [pc, #60]	; (2e18 <_sercom_get_sercom_inst_index+0x4c>)
    2dda:	ca13      	ldmia	r2!, {r0, r1, r4}
    2ddc:	c313      	stmia	r3!, {r0, r1, r4}
    2dde:	ca13      	ldmia	r2!, {r0, r1, r4}
    2de0:	c313      	stmia	r3!, {r0, r1, r4}
    2de2:	2300      	movs	r3, #0
    2de4:	627b      	str	r3, [r7, #36]	; 0x24
    2de6:	e00e      	b.n	2e06 <_sercom_get_sercom_inst_index+0x3a>
    2de8:	230c      	movs	r3, #12
    2dea:	18fb      	adds	r3, r7, r3
    2dec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
    2dee:	0092      	lsls	r2, r2, #2
    2df0:	58d3      	ldr	r3, [r2, r3]
    2df2:	1e1a      	subs	r2, r3, #0
    2df4:	687b      	ldr	r3, [r7, #4]
    2df6:	429a      	cmp	r2, r3
    2df8:	d102      	bne.n	2e00 <_sercom_get_sercom_inst_index+0x34>
    2dfa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2dfc:	b2db      	uxtb	r3, r3
    2dfe:	e006      	b.n	2e0e <_sercom_get_sercom_inst_index+0x42>
    2e00:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2e02:	3301      	adds	r3, #1
    2e04:	627b      	str	r3, [r7, #36]	; 0x24
    2e06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    2e08:	2b05      	cmp	r3, #5
    2e0a:	d9ed      	bls.n	2de8 <_sercom_get_sercom_inst_index+0x1c>
    2e0c:	2300      	movs	r3, #0
    2e0e:	0018      	movs	r0, r3
    2e10:	46bd      	mov	sp, r7
    2e12:	b00b      	add	sp, #44	; 0x2c
    2e14:	bd90      	pop	{r4, r7, pc}
    2e16:	46c0      	nop			; (mov r8, r8)
    2e18:	00005804 	.word	0x00005804

00002e1c <_sercom_default_handler>:
    2e1c:	b580      	push	{r7, lr}
    2e1e:	b082      	sub	sp, #8
    2e20:	af00      	add	r7, sp, #0
    2e22:	0002      	movs	r2, r0
    2e24:	1dfb      	adds	r3, r7, #7
    2e26:	701a      	strb	r2, [r3, #0]
    2e28:	46c0      	nop			; (mov r8, r8)
    2e2a:	46bd      	mov	sp, r7
    2e2c:	b002      	add	sp, #8
    2e2e:	bd80      	pop	{r7, pc}

00002e30 <_sercom_set_handler>:
    2e30:	b580      	push	{r7, lr}
    2e32:	b084      	sub	sp, #16
    2e34:	af00      	add	r7, sp, #0
    2e36:	0002      	movs	r2, r0
    2e38:	6039      	str	r1, [r7, #0]
    2e3a:	1dfb      	adds	r3, r7, #7
    2e3c:	701a      	strb	r2, [r3, #0]
    2e3e:	4b13      	ldr	r3, [pc, #76]	; (2e8c <_sercom_set_handler+0x5c>)
    2e40:	781b      	ldrb	r3, [r3, #0]
    2e42:	2201      	movs	r2, #1
    2e44:	4053      	eors	r3, r2
    2e46:	b2db      	uxtb	r3, r3
    2e48:	2b00      	cmp	r3, #0
    2e4a:	d015      	beq.n	2e78 <_sercom_set_handler+0x48>
    2e4c:	2300      	movs	r3, #0
    2e4e:	60fb      	str	r3, [r7, #12]
    2e50:	e00c      	b.n	2e6c <_sercom_set_handler+0x3c>
    2e52:	4b0f      	ldr	r3, [pc, #60]	; (2e90 <_sercom_set_handler+0x60>)
    2e54:	68fa      	ldr	r2, [r7, #12]
    2e56:	0092      	lsls	r2, r2, #2
    2e58:	490e      	ldr	r1, [pc, #56]	; (2e94 <_sercom_set_handler+0x64>)
    2e5a:	50d1      	str	r1, [r2, r3]
    2e5c:	4b0e      	ldr	r3, [pc, #56]	; (2e98 <_sercom_set_handler+0x68>)
    2e5e:	68fa      	ldr	r2, [r7, #12]
    2e60:	0092      	lsls	r2, r2, #2
    2e62:	2100      	movs	r1, #0
    2e64:	50d1      	str	r1, [r2, r3]
    2e66:	68fb      	ldr	r3, [r7, #12]
    2e68:	3301      	adds	r3, #1
    2e6a:	60fb      	str	r3, [r7, #12]
    2e6c:	68fb      	ldr	r3, [r7, #12]
    2e6e:	2b05      	cmp	r3, #5
    2e70:	d9ef      	bls.n	2e52 <_sercom_set_handler+0x22>
    2e72:	4b06      	ldr	r3, [pc, #24]	; (2e8c <_sercom_set_handler+0x5c>)
    2e74:	2201      	movs	r2, #1
    2e76:	701a      	strb	r2, [r3, #0]
    2e78:	1dfb      	adds	r3, r7, #7
    2e7a:	781a      	ldrb	r2, [r3, #0]
    2e7c:	4b04      	ldr	r3, [pc, #16]	; (2e90 <_sercom_set_handler+0x60>)
    2e7e:	0092      	lsls	r2, r2, #2
    2e80:	6839      	ldr	r1, [r7, #0]
    2e82:	50d1      	str	r1, [r2, r3]
    2e84:	46c0      	nop			; (mov r8, r8)
    2e86:	46bd      	mov	sp, r7
    2e88:	b004      	add	sp, #16
    2e8a:	bd80      	pop	{r7, pc}
    2e8c:	20000026 	.word	0x20000026
    2e90:	20000028 	.word	0x20000028
    2e94:	00002e1d 	.word	0x00002e1d
    2e98:	200000e0 	.word	0x200000e0

00002e9c <_sercom_get_interrupt_vector>:
    2e9c:	b590      	push	{r4, r7, lr}
    2e9e:	b085      	sub	sp, #20
    2ea0:	af00      	add	r7, sp, #0
    2ea2:	6078      	str	r0, [r7, #4]
    2ea4:	2308      	movs	r3, #8
    2ea6:	18fa      	adds	r2, r7, r3
    2ea8:	4b0c      	ldr	r3, [pc, #48]	; (2edc <_sercom_get_interrupt_vector+0x40>)
    2eaa:	0010      	movs	r0, r2
    2eac:	0019      	movs	r1, r3
    2eae:	2306      	movs	r3, #6
    2eb0:	001a      	movs	r2, r3
    2eb2:	4b0b      	ldr	r3, [pc, #44]	; (2ee0 <_sercom_get_interrupt_vector+0x44>)
    2eb4:	4798      	blx	r3
    2eb6:	230f      	movs	r3, #15
    2eb8:	18fc      	adds	r4, r7, r3
    2eba:	687b      	ldr	r3, [r7, #4]
    2ebc:	0018      	movs	r0, r3
    2ebe:	4b09      	ldr	r3, [pc, #36]	; (2ee4 <_sercom_get_interrupt_vector+0x48>)
    2ec0:	4798      	blx	r3
    2ec2:	0003      	movs	r3, r0
    2ec4:	7023      	strb	r3, [r4, #0]
    2ec6:	230f      	movs	r3, #15
    2ec8:	18fb      	adds	r3, r7, r3
    2eca:	781b      	ldrb	r3, [r3, #0]
    2ecc:	2208      	movs	r2, #8
    2ece:	18ba      	adds	r2, r7, r2
    2ed0:	5cd3      	ldrb	r3, [r2, r3]
    2ed2:	b25b      	sxtb	r3, r3
    2ed4:	0018      	movs	r0, r3
    2ed6:	46bd      	mov	sp, r7
    2ed8:	b005      	add	sp, #20
    2eda:	bd90      	pop	{r4, r7, pc}
    2edc:	0000581c 	.word	0x0000581c
    2ee0:	00005781 	.word	0x00005781
    2ee4:	00002dcd 	.word	0x00002dcd

00002ee8 <SERCOM0_Handler>:
    2ee8:	b580      	push	{r7, lr}
    2eea:	af00      	add	r7, sp, #0
    2eec:	4b03      	ldr	r3, [pc, #12]	; (2efc <SERCOM0_Handler+0x14>)
    2eee:	681b      	ldr	r3, [r3, #0]
    2ef0:	2000      	movs	r0, #0
    2ef2:	4798      	blx	r3
    2ef4:	46c0      	nop			; (mov r8, r8)
    2ef6:	46bd      	mov	sp, r7
    2ef8:	bd80      	pop	{r7, pc}
    2efa:	46c0      	nop			; (mov r8, r8)
    2efc:	20000028 	.word	0x20000028

00002f00 <SERCOM1_Handler>:
    2f00:	b580      	push	{r7, lr}
    2f02:	af00      	add	r7, sp, #0
    2f04:	4b03      	ldr	r3, [pc, #12]	; (2f14 <SERCOM1_Handler+0x14>)
    2f06:	685b      	ldr	r3, [r3, #4]
    2f08:	2001      	movs	r0, #1
    2f0a:	4798      	blx	r3
    2f0c:	46c0      	nop			; (mov r8, r8)
    2f0e:	46bd      	mov	sp, r7
    2f10:	bd80      	pop	{r7, pc}
    2f12:	46c0      	nop			; (mov r8, r8)
    2f14:	20000028 	.word	0x20000028

00002f18 <SERCOM2_Handler>:
    2f18:	b580      	push	{r7, lr}
    2f1a:	af00      	add	r7, sp, #0
    2f1c:	4b03      	ldr	r3, [pc, #12]	; (2f2c <SERCOM2_Handler+0x14>)
    2f1e:	689b      	ldr	r3, [r3, #8]
    2f20:	2002      	movs	r0, #2
    2f22:	4798      	blx	r3
    2f24:	46c0      	nop			; (mov r8, r8)
    2f26:	46bd      	mov	sp, r7
    2f28:	bd80      	pop	{r7, pc}
    2f2a:	46c0      	nop			; (mov r8, r8)
    2f2c:	20000028 	.word	0x20000028

00002f30 <SERCOM3_Handler>:
    2f30:	b580      	push	{r7, lr}
    2f32:	af00      	add	r7, sp, #0
    2f34:	4b03      	ldr	r3, [pc, #12]	; (2f44 <SERCOM3_Handler+0x14>)
    2f36:	68db      	ldr	r3, [r3, #12]
    2f38:	2003      	movs	r0, #3
    2f3a:	4798      	blx	r3
    2f3c:	46c0      	nop			; (mov r8, r8)
    2f3e:	46bd      	mov	sp, r7
    2f40:	bd80      	pop	{r7, pc}
    2f42:	46c0      	nop			; (mov r8, r8)
    2f44:	20000028 	.word	0x20000028

00002f48 <SERCOM4_Handler>:
    2f48:	b580      	push	{r7, lr}
    2f4a:	af00      	add	r7, sp, #0
    2f4c:	4b03      	ldr	r3, [pc, #12]	; (2f5c <SERCOM4_Handler+0x14>)
    2f4e:	691b      	ldr	r3, [r3, #16]
    2f50:	2004      	movs	r0, #4
    2f52:	4798      	blx	r3
    2f54:	46c0      	nop			; (mov r8, r8)
    2f56:	46bd      	mov	sp, r7
    2f58:	bd80      	pop	{r7, pc}
    2f5a:	46c0      	nop			; (mov r8, r8)
    2f5c:	20000028 	.word	0x20000028

00002f60 <SERCOM5_Handler>:
    2f60:	b580      	push	{r7, lr}
    2f62:	af00      	add	r7, sp, #0
    2f64:	4b03      	ldr	r3, [pc, #12]	; (2f74 <SERCOM5_Handler+0x14>)
    2f66:	695b      	ldr	r3, [r3, #20]
    2f68:	2005      	movs	r0, #5
    2f6a:	4798      	blx	r3
    2f6c:	46c0      	nop			; (mov r8, r8)
    2f6e:	46bd      	mov	sp, r7
    2f70:	bd80      	pop	{r7, pc}
    2f72:	46c0      	nop			; (mov r8, r8)
    2f74:	20000028 	.word	0x20000028

00002f78 <system_pinmux_get_config_defaults>:
    2f78:	b580      	push	{r7, lr}
    2f7a:	b082      	sub	sp, #8
    2f7c:	af00      	add	r7, sp, #0
    2f7e:	6078      	str	r0, [r7, #4]
    2f80:	687b      	ldr	r3, [r7, #4]
    2f82:	2280      	movs	r2, #128	; 0x80
    2f84:	701a      	strb	r2, [r3, #0]
    2f86:	687b      	ldr	r3, [r7, #4]
    2f88:	2200      	movs	r2, #0
    2f8a:	705a      	strb	r2, [r3, #1]
    2f8c:	687b      	ldr	r3, [r7, #4]
    2f8e:	2201      	movs	r2, #1
    2f90:	709a      	strb	r2, [r3, #2]
    2f92:	687b      	ldr	r3, [r7, #4]
    2f94:	2200      	movs	r2, #0
    2f96:	70da      	strb	r2, [r3, #3]
    2f98:	46c0      	nop			; (mov r8, r8)
    2f9a:	46bd      	mov	sp, r7
    2f9c:	b002      	add	sp, #8
    2f9e:	bd80      	pop	{r7, pc}

00002fa0 <port_pin_set_config>:
    2fa0:	b580      	push	{r7, lr}
    2fa2:	b084      	sub	sp, #16
    2fa4:	af00      	add	r7, sp, #0
    2fa6:	0002      	movs	r2, r0
    2fa8:	6039      	str	r1, [r7, #0]
    2faa:	1dfb      	adds	r3, r7, #7
    2fac:	701a      	strb	r2, [r3, #0]
    2fae:	230c      	movs	r3, #12
    2fb0:	18fb      	adds	r3, r7, r3
    2fb2:	0018      	movs	r0, r3
    2fb4:	4b10      	ldr	r3, [pc, #64]	; (2ff8 <port_pin_set_config+0x58>)
    2fb6:	4798      	blx	r3
    2fb8:	230c      	movs	r3, #12
    2fba:	18fb      	adds	r3, r7, r3
    2fbc:	2280      	movs	r2, #128	; 0x80
    2fbe:	701a      	strb	r2, [r3, #0]
    2fc0:	683b      	ldr	r3, [r7, #0]
    2fc2:	781a      	ldrb	r2, [r3, #0]
    2fc4:	230c      	movs	r3, #12
    2fc6:	18fb      	adds	r3, r7, r3
    2fc8:	705a      	strb	r2, [r3, #1]
    2fca:	683b      	ldr	r3, [r7, #0]
    2fcc:	785a      	ldrb	r2, [r3, #1]
    2fce:	230c      	movs	r3, #12
    2fd0:	18fb      	adds	r3, r7, r3
    2fd2:	709a      	strb	r2, [r3, #2]
    2fd4:	683b      	ldr	r3, [r7, #0]
    2fd6:	789a      	ldrb	r2, [r3, #2]
    2fd8:	230c      	movs	r3, #12
    2fda:	18fb      	adds	r3, r7, r3
    2fdc:	70da      	strb	r2, [r3, #3]
    2fde:	230c      	movs	r3, #12
    2fe0:	18fa      	adds	r2, r7, r3
    2fe2:	1dfb      	adds	r3, r7, #7
    2fe4:	781b      	ldrb	r3, [r3, #0]
    2fe6:	0011      	movs	r1, r2
    2fe8:	0018      	movs	r0, r3
    2fea:	4b04      	ldr	r3, [pc, #16]	; (2ffc <port_pin_set_config+0x5c>)
    2fec:	4798      	blx	r3
    2fee:	46c0      	nop			; (mov r8, r8)
    2ff0:	46bd      	mov	sp, r7
    2ff2:	b004      	add	sp, #16
    2ff4:	bd80      	pop	{r7, pc}
    2ff6:	46c0      	nop			; (mov r8, r8)
    2ff8:	00002f79 	.word	0x00002f79
    2ffc:	00003cb1 	.word	0x00003cb1

00003000 <system_board_init>:
    3000:	b580      	push	{r7, lr}
    3002:	af00      	add	r7, sp, #0
    3004:	46c0      	nop			; (mov r8, r8)
    3006:	46bd      	mov	sp, r7
    3008:	bd80      	pop	{r7, pc}
    300a:	46c0      	nop			; (mov r8, r8)

0000300c <cpu_irq_enter_critical>:
    300c:	b580      	push	{r7, lr}
    300e:	b082      	sub	sp, #8
    3010:	af00      	add	r7, sp, #0
    3012:	4b10      	ldr	r3, [pc, #64]	; (3054 <cpu_irq_enter_critical+0x48>)
    3014:	681b      	ldr	r3, [r3, #0]
    3016:	2b00      	cmp	r3, #0
    3018:	d112      	bne.n	3040 <cpu_irq_enter_critical+0x34>
    301a:	f3ef 8310 	mrs	r3, PRIMASK
    301e:	607b      	str	r3, [r7, #4]
    3020:	687b      	ldr	r3, [r7, #4]
    3022:	2b00      	cmp	r3, #0
    3024:	d109      	bne.n	303a <cpu_irq_enter_critical+0x2e>
    3026:	b672      	cpsid	i
    3028:	f3bf 8f5f 	dmb	sy
    302c:	4b0a      	ldr	r3, [pc, #40]	; (3058 <cpu_irq_enter_critical+0x4c>)
    302e:	2200      	movs	r2, #0
    3030:	701a      	strb	r2, [r3, #0]
    3032:	4b0a      	ldr	r3, [pc, #40]	; (305c <cpu_irq_enter_critical+0x50>)
    3034:	2201      	movs	r2, #1
    3036:	701a      	strb	r2, [r3, #0]
    3038:	e002      	b.n	3040 <cpu_irq_enter_critical+0x34>
    303a:	4b08      	ldr	r3, [pc, #32]	; (305c <cpu_irq_enter_critical+0x50>)
    303c:	2200      	movs	r2, #0
    303e:	701a      	strb	r2, [r3, #0]
    3040:	4b04      	ldr	r3, [pc, #16]	; (3054 <cpu_irq_enter_critical+0x48>)
    3042:	681b      	ldr	r3, [r3, #0]
    3044:	1c5a      	adds	r2, r3, #1
    3046:	4b03      	ldr	r3, [pc, #12]	; (3054 <cpu_irq_enter_critical+0x48>)
    3048:	601a      	str	r2, [r3, #0]
    304a:	46c0      	nop			; (mov r8, r8)
    304c:	46bd      	mov	sp, r7
    304e:	b002      	add	sp, #8
    3050:	bd80      	pop	{r7, pc}
    3052:	46c0      	nop			; (mov r8, r8)
    3054:	20000040 	.word	0x20000040
    3058:	20000000 	.word	0x20000000
    305c:	20000044 	.word	0x20000044

00003060 <cpu_irq_leave_critical>:
    3060:	b580      	push	{r7, lr}
    3062:	af00      	add	r7, sp, #0
    3064:	4b0b      	ldr	r3, [pc, #44]	; (3094 <cpu_irq_leave_critical+0x34>)
    3066:	681b      	ldr	r3, [r3, #0]
    3068:	1e5a      	subs	r2, r3, #1
    306a:	4b0a      	ldr	r3, [pc, #40]	; (3094 <cpu_irq_leave_critical+0x34>)
    306c:	601a      	str	r2, [r3, #0]
    306e:	4b09      	ldr	r3, [pc, #36]	; (3094 <cpu_irq_leave_critical+0x34>)
    3070:	681b      	ldr	r3, [r3, #0]
    3072:	2b00      	cmp	r3, #0
    3074:	d10a      	bne.n	308c <cpu_irq_leave_critical+0x2c>
    3076:	4b08      	ldr	r3, [pc, #32]	; (3098 <cpu_irq_leave_critical+0x38>)
    3078:	781b      	ldrb	r3, [r3, #0]
    307a:	b2db      	uxtb	r3, r3
    307c:	2b00      	cmp	r3, #0
    307e:	d005      	beq.n	308c <cpu_irq_leave_critical+0x2c>
    3080:	4b06      	ldr	r3, [pc, #24]	; (309c <cpu_irq_leave_critical+0x3c>)
    3082:	2201      	movs	r2, #1
    3084:	701a      	strb	r2, [r3, #0]
    3086:	f3bf 8f5f 	dmb	sy
    308a:	b662      	cpsie	i
    308c:	46c0      	nop			; (mov r8, r8)
    308e:	46bd      	mov	sp, r7
    3090:	bd80      	pop	{r7, pc}
    3092:	46c0      	nop			; (mov r8, r8)
    3094:	20000040 	.word	0x20000040
    3098:	20000044 	.word	0x20000044
    309c:	20000000 	.word	0x20000000

000030a0 <system_gclk_gen_get_config_defaults>:
    30a0:	b580      	push	{r7, lr}
    30a2:	b082      	sub	sp, #8
    30a4:	af00      	add	r7, sp, #0
    30a6:	6078      	str	r0, [r7, #4]
    30a8:	687b      	ldr	r3, [r7, #4]
    30aa:	2201      	movs	r2, #1
    30ac:	605a      	str	r2, [r3, #4]
    30ae:	687b      	ldr	r3, [r7, #4]
    30b0:	2200      	movs	r2, #0
    30b2:	705a      	strb	r2, [r3, #1]
    30b4:	687b      	ldr	r3, [r7, #4]
    30b6:	2206      	movs	r2, #6
    30b8:	701a      	strb	r2, [r3, #0]
    30ba:	687b      	ldr	r3, [r7, #4]
    30bc:	2200      	movs	r2, #0
    30be:	721a      	strb	r2, [r3, #8]
    30c0:	687b      	ldr	r3, [r7, #4]
    30c2:	2200      	movs	r2, #0
    30c4:	725a      	strb	r2, [r3, #9]
    30c6:	46c0      	nop			; (mov r8, r8)
    30c8:	46bd      	mov	sp, r7
    30ca:	b002      	add	sp, #8
    30cc:	bd80      	pop	{r7, pc}
    30ce:	46c0      	nop			; (mov r8, r8)

000030d0 <system_clock_source_osc32k_get_config_defaults>:
    30d0:	b580      	push	{r7, lr}
    30d2:	b082      	sub	sp, #8
    30d4:	af00      	add	r7, sp, #0
    30d6:	6078      	str	r0, [r7, #4]
    30d8:	687b      	ldr	r3, [r7, #4]
    30da:	2201      	movs	r2, #1
    30dc:	705a      	strb	r2, [r3, #1]
    30de:	687b      	ldr	r3, [r7, #4]
    30e0:	2201      	movs	r2, #1
    30e2:	709a      	strb	r2, [r3, #2]
    30e4:	687b      	ldr	r3, [r7, #4]
    30e6:	2200      	movs	r2, #0
    30e8:	70da      	strb	r2, [r3, #3]
    30ea:	687b      	ldr	r3, [r7, #4]
    30ec:	2201      	movs	r2, #1
    30ee:	711a      	strb	r2, [r3, #4]
    30f0:	687b      	ldr	r3, [r7, #4]
    30f2:	2207      	movs	r2, #7
    30f4:	701a      	strb	r2, [r3, #0]
    30f6:	687b      	ldr	r3, [r7, #4]
    30f8:	2200      	movs	r2, #0
    30fa:	715a      	strb	r2, [r3, #5]
    30fc:	46c0      	nop			; (mov r8, r8)
    30fe:	46bd      	mov	sp, r7
    3100:	b002      	add	sp, #8
    3102:	bd80      	pop	{r7, pc}

00003104 <system_clock_source_osc8m_get_config_defaults>:
    3104:	b580      	push	{r7, lr}
    3106:	b082      	sub	sp, #8
    3108:	af00      	add	r7, sp, #0
    310a:	6078      	str	r0, [r7, #4]
    310c:	687b      	ldr	r3, [r7, #4]
    310e:	2203      	movs	r2, #3
    3110:	701a      	strb	r2, [r3, #0]
    3112:	687b      	ldr	r3, [r7, #4]
    3114:	2200      	movs	r2, #0
    3116:	705a      	strb	r2, [r3, #1]
    3118:	687b      	ldr	r3, [r7, #4]
    311a:	2201      	movs	r2, #1
    311c:	709a      	strb	r2, [r3, #2]
    311e:	46c0      	nop			; (mov r8, r8)
    3120:	46bd      	mov	sp, r7
    3122:	b002      	add	sp, #8
    3124:	bd80      	pop	{r7, pc}
    3126:	46c0      	nop			; (mov r8, r8)

00003128 <system_cpu_clock_set_divider>:
    3128:	b580      	push	{r7, lr}
    312a:	b082      	sub	sp, #8
    312c:	af00      	add	r7, sp, #0
    312e:	0002      	movs	r2, r0
    3130:	1dfb      	adds	r3, r7, #7
    3132:	701a      	strb	r2, [r3, #0]
    3134:	4a03      	ldr	r2, [pc, #12]	; (3144 <system_cpu_clock_set_divider+0x1c>)
    3136:	1dfb      	adds	r3, r7, #7
    3138:	781b      	ldrb	r3, [r3, #0]
    313a:	7213      	strb	r3, [r2, #8]
    313c:	46c0      	nop			; (mov r8, r8)
    313e:	46bd      	mov	sp, r7
    3140:	b002      	add	sp, #8
    3142:	bd80      	pop	{r7, pc}
    3144:	40000400 	.word	0x40000400

00003148 <system_apb_clock_set_divider>:
    3148:	b580      	push	{r7, lr}
    314a:	b082      	sub	sp, #8
    314c:	af00      	add	r7, sp, #0
    314e:	0002      	movs	r2, r0
    3150:	1dfb      	adds	r3, r7, #7
    3152:	701a      	strb	r2, [r3, #0]
    3154:	1dbb      	adds	r3, r7, #6
    3156:	1c0a      	adds	r2, r1, #0
    3158:	701a      	strb	r2, [r3, #0]
    315a:	1dfb      	adds	r3, r7, #7
    315c:	781b      	ldrb	r3, [r3, #0]
    315e:	2b01      	cmp	r3, #1
    3160:	d008      	beq.n	3174 <system_apb_clock_set_divider+0x2c>
    3162:	2b02      	cmp	r3, #2
    3164:	d00b      	beq.n	317e <system_apb_clock_set_divider+0x36>
    3166:	2b00      	cmp	r3, #0
    3168:	d10e      	bne.n	3188 <system_apb_clock_set_divider+0x40>
    316a:	4a0b      	ldr	r2, [pc, #44]	; (3198 <system_apb_clock_set_divider+0x50>)
    316c:	1dbb      	adds	r3, r7, #6
    316e:	781b      	ldrb	r3, [r3, #0]
    3170:	7253      	strb	r3, [r2, #9]
    3172:	e00b      	b.n	318c <system_apb_clock_set_divider+0x44>
    3174:	4a08      	ldr	r2, [pc, #32]	; (3198 <system_apb_clock_set_divider+0x50>)
    3176:	1dbb      	adds	r3, r7, #6
    3178:	781b      	ldrb	r3, [r3, #0]
    317a:	7293      	strb	r3, [r2, #10]
    317c:	e006      	b.n	318c <system_apb_clock_set_divider+0x44>
    317e:	4a06      	ldr	r2, [pc, #24]	; (3198 <system_apb_clock_set_divider+0x50>)
    3180:	1dbb      	adds	r3, r7, #6
    3182:	781b      	ldrb	r3, [r3, #0]
    3184:	72d3      	strb	r3, [r2, #11]
    3186:	e001      	b.n	318c <system_apb_clock_set_divider+0x44>
    3188:	2317      	movs	r3, #23
    318a:	e000      	b.n	318e <system_apb_clock_set_divider+0x46>
    318c:	2300      	movs	r3, #0
    318e:	0018      	movs	r0, r3
    3190:	46bd      	mov	sp, r7
    3192:	b002      	add	sp, #8
    3194:	bd80      	pop	{r7, pc}
    3196:	46c0      	nop			; (mov r8, r8)
    3198:	40000400 	.word	0x40000400

0000319c <system_flash_set_waitstates>:
    319c:	b580      	push	{r7, lr}
    319e:	b082      	sub	sp, #8
    31a0:	af00      	add	r7, sp, #0
    31a2:	0002      	movs	r2, r0
    31a4:	1dfb      	adds	r3, r7, #7
    31a6:	701a      	strb	r2, [r3, #0]
    31a8:	4a08      	ldr	r2, [pc, #32]	; (31cc <system_flash_set_waitstates+0x30>)
    31aa:	1dfb      	adds	r3, r7, #7
    31ac:	781b      	ldrb	r3, [r3, #0]
    31ae:	210f      	movs	r1, #15
    31b0:	400b      	ands	r3, r1
    31b2:	b2d9      	uxtb	r1, r3
    31b4:	6853      	ldr	r3, [r2, #4]
    31b6:	200f      	movs	r0, #15
    31b8:	4001      	ands	r1, r0
    31ba:	0049      	lsls	r1, r1, #1
    31bc:	201e      	movs	r0, #30
    31be:	4383      	bics	r3, r0
    31c0:	430b      	orrs	r3, r1
    31c2:	6053      	str	r3, [r2, #4]
    31c4:	46c0      	nop			; (mov r8, r8)
    31c6:	46bd      	mov	sp, r7
    31c8:	b002      	add	sp, #8
    31ca:	bd80      	pop	{r7, pc}
    31cc:	41004000 	.word	0x41004000

000031d0 <_system_dfll_wait_for_sync>:
    31d0:	b580      	push	{r7, lr}
    31d2:	af00      	add	r7, sp, #0
    31d4:	46c0      	nop			; (mov r8, r8)
    31d6:	4b04      	ldr	r3, [pc, #16]	; (31e8 <_system_dfll_wait_for_sync+0x18>)
    31d8:	68db      	ldr	r3, [r3, #12]
    31da:	2210      	movs	r2, #16
    31dc:	4013      	ands	r3, r2
    31de:	d0fa      	beq.n	31d6 <_system_dfll_wait_for_sync+0x6>
    31e0:	46c0      	nop			; (mov r8, r8)
    31e2:	46bd      	mov	sp, r7
    31e4:	bd80      	pop	{r7, pc}
    31e6:	46c0      	nop			; (mov r8, r8)
    31e8:	40000800 	.word	0x40000800

000031ec <_system_clock_source_dfll_set_config_errata_9905>:
    31ec:	b580      	push	{r7, lr}
    31ee:	af00      	add	r7, sp, #0
    31f0:	4b0c      	ldr	r3, [pc, #48]	; (3224 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    31f2:	2202      	movs	r2, #2
    31f4:	849a      	strh	r2, [r3, #36]	; 0x24
    31f6:	4b0c      	ldr	r3, [pc, #48]	; (3228 <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
    31f8:	4798      	blx	r3
    31fa:	4a0a      	ldr	r2, [pc, #40]	; (3224 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    31fc:	4b0b      	ldr	r3, [pc, #44]	; (322c <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    31fe:	689b      	ldr	r3, [r3, #8]
    3200:	62d3      	str	r3, [r2, #44]	; 0x2c
    3202:	4a08      	ldr	r2, [pc, #32]	; (3224 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    3204:	4b09      	ldr	r3, [pc, #36]	; (322c <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    3206:	685b      	ldr	r3, [r3, #4]
    3208:	6293      	str	r3, [r2, #40]	; 0x28
    320a:	4b06      	ldr	r3, [pc, #24]	; (3224 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    320c:	2200      	movs	r2, #0
    320e:	849a      	strh	r2, [r3, #36]	; 0x24
    3210:	4b05      	ldr	r3, [pc, #20]	; (3228 <_system_clock_source_dfll_set_config_errata_9905+0x3c>)
    3212:	4798      	blx	r3
    3214:	4a03      	ldr	r2, [pc, #12]	; (3224 <_system_clock_source_dfll_set_config_errata_9905+0x38>)
    3216:	4b05      	ldr	r3, [pc, #20]	; (322c <_system_clock_source_dfll_set_config_errata_9905+0x40>)
    3218:	681b      	ldr	r3, [r3, #0]
    321a:	b29b      	uxth	r3, r3
    321c:	8493      	strh	r3, [r2, #36]	; 0x24
    321e:	46c0      	nop			; (mov r8, r8)
    3220:	46bd      	mov	sp, r7
    3222:	bd80      	pop	{r7, pc}
    3224:	40000800 	.word	0x40000800
    3228:	000031d1 	.word	0x000031d1
    322c:	20000048 	.word	0x20000048

00003230 <system_clock_source_get_hz>:
    3230:	b580      	push	{r7, lr}
    3232:	b082      	sub	sp, #8
    3234:	af00      	add	r7, sp, #0
    3236:	0002      	movs	r2, r0
    3238:	1dfb      	adds	r3, r7, #7
    323a:	701a      	strb	r2, [r3, #0]
    323c:	1dfb      	adds	r3, r7, #7
    323e:	781b      	ldrb	r3, [r3, #0]
    3240:	2b08      	cmp	r3, #8
    3242:	d840      	bhi.n	32c6 <system_clock_source_get_hz+0x96>
    3244:	009a      	lsls	r2, r3, #2
    3246:	4b22      	ldr	r3, [pc, #136]	; (32d0 <system_clock_source_get_hz+0xa0>)
    3248:	18d3      	adds	r3, r2, r3
    324a:	681b      	ldr	r3, [r3, #0]
    324c:	469f      	mov	pc, r3
    324e:	4b21      	ldr	r3, [pc, #132]	; (32d4 <system_clock_source_get_hz+0xa4>)
    3250:	691b      	ldr	r3, [r3, #16]
    3252:	e039      	b.n	32c8 <system_clock_source_get_hz+0x98>
    3254:	4b20      	ldr	r3, [pc, #128]	; (32d8 <system_clock_source_get_hz+0xa8>)
    3256:	6a1b      	ldr	r3, [r3, #32]
    3258:	059b      	lsls	r3, r3, #22
    325a:	0f9b      	lsrs	r3, r3, #30
    325c:	b2db      	uxtb	r3, r3
    325e:	001a      	movs	r2, r3
    3260:	4b1e      	ldr	r3, [pc, #120]	; (32dc <system_clock_source_get_hz+0xac>)
    3262:	40d3      	lsrs	r3, r2
    3264:	e030      	b.n	32c8 <system_clock_source_get_hz+0x98>
    3266:	2380      	movs	r3, #128	; 0x80
    3268:	021b      	lsls	r3, r3, #8
    326a:	e02d      	b.n	32c8 <system_clock_source_get_hz+0x98>
    326c:	2380      	movs	r3, #128	; 0x80
    326e:	021b      	lsls	r3, r3, #8
    3270:	e02a      	b.n	32c8 <system_clock_source_get_hz+0x98>
    3272:	4b18      	ldr	r3, [pc, #96]	; (32d4 <system_clock_source_get_hz+0xa4>)
    3274:	695b      	ldr	r3, [r3, #20]
    3276:	e027      	b.n	32c8 <system_clock_source_get_hz+0x98>
    3278:	4b16      	ldr	r3, [pc, #88]	; (32d4 <system_clock_source_get_hz+0xa4>)
    327a:	681b      	ldr	r3, [r3, #0]
    327c:	2202      	movs	r2, #2
    327e:	4013      	ands	r3, r2
    3280:	d101      	bne.n	3286 <system_clock_source_get_hz+0x56>
    3282:	2300      	movs	r3, #0
    3284:	e020      	b.n	32c8 <system_clock_source_get_hz+0x98>
    3286:	4b16      	ldr	r3, [pc, #88]	; (32e0 <system_clock_source_get_hz+0xb0>)
    3288:	4798      	blx	r3
    328a:	4b12      	ldr	r3, [pc, #72]	; (32d4 <system_clock_source_get_hz+0xa4>)
    328c:	681b      	ldr	r3, [r3, #0]
    328e:	2204      	movs	r2, #4
    3290:	4013      	ands	r3, r2
    3292:	d009      	beq.n	32a8 <system_clock_source_get_hz+0x78>
    3294:	2000      	movs	r0, #0
    3296:	4b13      	ldr	r3, [pc, #76]	; (32e4 <system_clock_source_get_hz+0xb4>)
    3298:	4798      	blx	r3
    329a:	0002      	movs	r2, r0
    329c:	4b0d      	ldr	r3, [pc, #52]	; (32d4 <system_clock_source_get_hz+0xa4>)
    329e:	689b      	ldr	r3, [r3, #8]
    32a0:	041b      	lsls	r3, r3, #16
    32a2:	0c1b      	lsrs	r3, r3, #16
    32a4:	4353      	muls	r3, r2
    32a6:	e00f      	b.n	32c8 <system_clock_source_get_hz+0x98>
    32a8:	4b0f      	ldr	r3, [pc, #60]	; (32e8 <system_clock_source_get_hz+0xb8>)
    32aa:	e00d      	b.n	32c8 <system_clock_source_get_hz+0x98>
    32ac:	4a0a      	ldr	r2, [pc, #40]	; (32d8 <system_clock_source_get_hz+0xa8>)
    32ae:	2350      	movs	r3, #80	; 0x50
    32b0:	5cd3      	ldrb	r3, [r2, r3]
    32b2:	b2db      	uxtb	r3, r3
    32b4:	001a      	movs	r2, r3
    32b6:	2304      	movs	r3, #4
    32b8:	4013      	ands	r3, r2
    32ba:	d101      	bne.n	32c0 <system_clock_source_get_hz+0x90>
    32bc:	2300      	movs	r3, #0
    32be:	e003      	b.n	32c8 <system_clock_source_get_hz+0x98>
    32c0:	4b04      	ldr	r3, [pc, #16]	; (32d4 <system_clock_source_get_hz+0xa4>)
    32c2:	68db      	ldr	r3, [r3, #12]
    32c4:	e000      	b.n	32c8 <system_clock_source_get_hz+0x98>
    32c6:	2300      	movs	r3, #0
    32c8:	0018      	movs	r0, r3
    32ca:	46bd      	mov	sp, r7
    32cc:	b002      	add	sp, #8
    32ce:	bd80      	pop	{r7, pc}
    32d0:	00005824 	.word	0x00005824
    32d4:	20000048 	.word	0x20000048
    32d8:	40000800 	.word	0x40000800
    32dc:	007a1200 	.word	0x007a1200
    32e0:	000031d1 	.word	0x000031d1
    32e4:	00003ae9 	.word	0x00003ae9
    32e8:	02dc6c00 	.word	0x02dc6c00

000032ec <system_clock_source_osc8m_set_config>:
    32ec:	b580      	push	{r7, lr}
    32ee:	b084      	sub	sp, #16
    32f0:	af00      	add	r7, sp, #0
    32f2:	6078      	str	r0, [r7, #4]
    32f4:	4b1a      	ldr	r3, [pc, #104]	; (3360 <system_clock_source_osc8m_set_config+0x74>)
    32f6:	6a1b      	ldr	r3, [r3, #32]
    32f8:	60fb      	str	r3, [r7, #12]
    32fa:	687b      	ldr	r3, [r7, #4]
    32fc:	781b      	ldrb	r3, [r3, #0]
    32fe:	1c1a      	adds	r2, r3, #0
    3300:	2303      	movs	r3, #3
    3302:	4013      	ands	r3, r2
    3304:	b2da      	uxtb	r2, r3
    3306:	230d      	movs	r3, #13
    3308:	18fb      	adds	r3, r7, r3
    330a:	2103      	movs	r1, #3
    330c:	400a      	ands	r2, r1
    330e:	0010      	movs	r0, r2
    3310:	781a      	ldrb	r2, [r3, #0]
    3312:	2103      	movs	r1, #3
    3314:	438a      	bics	r2, r1
    3316:	1c11      	adds	r1, r2, #0
    3318:	1c02      	adds	r2, r0, #0
    331a:	430a      	orrs	r2, r1
    331c:	701a      	strb	r2, [r3, #0]
    331e:	687b      	ldr	r3, [r7, #4]
    3320:	789a      	ldrb	r2, [r3, #2]
    3322:	230c      	movs	r3, #12
    3324:	18fb      	adds	r3, r7, r3
    3326:	01d0      	lsls	r0, r2, #7
    3328:	781a      	ldrb	r2, [r3, #0]
    332a:	217f      	movs	r1, #127	; 0x7f
    332c:	400a      	ands	r2, r1
    332e:	1c11      	adds	r1, r2, #0
    3330:	1c02      	adds	r2, r0, #0
    3332:	430a      	orrs	r2, r1
    3334:	701a      	strb	r2, [r3, #0]
    3336:	687b      	ldr	r3, [r7, #4]
    3338:	785a      	ldrb	r2, [r3, #1]
    333a:	230c      	movs	r3, #12
    333c:	18fb      	adds	r3, r7, r3
    333e:	2101      	movs	r1, #1
    3340:	400a      	ands	r2, r1
    3342:	0190      	lsls	r0, r2, #6
    3344:	781a      	ldrb	r2, [r3, #0]
    3346:	2140      	movs	r1, #64	; 0x40
    3348:	438a      	bics	r2, r1
    334a:	1c11      	adds	r1, r2, #0
    334c:	1c02      	adds	r2, r0, #0
    334e:	430a      	orrs	r2, r1
    3350:	701a      	strb	r2, [r3, #0]
    3352:	4b03      	ldr	r3, [pc, #12]	; (3360 <system_clock_source_osc8m_set_config+0x74>)
    3354:	68fa      	ldr	r2, [r7, #12]
    3356:	621a      	str	r2, [r3, #32]
    3358:	46c0      	nop			; (mov r8, r8)
    335a:	46bd      	mov	sp, r7
    335c:	b004      	add	sp, #16
    335e:	bd80      	pop	{r7, pc}
    3360:	40000800 	.word	0x40000800

00003364 <system_clock_source_osc32k_set_config>:
    3364:	b580      	push	{r7, lr}
    3366:	b084      	sub	sp, #16
    3368:	af00      	add	r7, sp, #0
    336a:	6078      	str	r0, [r7, #4]
    336c:	4b2f      	ldr	r3, [pc, #188]	; (342c <system_clock_source_osc32k_set_config+0xc8>)
    336e:	699b      	ldr	r3, [r3, #24]
    3370:	60fb      	str	r3, [r7, #12]
    3372:	687b      	ldr	r3, [r7, #4]
    3374:	785a      	ldrb	r2, [r3, #1]
    3376:	230c      	movs	r3, #12
    3378:	18fb      	adds	r3, r7, r3
    337a:	2101      	movs	r1, #1
    337c:	400a      	ands	r2, r1
    337e:	00d0      	lsls	r0, r2, #3
    3380:	781a      	ldrb	r2, [r3, #0]
    3382:	2108      	movs	r1, #8
    3384:	438a      	bics	r2, r1
    3386:	1c11      	adds	r1, r2, #0
    3388:	1c02      	adds	r2, r0, #0
    338a:	430a      	orrs	r2, r1
    338c:	701a      	strb	r2, [r3, #0]
    338e:	687b      	ldr	r3, [r7, #4]
    3390:	789a      	ldrb	r2, [r3, #2]
    3392:	230c      	movs	r3, #12
    3394:	18fb      	adds	r3, r7, r3
    3396:	2101      	movs	r1, #1
    3398:	400a      	ands	r2, r1
    339a:	0090      	lsls	r0, r2, #2
    339c:	781a      	ldrb	r2, [r3, #0]
    339e:	2104      	movs	r1, #4
    33a0:	438a      	bics	r2, r1
    33a2:	1c11      	adds	r1, r2, #0
    33a4:	1c02      	adds	r2, r0, #0
    33a6:	430a      	orrs	r2, r1
    33a8:	701a      	strb	r2, [r3, #0]
    33aa:	687b      	ldr	r3, [r7, #4]
    33ac:	781b      	ldrb	r3, [r3, #0]
    33ae:	1c1a      	adds	r2, r3, #0
    33b0:	2307      	movs	r3, #7
    33b2:	4013      	ands	r3, r2
    33b4:	b2da      	uxtb	r2, r3
    33b6:	230d      	movs	r3, #13
    33b8:	18fb      	adds	r3, r7, r3
    33ba:	2107      	movs	r1, #7
    33bc:	400a      	ands	r2, r1
    33be:	0010      	movs	r0, r2
    33c0:	781a      	ldrb	r2, [r3, #0]
    33c2:	2107      	movs	r1, #7
    33c4:	438a      	bics	r2, r1
    33c6:	1c11      	adds	r1, r2, #0
    33c8:	1c02      	adds	r2, r0, #0
    33ca:	430a      	orrs	r2, r1
    33cc:	701a      	strb	r2, [r3, #0]
    33ce:	687b      	ldr	r3, [r7, #4]
    33d0:	791a      	ldrb	r2, [r3, #4]
    33d2:	230c      	movs	r3, #12
    33d4:	18fb      	adds	r3, r7, r3
    33d6:	01d0      	lsls	r0, r2, #7
    33d8:	781a      	ldrb	r2, [r3, #0]
    33da:	217f      	movs	r1, #127	; 0x7f
    33dc:	400a      	ands	r2, r1
    33de:	1c11      	adds	r1, r2, #0
    33e0:	1c02      	adds	r2, r0, #0
    33e2:	430a      	orrs	r2, r1
    33e4:	701a      	strb	r2, [r3, #0]
    33e6:	687b      	ldr	r3, [r7, #4]
    33e8:	78da      	ldrb	r2, [r3, #3]
    33ea:	230c      	movs	r3, #12
    33ec:	18fb      	adds	r3, r7, r3
    33ee:	2101      	movs	r1, #1
    33f0:	400a      	ands	r2, r1
    33f2:	0190      	lsls	r0, r2, #6
    33f4:	781a      	ldrb	r2, [r3, #0]
    33f6:	2140      	movs	r1, #64	; 0x40
    33f8:	438a      	bics	r2, r1
    33fa:	1c11      	adds	r1, r2, #0
    33fc:	1c02      	adds	r2, r0, #0
    33fe:	430a      	orrs	r2, r1
    3400:	701a      	strb	r2, [r3, #0]
    3402:	687b      	ldr	r3, [r7, #4]
    3404:	795a      	ldrb	r2, [r3, #5]
    3406:	230d      	movs	r3, #13
    3408:	18fb      	adds	r3, r7, r3
    340a:	2101      	movs	r1, #1
    340c:	400a      	ands	r2, r1
    340e:	0110      	lsls	r0, r2, #4
    3410:	781a      	ldrb	r2, [r3, #0]
    3412:	2110      	movs	r1, #16
    3414:	438a      	bics	r2, r1
    3416:	1c11      	adds	r1, r2, #0
    3418:	1c02      	adds	r2, r0, #0
    341a:	430a      	orrs	r2, r1
    341c:	701a      	strb	r2, [r3, #0]
    341e:	4b03      	ldr	r3, [pc, #12]	; (342c <system_clock_source_osc32k_set_config+0xc8>)
    3420:	68fa      	ldr	r2, [r7, #12]
    3422:	619a      	str	r2, [r3, #24]
    3424:	46c0      	nop			; (mov r8, r8)
    3426:	46bd      	mov	sp, r7
    3428:	b004      	add	sp, #16
    342a:	bd80      	pop	{r7, pc}
    342c:	40000800 	.word	0x40000800

00003430 <system_clock_source_enable>:
    3430:	b580      	push	{r7, lr}
    3432:	b082      	sub	sp, #8
    3434:	af00      	add	r7, sp, #0
    3436:	0002      	movs	r2, r0
    3438:	1dfb      	adds	r3, r7, #7
    343a:	701a      	strb	r2, [r3, #0]
    343c:	1dfb      	adds	r3, r7, #7
    343e:	781b      	ldrb	r3, [r3, #0]
    3440:	2b08      	cmp	r3, #8
    3442:	d83b      	bhi.n	34bc <system_clock_source_enable+0x8c>
    3444:	009a      	lsls	r2, r3, #2
    3446:	4b21      	ldr	r3, [pc, #132]	; (34cc <system_clock_source_enable+0x9c>)
    3448:	18d3      	adds	r3, r2, r3
    344a:	681b      	ldr	r3, [r3, #0]
    344c:	469f      	mov	pc, r3
    344e:	4b20      	ldr	r3, [pc, #128]	; (34d0 <system_clock_source_enable+0xa0>)
    3450:	4a1f      	ldr	r2, [pc, #124]	; (34d0 <system_clock_source_enable+0xa0>)
    3452:	6a12      	ldr	r2, [r2, #32]
    3454:	2102      	movs	r1, #2
    3456:	430a      	orrs	r2, r1
    3458:	621a      	str	r2, [r3, #32]
    345a:	2300      	movs	r3, #0
    345c:	e031      	b.n	34c2 <system_clock_source_enable+0x92>
    345e:	4b1c      	ldr	r3, [pc, #112]	; (34d0 <system_clock_source_enable+0xa0>)
    3460:	4a1b      	ldr	r2, [pc, #108]	; (34d0 <system_clock_source_enable+0xa0>)
    3462:	6992      	ldr	r2, [r2, #24]
    3464:	2102      	movs	r1, #2
    3466:	430a      	orrs	r2, r1
    3468:	619a      	str	r2, [r3, #24]
    346a:	e029      	b.n	34c0 <system_clock_source_enable+0x90>
    346c:	4a18      	ldr	r2, [pc, #96]	; (34d0 <system_clock_source_enable+0xa0>)
    346e:	4b18      	ldr	r3, [pc, #96]	; (34d0 <system_clock_source_enable+0xa0>)
    3470:	8a1b      	ldrh	r3, [r3, #16]
    3472:	b29b      	uxth	r3, r3
    3474:	2102      	movs	r1, #2
    3476:	430b      	orrs	r3, r1
    3478:	b29b      	uxth	r3, r3
    347a:	8213      	strh	r3, [r2, #16]
    347c:	e020      	b.n	34c0 <system_clock_source_enable+0x90>
    347e:	4a14      	ldr	r2, [pc, #80]	; (34d0 <system_clock_source_enable+0xa0>)
    3480:	4b13      	ldr	r3, [pc, #76]	; (34d0 <system_clock_source_enable+0xa0>)
    3482:	8a9b      	ldrh	r3, [r3, #20]
    3484:	b29b      	uxth	r3, r3
    3486:	2102      	movs	r1, #2
    3488:	430b      	orrs	r3, r1
    348a:	b29b      	uxth	r3, r3
    348c:	8293      	strh	r3, [r2, #20]
    348e:	e017      	b.n	34c0 <system_clock_source_enable+0x90>
    3490:	4b10      	ldr	r3, [pc, #64]	; (34d4 <system_clock_source_enable+0xa4>)
    3492:	681b      	ldr	r3, [r3, #0]
    3494:	2202      	movs	r2, #2
    3496:	431a      	orrs	r2, r3
    3498:	4b0e      	ldr	r3, [pc, #56]	; (34d4 <system_clock_source_enable+0xa4>)
    349a:	601a      	str	r2, [r3, #0]
    349c:	4b0e      	ldr	r3, [pc, #56]	; (34d8 <system_clock_source_enable+0xa8>)
    349e:	4798      	blx	r3
    34a0:	e00e      	b.n	34c0 <system_clock_source_enable+0x90>
    34a2:	4a0b      	ldr	r2, [pc, #44]	; (34d0 <system_clock_source_enable+0xa0>)
    34a4:	490a      	ldr	r1, [pc, #40]	; (34d0 <system_clock_source_enable+0xa0>)
    34a6:	2344      	movs	r3, #68	; 0x44
    34a8:	5ccb      	ldrb	r3, [r1, r3]
    34aa:	b2db      	uxtb	r3, r3
    34ac:	2102      	movs	r1, #2
    34ae:	430b      	orrs	r3, r1
    34b0:	b2d9      	uxtb	r1, r3
    34b2:	2344      	movs	r3, #68	; 0x44
    34b4:	54d1      	strb	r1, [r2, r3]
    34b6:	e003      	b.n	34c0 <system_clock_source_enable+0x90>
    34b8:	2300      	movs	r3, #0
    34ba:	e002      	b.n	34c2 <system_clock_source_enable+0x92>
    34bc:	2317      	movs	r3, #23
    34be:	e000      	b.n	34c2 <system_clock_source_enable+0x92>
    34c0:	2300      	movs	r3, #0
    34c2:	0018      	movs	r0, r3
    34c4:	46bd      	mov	sp, r7
    34c6:	b002      	add	sp, #8
    34c8:	bd80      	pop	{r7, pc}
    34ca:	46c0      	nop			; (mov r8, r8)
    34cc:	00005848 	.word	0x00005848
    34d0:	40000800 	.word	0x40000800
    34d4:	20000048 	.word	0x20000048
    34d8:	000031ed 	.word	0x000031ed

000034dc <_switch_peripheral_gclk>:
    34dc:	b580      	push	{r7, lr}
    34de:	b082      	sub	sp, #8
    34e0:	af00      	add	r7, sp, #0
    34e2:	003b      	movs	r3, r7
    34e4:	2201      	movs	r2, #1
    34e6:	701a      	strb	r2, [r3, #0]
    34e8:	2300      	movs	r3, #0
    34ea:	607b      	str	r3, [r7, #4]
    34ec:	e009      	b.n	3502 <_switch_peripheral_gclk+0x26>
    34ee:	687b      	ldr	r3, [r7, #4]
    34f0:	b2db      	uxtb	r3, r3
    34f2:	003a      	movs	r2, r7
    34f4:	0011      	movs	r1, r2
    34f6:	0018      	movs	r0, r3
    34f8:	4b05      	ldr	r3, [pc, #20]	; (3510 <_switch_peripheral_gclk+0x34>)
    34fa:	4798      	blx	r3
    34fc:	687b      	ldr	r3, [r7, #4]
    34fe:	3301      	adds	r3, #1
    3500:	607b      	str	r3, [r7, #4]
    3502:	687b      	ldr	r3, [r7, #4]
    3504:	2b24      	cmp	r3, #36	; 0x24
    3506:	d9f2      	bls.n	34ee <_switch_peripheral_gclk+0x12>
    3508:	46c0      	nop			; (mov r8, r8)
    350a:	46bd      	mov	sp, r7
    350c:	b002      	add	sp, #8
    350e:	bd80      	pop	{r7, pc}
    3510:	000039c5 	.word	0x000039c5

00003514 <system_clock_init>:
    3514:	b580      	push	{r7, lr}
    3516:	b0a2      	sub	sp, #136	; 0x88
    3518:	af00      	add	r7, sp, #0
    351a:	4b4f      	ldr	r3, [pc, #316]	; (3658 <system_clock_init+0x144>)
    351c:	22c2      	movs	r2, #194	; 0xc2
    351e:	00d2      	lsls	r2, r2, #3
    3520:	609a      	str	r2, [r3, #8]
    3522:	2000      	movs	r0, #0
    3524:	4b4d      	ldr	r3, [pc, #308]	; (365c <system_clock_init+0x148>)
    3526:	4798      	blx	r3
    3528:	4b4d      	ldr	r3, [pc, #308]	; (3660 <system_clock_init+0x14c>)
    352a:	4798      	blx	r3
    352c:	4a4a      	ldr	r2, [pc, #296]	; (3658 <system_clock_init+0x144>)
    352e:	4b4d      	ldr	r3, [pc, #308]	; (3664 <system_clock_init+0x150>)
    3530:	681b      	ldr	r3, [r3, #0]
    3532:	099b      	lsrs	r3, r3, #6
    3534:	b2db      	uxtb	r3, r3
    3536:	1c19      	adds	r1, r3, #0
    3538:	237f      	movs	r3, #127	; 0x7f
    353a:	400b      	ands	r3, r1
    353c:	b2d9      	uxtb	r1, r3
    353e:	6993      	ldr	r3, [r2, #24]
    3540:	207f      	movs	r0, #127	; 0x7f
    3542:	4001      	ands	r1, r0
    3544:	0409      	lsls	r1, r1, #16
    3546:	4848      	ldr	r0, [pc, #288]	; (3668 <system_clock_init+0x154>)
    3548:	4003      	ands	r3, r0
    354a:	430b      	orrs	r3, r1
    354c:	6193      	str	r3, [r2, #24]
    354e:	2380      	movs	r3, #128	; 0x80
    3550:	18fb      	adds	r3, r7, r3
    3552:	0018      	movs	r0, r3
    3554:	4b45      	ldr	r3, [pc, #276]	; (366c <system_clock_init+0x158>)
    3556:	4798      	blx	r3
    3558:	2380      	movs	r3, #128	; 0x80
    355a:	18fb      	adds	r3, r7, r3
    355c:	2207      	movs	r2, #7
    355e:	701a      	strb	r2, [r3, #0]
    3560:	2380      	movs	r3, #128	; 0x80
    3562:	18fb      	adds	r3, r7, r3
    3564:	2201      	movs	r2, #1
    3566:	705a      	strb	r2, [r3, #1]
    3568:	2380      	movs	r3, #128	; 0x80
    356a:	18fb      	adds	r3, r7, r3
    356c:	2201      	movs	r2, #1
    356e:	709a      	strb	r2, [r3, #2]
    3570:	2380      	movs	r3, #128	; 0x80
    3572:	18fb      	adds	r3, r7, r3
    3574:	2201      	movs	r2, #1
    3576:	711a      	strb	r2, [r3, #4]
    3578:	2380      	movs	r3, #128	; 0x80
    357a:	18fb      	adds	r3, r7, r3
    357c:	2200      	movs	r2, #0
    357e:	70da      	strb	r2, [r3, #3]
    3580:	2380      	movs	r3, #128	; 0x80
    3582:	18fb      	adds	r3, r7, r3
    3584:	0018      	movs	r0, r3
    3586:	4b3a      	ldr	r3, [pc, #232]	; (3670 <system_clock_init+0x15c>)
    3588:	4798      	blx	r3
    358a:	2004      	movs	r0, #4
    358c:	4b39      	ldr	r3, [pc, #228]	; (3674 <system_clock_init+0x160>)
    358e:	4798      	blx	r3
    3590:	237c      	movs	r3, #124	; 0x7c
    3592:	18fb      	adds	r3, r7, r3
    3594:	0018      	movs	r0, r3
    3596:	4b38      	ldr	r3, [pc, #224]	; (3678 <system_clock_init+0x164>)
    3598:	4798      	blx	r3
    359a:	237c      	movs	r3, #124	; 0x7c
    359c:	18fb      	adds	r3, r7, r3
    359e:	2200      	movs	r2, #0
    35a0:	701a      	strb	r2, [r3, #0]
    35a2:	237c      	movs	r3, #124	; 0x7c
    35a4:	18fb      	adds	r3, r7, r3
    35a6:	2201      	movs	r2, #1
    35a8:	709a      	strb	r2, [r3, #2]
    35aa:	237c      	movs	r3, #124	; 0x7c
    35ac:	18fb      	adds	r3, r7, r3
    35ae:	2200      	movs	r2, #0
    35b0:	705a      	strb	r2, [r3, #1]
    35b2:	237c      	movs	r3, #124	; 0x7c
    35b4:	18fb      	adds	r3, r7, r3
    35b6:	0018      	movs	r0, r3
    35b8:	4b30      	ldr	r3, [pc, #192]	; (367c <system_clock_init+0x168>)
    35ba:	4798      	blx	r3
    35bc:	2006      	movs	r0, #6
    35be:	4b2d      	ldr	r3, [pc, #180]	; (3674 <system_clock_init+0x160>)
    35c0:	4798      	blx	r3
    35c2:	4b2f      	ldr	r3, [pc, #188]	; (3680 <system_clock_init+0x16c>)
    35c4:	4798      	blx	r3
    35c6:	2358      	movs	r3, #88	; 0x58
    35c8:	18fb      	adds	r3, r7, r3
    35ca:	0018      	movs	r0, r3
    35cc:	4b2d      	ldr	r3, [pc, #180]	; (3684 <system_clock_init+0x170>)
    35ce:	4798      	blx	r3
    35d0:	2358      	movs	r3, #88	; 0x58
    35d2:	18fb      	adds	r3, r7, r3
    35d4:	2204      	movs	r2, #4
    35d6:	701a      	strb	r2, [r3, #0]
    35d8:	2358      	movs	r3, #88	; 0x58
    35da:	18fb      	adds	r3, r7, r3
    35dc:	2220      	movs	r2, #32
    35de:	605a      	str	r2, [r3, #4]
    35e0:	2358      	movs	r3, #88	; 0x58
    35e2:	18fb      	adds	r3, r7, r3
    35e4:	2200      	movs	r2, #0
    35e6:	721a      	strb	r2, [r3, #8]
    35e8:	2358      	movs	r3, #88	; 0x58
    35ea:	18fb      	adds	r3, r7, r3
    35ec:	2200      	movs	r2, #0
    35ee:	725a      	strb	r2, [r3, #9]
    35f0:	2358      	movs	r3, #88	; 0x58
    35f2:	18fb      	adds	r3, r7, r3
    35f4:	0019      	movs	r1, r3
    35f6:	2002      	movs	r0, #2
    35f8:	4b23      	ldr	r3, [pc, #140]	; (3688 <system_clock_init+0x174>)
    35fa:	4798      	blx	r3
    35fc:	2002      	movs	r0, #2
    35fe:	4b23      	ldr	r3, [pc, #140]	; (368c <system_clock_init+0x178>)
    3600:	4798      	blx	r3
    3602:	2000      	movs	r0, #0
    3604:	4b22      	ldr	r3, [pc, #136]	; (3690 <system_clock_init+0x17c>)
    3606:	4798      	blx	r3
    3608:	2100      	movs	r1, #0
    360a:	2000      	movs	r0, #0
    360c:	4b21      	ldr	r3, [pc, #132]	; (3694 <system_clock_init+0x180>)
    360e:	4798      	blx	r3
    3610:	2100      	movs	r1, #0
    3612:	2001      	movs	r0, #1
    3614:	4b1f      	ldr	r3, [pc, #124]	; (3694 <system_clock_init+0x180>)
    3616:	4798      	blx	r3
    3618:	2100      	movs	r1, #0
    361a:	2002      	movs	r0, #2
    361c:	4b1d      	ldr	r3, [pc, #116]	; (3694 <system_clock_init+0x180>)
    361e:	4798      	blx	r3
    3620:	1d3b      	adds	r3, r7, #4
    3622:	0018      	movs	r0, r3
    3624:	4b17      	ldr	r3, [pc, #92]	; (3684 <system_clock_init+0x170>)
    3626:	4798      	blx	r3
    3628:	1d3b      	adds	r3, r7, #4
    362a:	2206      	movs	r2, #6
    362c:	701a      	strb	r2, [r3, #0]
    362e:	1d3b      	adds	r3, r7, #4
    3630:	2201      	movs	r2, #1
    3632:	605a      	str	r2, [r3, #4]
    3634:	1d3b      	adds	r3, r7, #4
    3636:	2200      	movs	r2, #0
    3638:	721a      	strb	r2, [r3, #8]
    363a:	1d3b      	adds	r3, r7, #4
    363c:	2200      	movs	r2, #0
    363e:	725a      	strb	r2, [r3, #9]
    3640:	1d3b      	adds	r3, r7, #4
    3642:	0019      	movs	r1, r3
    3644:	2000      	movs	r0, #0
    3646:	4b10      	ldr	r3, [pc, #64]	; (3688 <system_clock_init+0x174>)
    3648:	4798      	blx	r3
    364a:	2000      	movs	r0, #0
    364c:	4b0f      	ldr	r3, [pc, #60]	; (368c <system_clock_init+0x178>)
    364e:	4798      	blx	r3
    3650:	46c0      	nop			; (mov r8, r8)
    3652:	46bd      	mov	sp, r7
    3654:	b022      	add	sp, #136	; 0x88
    3656:	bd80      	pop	{r7, pc}
    3658:	40000800 	.word	0x40000800
    365c:	0000319d 	.word	0x0000319d
    3660:	000034dd 	.word	0x000034dd
    3664:	00806024 	.word	0x00806024
    3668:	ff80ffff 	.word	0xff80ffff
    366c:	000030d1 	.word	0x000030d1
    3670:	00003365 	.word	0x00003365
    3674:	00003431 	.word	0x00003431
    3678:	00003105 	.word	0x00003105
    367c:	000032ed 	.word	0x000032ed
    3680:	0000373d 	.word	0x0000373d
    3684:	000030a1 	.word	0x000030a1
    3688:	0000376d 	.word	0x0000376d
    368c:	00003891 	.word	0x00003891
    3690:	00003129 	.word	0x00003129
    3694:	00003149 	.word	0x00003149

00003698 <system_apb_clock_set_mask>:
    3698:	b580      	push	{r7, lr}
    369a:	b082      	sub	sp, #8
    369c:	af00      	add	r7, sp, #0
    369e:	0002      	movs	r2, r0
    36a0:	6039      	str	r1, [r7, #0]
    36a2:	1dfb      	adds	r3, r7, #7
    36a4:	701a      	strb	r2, [r3, #0]
    36a6:	1dfb      	adds	r3, r7, #7
    36a8:	781b      	ldrb	r3, [r3, #0]
    36aa:	2b01      	cmp	r3, #1
    36ac:	d00a      	beq.n	36c4 <system_apb_clock_set_mask+0x2c>
    36ae:	2b02      	cmp	r3, #2
    36b0:	d00f      	beq.n	36d2 <system_apb_clock_set_mask+0x3a>
    36b2:	2b00      	cmp	r3, #0
    36b4:	d114      	bne.n	36e0 <system_apb_clock_set_mask+0x48>
    36b6:	4b0e      	ldr	r3, [pc, #56]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36b8:	4a0d      	ldr	r2, [pc, #52]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36ba:	6991      	ldr	r1, [r2, #24]
    36bc:	683a      	ldr	r2, [r7, #0]
    36be:	430a      	orrs	r2, r1
    36c0:	619a      	str	r2, [r3, #24]
    36c2:	e00f      	b.n	36e4 <system_apb_clock_set_mask+0x4c>
    36c4:	4b0a      	ldr	r3, [pc, #40]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36c6:	4a0a      	ldr	r2, [pc, #40]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36c8:	69d1      	ldr	r1, [r2, #28]
    36ca:	683a      	ldr	r2, [r7, #0]
    36cc:	430a      	orrs	r2, r1
    36ce:	61da      	str	r2, [r3, #28]
    36d0:	e008      	b.n	36e4 <system_apb_clock_set_mask+0x4c>
    36d2:	4b07      	ldr	r3, [pc, #28]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36d4:	4a06      	ldr	r2, [pc, #24]	; (36f0 <system_apb_clock_set_mask+0x58>)
    36d6:	6a11      	ldr	r1, [r2, #32]
    36d8:	683a      	ldr	r2, [r7, #0]
    36da:	430a      	orrs	r2, r1
    36dc:	621a      	str	r2, [r3, #32]
    36de:	e001      	b.n	36e4 <system_apb_clock_set_mask+0x4c>
    36e0:	2317      	movs	r3, #23
    36e2:	e000      	b.n	36e6 <system_apb_clock_set_mask+0x4e>
    36e4:	2300      	movs	r3, #0
    36e6:	0018      	movs	r0, r3
    36e8:	46bd      	mov	sp, r7
    36ea:	b002      	add	sp, #8
    36ec:	bd80      	pop	{r7, pc}
    36ee:	46c0      	nop			; (mov r8, r8)
    36f0:	40000400 	.word	0x40000400

000036f4 <system_interrupt_enter_critical_section>:
    36f4:	b580      	push	{r7, lr}
    36f6:	af00      	add	r7, sp, #0
    36f8:	4b02      	ldr	r3, [pc, #8]	; (3704 <system_interrupt_enter_critical_section+0x10>)
    36fa:	4798      	blx	r3
    36fc:	46c0      	nop			; (mov r8, r8)
    36fe:	46bd      	mov	sp, r7
    3700:	bd80      	pop	{r7, pc}
    3702:	46c0      	nop			; (mov r8, r8)
    3704:	0000300d 	.word	0x0000300d

00003708 <system_interrupt_leave_critical_section>:
    3708:	b580      	push	{r7, lr}
    370a:	af00      	add	r7, sp, #0
    370c:	4b02      	ldr	r3, [pc, #8]	; (3718 <system_interrupt_leave_critical_section+0x10>)
    370e:	4798      	blx	r3
    3710:	46c0      	nop			; (mov r8, r8)
    3712:	46bd      	mov	sp, r7
    3714:	bd80      	pop	{r7, pc}
    3716:	46c0      	nop			; (mov r8, r8)
    3718:	00003061 	.word	0x00003061

0000371c <system_gclk_is_syncing>:
    371c:	b580      	push	{r7, lr}
    371e:	af00      	add	r7, sp, #0
    3720:	4b05      	ldr	r3, [pc, #20]	; (3738 <system_gclk_is_syncing+0x1c>)
    3722:	785b      	ldrb	r3, [r3, #1]
    3724:	b2db      	uxtb	r3, r3
    3726:	b25b      	sxtb	r3, r3
    3728:	2b00      	cmp	r3, #0
    372a:	da01      	bge.n	3730 <system_gclk_is_syncing+0x14>
    372c:	2301      	movs	r3, #1
    372e:	e000      	b.n	3732 <system_gclk_is_syncing+0x16>
    3730:	2300      	movs	r3, #0
    3732:	0018      	movs	r0, r3
    3734:	46bd      	mov	sp, r7
    3736:	bd80      	pop	{r7, pc}
    3738:	40000c00 	.word	0x40000c00

0000373c <system_gclk_init>:
    373c:	b580      	push	{r7, lr}
    373e:	af00      	add	r7, sp, #0
    3740:	2108      	movs	r1, #8
    3742:	2000      	movs	r0, #0
    3744:	4b07      	ldr	r3, [pc, #28]	; (3764 <system_gclk_init+0x28>)
    3746:	4798      	blx	r3
    3748:	4b07      	ldr	r3, [pc, #28]	; (3768 <system_gclk_init+0x2c>)
    374a:	2201      	movs	r2, #1
    374c:	701a      	strb	r2, [r3, #0]
    374e:	46c0      	nop			; (mov r8, r8)
    3750:	4b05      	ldr	r3, [pc, #20]	; (3768 <system_gclk_init+0x2c>)
    3752:	781b      	ldrb	r3, [r3, #0]
    3754:	b2db      	uxtb	r3, r3
    3756:	001a      	movs	r2, r3
    3758:	2301      	movs	r3, #1
    375a:	4013      	ands	r3, r2
    375c:	d1f8      	bne.n	3750 <system_gclk_init+0x14>
    375e:	46c0      	nop			; (mov r8, r8)
    3760:	46bd      	mov	sp, r7
    3762:	bd80      	pop	{r7, pc}
    3764:	00003699 	.word	0x00003699
    3768:	40000c00 	.word	0x40000c00

0000376c <system_gclk_gen_set_config>:
    376c:	b580      	push	{r7, lr}
    376e:	b086      	sub	sp, #24
    3770:	af00      	add	r7, sp, #0
    3772:	0002      	movs	r2, r0
    3774:	6039      	str	r1, [r7, #0]
    3776:	1dfb      	adds	r3, r7, #7
    3778:	701a      	strb	r2, [r3, #0]
    377a:	1dfb      	adds	r3, r7, #7
    377c:	781b      	ldrb	r3, [r3, #0]
    377e:	617b      	str	r3, [r7, #20]
    3780:	1dfb      	adds	r3, r7, #7
    3782:	781b      	ldrb	r3, [r3, #0]
    3784:	613b      	str	r3, [r7, #16]
    3786:	683b      	ldr	r3, [r7, #0]
    3788:	781b      	ldrb	r3, [r3, #0]
    378a:	021b      	lsls	r3, r3, #8
    378c:	001a      	movs	r2, r3
    378e:	697b      	ldr	r3, [r7, #20]
    3790:	4313      	orrs	r3, r2
    3792:	617b      	str	r3, [r7, #20]
    3794:	683b      	ldr	r3, [r7, #0]
    3796:	785b      	ldrb	r3, [r3, #1]
    3798:	2b00      	cmp	r3, #0
    379a:	d004      	beq.n	37a6 <system_gclk_gen_set_config+0x3a>
    379c:	697b      	ldr	r3, [r7, #20]
    379e:	2280      	movs	r2, #128	; 0x80
    37a0:	02d2      	lsls	r2, r2, #11
    37a2:	4313      	orrs	r3, r2
    37a4:	617b      	str	r3, [r7, #20]
    37a6:	683b      	ldr	r3, [r7, #0]
    37a8:	7a5b      	ldrb	r3, [r3, #9]
    37aa:	2b00      	cmp	r3, #0
    37ac:	d004      	beq.n	37b8 <system_gclk_gen_set_config+0x4c>
    37ae:	697b      	ldr	r3, [r7, #20]
    37b0:	2280      	movs	r2, #128	; 0x80
    37b2:	0312      	lsls	r2, r2, #12
    37b4:	4313      	orrs	r3, r2
    37b6:	617b      	str	r3, [r7, #20]
    37b8:	683b      	ldr	r3, [r7, #0]
    37ba:	685b      	ldr	r3, [r3, #4]
    37bc:	2b01      	cmp	r3, #1
    37be:	d92c      	bls.n	381a <system_gclk_gen_set_config+0xae>
    37c0:	683b      	ldr	r3, [r7, #0]
    37c2:	685a      	ldr	r2, [r3, #4]
    37c4:	683b      	ldr	r3, [r7, #0]
    37c6:	685b      	ldr	r3, [r3, #4]
    37c8:	3b01      	subs	r3, #1
    37ca:	4013      	ands	r3, r2
    37cc:	d11a      	bne.n	3804 <system_gclk_gen_set_config+0x98>
    37ce:	2300      	movs	r3, #0
    37d0:	60fb      	str	r3, [r7, #12]
    37d2:	2302      	movs	r3, #2
    37d4:	60bb      	str	r3, [r7, #8]
    37d6:	e005      	b.n	37e4 <system_gclk_gen_set_config+0x78>
    37d8:	68fb      	ldr	r3, [r7, #12]
    37da:	3301      	adds	r3, #1
    37dc:	60fb      	str	r3, [r7, #12]
    37de:	68bb      	ldr	r3, [r7, #8]
    37e0:	005b      	lsls	r3, r3, #1
    37e2:	60bb      	str	r3, [r7, #8]
    37e4:	683b      	ldr	r3, [r7, #0]
    37e6:	685a      	ldr	r2, [r3, #4]
    37e8:	68bb      	ldr	r3, [r7, #8]
    37ea:	429a      	cmp	r2, r3
    37ec:	d8f4      	bhi.n	37d8 <system_gclk_gen_set_config+0x6c>
    37ee:	68fb      	ldr	r3, [r7, #12]
    37f0:	021b      	lsls	r3, r3, #8
    37f2:	693a      	ldr	r2, [r7, #16]
    37f4:	4313      	orrs	r3, r2
    37f6:	613b      	str	r3, [r7, #16]
    37f8:	697b      	ldr	r3, [r7, #20]
    37fa:	2280      	movs	r2, #128	; 0x80
    37fc:	0352      	lsls	r2, r2, #13
    37fe:	4313      	orrs	r3, r2
    3800:	617b      	str	r3, [r7, #20]
    3802:	e00a      	b.n	381a <system_gclk_gen_set_config+0xae>
    3804:	683b      	ldr	r3, [r7, #0]
    3806:	685b      	ldr	r3, [r3, #4]
    3808:	021b      	lsls	r3, r3, #8
    380a:	693a      	ldr	r2, [r7, #16]
    380c:	4313      	orrs	r3, r2
    380e:	613b      	str	r3, [r7, #16]
    3810:	697b      	ldr	r3, [r7, #20]
    3812:	2280      	movs	r2, #128	; 0x80
    3814:	0292      	lsls	r2, r2, #10
    3816:	4313      	orrs	r3, r2
    3818:	617b      	str	r3, [r7, #20]
    381a:	683b      	ldr	r3, [r7, #0]
    381c:	7a1b      	ldrb	r3, [r3, #8]
    381e:	2b00      	cmp	r3, #0
    3820:	d004      	beq.n	382c <system_gclk_gen_set_config+0xc0>
    3822:	697b      	ldr	r3, [r7, #20]
    3824:	2280      	movs	r2, #128	; 0x80
    3826:	0392      	lsls	r2, r2, #14
    3828:	4313      	orrs	r3, r2
    382a:	617b      	str	r3, [r7, #20]
    382c:	46c0      	nop			; (mov r8, r8)
    382e:	4b13      	ldr	r3, [pc, #76]	; (387c <system_gclk_gen_set_config+0x110>)
    3830:	4798      	blx	r3
    3832:	1e03      	subs	r3, r0, #0
    3834:	d1fb      	bne.n	382e <system_gclk_gen_set_config+0xc2>
    3836:	4b12      	ldr	r3, [pc, #72]	; (3880 <system_gclk_gen_set_config+0x114>)
    3838:	4798      	blx	r3
    383a:	4a12      	ldr	r2, [pc, #72]	; (3884 <system_gclk_gen_set_config+0x118>)
    383c:	1dfb      	adds	r3, r7, #7
    383e:	781b      	ldrb	r3, [r3, #0]
    3840:	7013      	strb	r3, [r2, #0]
    3842:	46c0      	nop			; (mov r8, r8)
    3844:	4b0d      	ldr	r3, [pc, #52]	; (387c <system_gclk_gen_set_config+0x110>)
    3846:	4798      	blx	r3
    3848:	1e03      	subs	r3, r0, #0
    384a:	d1fb      	bne.n	3844 <system_gclk_gen_set_config+0xd8>
    384c:	4b0e      	ldr	r3, [pc, #56]	; (3888 <system_gclk_gen_set_config+0x11c>)
    384e:	693a      	ldr	r2, [r7, #16]
    3850:	609a      	str	r2, [r3, #8]
    3852:	46c0      	nop			; (mov r8, r8)
    3854:	4b09      	ldr	r3, [pc, #36]	; (387c <system_gclk_gen_set_config+0x110>)
    3856:	4798      	blx	r3
    3858:	1e03      	subs	r3, r0, #0
    385a:	d1fb      	bne.n	3854 <system_gclk_gen_set_config+0xe8>
    385c:	4b0a      	ldr	r3, [pc, #40]	; (3888 <system_gclk_gen_set_config+0x11c>)
    385e:	4a0a      	ldr	r2, [pc, #40]	; (3888 <system_gclk_gen_set_config+0x11c>)
    3860:	6851      	ldr	r1, [r2, #4]
    3862:	2280      	movs	r2, #128	; 0x80
    3864:	0252      	lsls	r2, r2, #9
    3866:	4011      	ands	r1, r2
    3868:	697a      	ldr	r2, [r7, #20]
    386a:	430a      	orrs	r2, r1
    386c:	605a      	str	r2, [r3, #4]
    386e:	4b07      	ldr	r3, [pc, #28]	; (388c <system_gclk_gen_set_config+0x120>)
    3870:	4798      	blx	r3
    3872:	46c0      	nop			; (mov r8, r8)
    3874:	46bd      	mov	sp, r7
    3876:	b006      	add	sp, #24
    3878:	bd80      	pop	{r7, pc}
    387a:	46c0      	nop			; (mov r8, r8)
    387c:	0000371d 	.word	0x0000371d
    3880:	000036f5 	.word	0x000036f5
    3884:	40000c08 	.word	0x40000c08
    3888:	40000c00 	.word	0x40000c00
    388c:	00003709 	.word	0x00003709

00003890 <system_gclk_gen_enable>:
    3890:	b580      	push	{r7, lr}
    3892:	b082      	sub	sp, #8
    3894:	af00      	add	r7, sp, #0
    3896:	0002      	movs	r2, r0
    3898:	1dfb      	adds	r3, r7, #7
    389a:	701a      	strb	r2, [r3, #0]
    389c:	46c0      	nop			; (mov r8, r8)
    389e:	4b0e      	ldr	r3, [pc, #56]	; (38d8 <system_gclk_gen_enable+0x48>)
    38a0:	4798      	blx	r3
    38a2:	1e03      	subs	r3, r0, #0
    38a4:	d1fb      	bne.n	389e <system_gclk_gen_enable+0xe>
    38a6:	4b0d      	ldr	r3, [pc, #52]	; (38dc <system_gclk_gen_enable+0x4c>)
    38a8:	4798      	blx	r3
    38aa:	4a0d      	ldr	r2, [pc, #52]	; (38e0 <system_gclk_gen_enable+0x50>)
    38ac:	1dfb      	adds	r3, r7, #7
    38ae:	781b      	ldrb	r3, [r3, #0]
    38b0:	7013      	strb	r3, [r2, #0]
    38b2:	46c0      	nop			; (mov r8, r8)
    38b4:	4b08      	ldr	r3, [pc, #32]	; (38d8 <system_gclk_gen_enable+0x48>)
    38b6:	4798      	blx	r3
    38b8:	1e03      	subs	r3, r0, #0
    38ba:	d1fb      	bne.n	38b4 <system_gclk_gen_enable+0x24>
    38bc:	4b09      	ldr	r3, [pc, #36]	; (38e4 <system_gclk_gen_enable+0x54>)
    38be:	4a09      	ldr	r2, [pc, #36]	; (38e4 <system_gclk_gen_enable+0x54>)
    38c0:	6852      	ldr	r2, [r2, #4]
    38c2:	2180      	movs	r1, #128	; 0x80
    38c4:	0249      	lsls	r1, r1, #9
    38c6:	430a      	orrs	r2, r1
    38c8:	605a      	str	r2, [r3, #4]
    38ca:	4b07      	ldr	r3, [pc, #28]	; (38e8 <system_gclk_gen_enable+0x58>)
    38cc:	4798      	blx	r3
    38ce:	46c0      	nop			; (mov r8, r8)
    38d0:	46bd      	mov	sp, r7
    38d2:	b002      	add	sp, #8
    38d4:	bd80      	pop	{r7, pc}
    38d6:	46c0      	nop			; (mov r8, r8)
    38d8:	0000371d 	.word	0x0000371d
    38dc:	000036f5 	.word	0x000036f5
    38e0:	40000c04 	.word	0x40000c04
    38e4:	40000c00 	.word	0x40000c00
    38e8:	00003709 	.word	0x00003709

000038ec <system_gclk_gen_get_hz>:
    38ec:	b580      	push	{r7, lr}
    38ee:	b086      	sub	sp, #24
    38f0:	af00      	add	r7, sp, #0
    38f2:	0002      	movs	r2, r0
    38f4:	1dfb      	adds	r3, r7, #7
    38f6:	701a      	strb	r2, [r3, #0]
    38f8:	46c0      	nop			; (mov r8, r8)
    38fa:	4b2a      	ldr	r3, [pc, #168]	; (39a4 <system_gclk_gen_get_hz+0xb8>)
    38fc:	4798      	blx	r3
    38fe:	1e03      	subs	r3, r0, #0
    3900:	d1fb      	bne.n	38fa <system_gclk_gen_get_hz+0xe>
    3902:	4b29      	ldr	r3, [pc, #164]	; (39a8 <system_gclk_gen_get_hz+0xbc>)
    3904:	4798      	blx	r3
    3906:	4a29      	ldr	r2, [pc, #164]	; (39ac <system_gclk_gen_get_hz+0xc0>)
    3908:	1dfb      	adds	r3, r7, #7
    390a:	781b      	ldrb	r3, [r3, #0]
    390c:	7013      	strb	r3, [r2, #0]
    390e:	46c0      	nop			; (mov r8, r8)
    3910:	4b24      	ldr	r3, [pc, #144]	; (39a4 <system_gclk_gen_get_hz+0xb8>)
    3912:	4798      	blx	r3
    3914:	1e03      	subs	r3, r0, #0
    3916:	d1fb      	bne.n	3910 <system_gclk_gen_get_hz+0x24>
    3918:	4b25      	ldr	r3, [pc, #148]	; (39b0 <system_gclk_gen_get_hz+0xc4>)
    391a:	685b      	ldr	r3, [r3, #4]
    391c:	04db      	lsls	r3, r3, #19
    391e:	0edb      	lsrs	r3, r3, #27
    3920:	b2db      	uxtb	r3, r3
    3922:	0018      	movs	r0, r3
    3924:	4b23      	ldr	r3, [pc, #140]	; (39b4 <system_gclk_gen_get_hz+0xc8>)
    3926:	4798      	blx	r3
    3928:	0003      	movs	r3, r0
    392a:	617b      	str	r3, [r7, #20]
    392c:	4a1f      	ldr	r2, [pc, #124]	; (39ac <system_gclk_gen_get_hz+0xc0>)
    392e:	1dfb      	adds	r3, r7, #7
    3930:	781b      	ldrb	r3, [r3, #0]
    3932:	7013      	strb	r3, [r2, #0]
    3934:	4b1e      	ldr	r3, [pc, #120]	; (39b0 <system_gclk_gen_get_hz+0xc4>)
    3936:	685b      	ldr	r3, [r3, #4]
    3938:	02db      	lsls	r3, r3, #11
    393a:	0fdb      	lsrs	r3, r3, #31
    393c:	b2da      	uxtb	r2, r3
    393e:	2313      	movs	r3, #19
    3940:	18fb      	adds	r3, r7, r3
    3942:	701a      	strb	r2, [r3, #0]
    3944:	4a1c      	ldr	r2, [pc, #112]	; (39b8 <system_gclk_gen_get_hz+0xcc>)
    3946:	1dfb      	adds	r3, r7, #7
    3948:	781b      	ldrb	r3, [r3, #0]
    394a:	7013      	strb	r3, [r2, #0]
    394c:	46c0      	nop			; (mov r8, r8)
    394e:	4b15      	ldr	r3, [pc, #84]	; (39a4 <system_gclk_gen_get_hz+0xb8>)
    3950:	4798      	blx	r3
    3952:	1e03      	subs	r3, r0, #0
    3954:	d1fb      	bne.n	394e <system_gclk_gen_get_hz+0x62>
    3956:	4b16      	ldr	r3, [pc, #88]	; (39b0 <system_gclk_gen_get_hz+0xc4>)
    3958:	689b      	ldr	r3, [r3, #8]
    395a:	021b      	lsls	r3, r3, #8
    395c:	0c1b      	lsrs	r3, r3, #16
    395e:	b29b      	uxth	r3, r3
    3960:	60fb      	str	r3, [r7, #12]
    3962:	4b16      	ldr	r3, [pc, #88]	; (39bc <system_gclk_gen_get_hz+0xd0>)
    3964:	4798      	blx	r3
    3966:	2313      	movs	r3, #19
    3968:	18fb      	adds	r3, r7, r3
    396a:	781b      	ldrb	r3, [r3, #0]
    396c:	2b00      	cmp	r3, #0
    396e:	d109      	bne.n	3984 <system_gclk_gen_get_hz+0x98>
    3970:	68fb      	ldr	r3, [r7, #12]
    3972:	2b01      	cmp	r3, #1
    3974:	d906      	bls.n	3984 <system_gclk_gen_get_hz+0x98>
    3976:	4b12      	ldr	r3, [pc, #72]	; (39c0 <system_gclk_gen_get_hz+0xd4>)
    3978:	68f9      	ldr	r1, [r7, #12]
    397a:	6978      	ldr	r0, [r7, #20]
    397c:	4798      	blx	r3
    397e:	0003      	movs	r3, r0
    3980:	617b      	str	r3, [r7, #20]
    3982:	e00a      	b.n	399a <system_gclk_gen_get_hz+0xae>
    3984:	2313      	movs	r3, #19
    3986:	18fb      	adds	r3, r7, r3
    3988:	781b      	ldrb	r3, [r3, #0]
    398a:	2b00      	cmp	r3, #0
    398c:	d005      	beq.n	399a <system_gclk_gen_get_hz+0xae>
    398e:	68fb      	ldr	r3, [r7, #12]
    3990:	3301      	adds	r3, #1
    3992:	697a      	ldr	r2, [r7, #20]
    3994:	40da      	lsrs	r2, r3
    3996:	0013      	movs	r3, r2
    3998:	617b      	str	r3, [r7, #20]
    399a:	697b      	ldr	r3, [r7, #20]
    399c:	0018      	movs	r0, r3
    399e:	46bd      	mov	sp, r7
    39a0:	b006      	add	sp, #24
    39a2:	bd80      	pop	{r7, pc}
    39a4:	0000371d 	.word	0x0000371d
    39a8:	000036f5 	.word	0x000036f5
    39ac:	40000c04 	.word	0x40000c04
    39b0:	40000c00 	.word	0x40000c00
    39b4:	00003231 	.word	0x00003231
    39b8:	40000c08 	.word	0x40000c08
    39bc:	00003709 	.word	0x00003709
    39c0:	0000561d 	.word	0x0000561d

000039c4 <system_gclk_chan_set_config>:
    39c4:	b580      	push	{r7, lr}
    39c6:	b084      	sub	sp, #16
    39c8:	af00      	add	r7, sp, #0
    39ca:	0002      	movs	r2, r0
    39cc:	6039      	str	r1, [r7, #0]
    39ce:	1dfb      	adds	r3, r7, #7
    39d0:	701a      	strb	r2, [r3, #0]
    39d2:	1dfb      	adds	r3, r7, #7
    39d4:	781b      	ldrb	r3, [r3, #0]
    39d6:	60fb      	str	r3, [r7, #12]
    39d8:	683b      	ldr	r3, [r7, #0]
    39da:	781b      	ldrb	r3, [r3, #0]
    39dc:	021b      	lsls	r3, r3, #8
    39de:	001a      	movs	r2, r3
    39e0:	68fb      	ldr	r3, [r7, #12]
    39e2:	4313      	orrs	r3, r2
    39e4:	60fb      	str	r3, [r7, #12]
    39e6:	1dfb      	adds	r3, r7, #7
    39e8:	781b      	ldrb	r3, [r3, #0]
    39ea:	0018      	movs	r0, r3
    39ec:	4b04      	ldr	r3, [pc, #16]	; (3a00 <system_gclk_chan_set_config+0x3c>)
    39ee:	4798      	blx	r3
    39f0:	4b04      	ldr	r3, [pc, #16]	; (3a04 <system_gclk_chan_set_config+0x40>)
    39f2:	68fa      	ldr	r2, [r7, #12]
    39f4:	b292      	uxth	r2, r2
    39f6:	805a      	strh	r2, [r3, #2]
    39f8:	46c0      	nop			; (mov r8, r8)
    39fa:	46bd      	mov	sp, r7
    39fc:	b004      	add	sp, #16
    39fe:	bd80      	pop	{r7, pc}
    3a00:	00003a51 	.word	0x00003a51
    3a04:	40000c00 	.word	0x40000c00

00003a08 <system_gclk_chan_enable>:
    3a08:	b580      	push	{r7, lr}
    3a0a:	b082      	sub	sp, #8
    3a0c:	af00      	add	r7, sp, #0
    3a0e:	0002      	movs	r2, r0
    3a10:	1dfb      	adds	r3, r7, #7
    3a12:	701a      	strb	r2, [r3, #0]
    3a14:	4b0a      	ldr	r3, [pc, #40]	; (3a40 <system_gclk_chan_enable+0x38>)
    3a16:	4798      	blx	r3
    3a18:	4a0a      	ldr	r2, [pc, #40]	; (3a44 <system_gclk_chan_enable+0x3c>)
    3a1a:	1dfb      	adds	r3, r7, #7
    3a1c:	781b      	ldrb	r3, [r3, #0]
    3a1e:	7013      	strb	r3, [r2, #0]
    3a20:	4909      	ldr	r1, [pc, #36]	; (3a48 <system_gclk_chan_enable+0x40>)
    3a22:	4b09      	ldr	r3, [pc, #36]	; (3a48 <system_gclk_chan_enable+0x40>)
    3a24:	885b      	ldrh	r3, [r3, #2]
    3a26:	b29b      	uxth	r3, r3
    3a28:	2280      	movs	r2, #128	; 0x80
    3a2a:	01d2      	lsls	r2, r2, #7
    3a2c:	4313      	orrs	r3, r2
    3a2e:	b29b      	uxth	r3, r3
    3a30:	804b      	strh	r3, [r1, #2]
    3a32:	4b06      	ldr	r3, [pc, #24]	; (3a4c <system_gclk_chan_enable+0x44>)
    3a34:	4798      	blx	r3
    3a36:	46c0      	nop			; (mov r8, r8)
    3a38:	46bd      	mov	sp, r7
    3a3a:	b002      	add	sp, #8
    3a3c:	bd80      	pop	{r7, pc}
    3a3e:	46c0      	nop			; (mov r8, r8)
    3a40:	000036f5 	.word	0x000036f5
    3a44:	40000c02 	.word	0x40000c02
    3a48:	40000c00 	.word	0x40000c00
    3a4c:	00003709 	.word	0x00003709

00003a50 <system_gclk_chan_disable>:
    3a50:	b580      	push	{r7, lr}
    3a52:	b084      	sub	sp, #16
    3a54:	af00      	add	r7, sp, #0
    3a56:	0002      	movs	r2, r0
    3a58:	1dfb      	adds	r3, r7, #7
    3a5a:	701a      	strb	r2, [r3, #0]
    3a5c:	4b1c      	ldr	r3, [pc, #112]	; (3ad0 <system_gclk_chan_disable+0x80>)
    3a5e:	4798      	blx	r3
    3a60:	4a1c      	ldr	r2, [pc, #112]	; (3ad4 <system_gclk_chan_disable+0x84>)
    3a62:	1dfb      	adds	r3, r7, #7
    3a64:	781b      	ldrb	r3, [r3, #0]
    3a66:	7013      	strb	r3, [r2, #0]
    3a68:	4b1b      	ldr	r3, [pc, #108]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3a6a:	885b      	ldrh	r3, [r3, #2]
    3a6c:	051b      	lsls	r3, r3, #20
    3a6e:	0f1b      	lsrs	r3, r3, #28
    3a70:	b2db      	uxtb	r3, r3
    3a72:	60fb      	str	r3, [r7, #12]
    3a74:	4a18      	ldr	r2, [pc, #96]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3a76:	8853      	ldrh	r3, [r2, #2]
    3a78:	4918      	ldr	r1, [pc, #96]	; (3adc <system_gclk_chan_disable+0x8c>)
    3a7a:	400b      	ands	r3, r1
    3a7c:	8053      	strh	r3, [r2, #2]
    3a7e:	4a16      	ldr	r2, [pc, #88]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3a80:	4b15      	ldr	r3, [pc, #84]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3a82:	885b      	ldrh	r3, [r3, #2]
    3a84:	b29b      	uxth	r3, r3
    3a86:	4916      	ldr	r1, [pc, #88]	; (3ae0 <system_gclk_chan_disable+0x90>)
    3a88:	400b      	ands	r3, r1
    3a8a:	b29b      	uxth	r3, r3
    3a8c:	8053      	strh	r3, [r2, #2]
    3a8e:	46c0      	nop			; (mov r8, r8)
    3a90:	4b11      	ldr	r3, [pc, #68]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3a92:	885b      	ldrh	r3, [r3, #2]
    3a94:	b29b      	uxth	r3, r3
    3a96:	001a      	movs	r2, r3
    3a98:	2380      	movs	r3, #128	; 0x80
    3a9a:	01db      	lsls	r3, r3, #7
    3a9c:	4013      	ands	r3, r2
    3a9e:	d1f7      	bne.n	3a90 <system_gclk_chan_disable+0x40>
    3aa0:	4a0d      	ldr	r2, [pc, #52]	; (3ad8 <system_gclk_chan_disable+0x88>)
    3aa2:	68fb      	ldr	r3, [r7, #12]
    3aa4:	b2db      	uxtb	r3, r3
    3aa6:	1c19      	adds	r1, r3, #0
    3aa8:	230f      	movs	r3, #15
    3aaa:	400b      	ands	r3, r1
    3aac:	b2d9      	uxtb	r1, r3
    3aae:	8853      	ldrh	r3, [r2, #2]
    3ab0:	1c08      	adds	r0, r1, #0
    3ab2:	210f      	movs	r1, #15
    3ab4:	4001      	ands	r1, r0
    3ab6:	0208      	lsls	r0, r1, #8
    3ab8:	4908      	ldr	r1, [pc, #32]	; (3adc <system_gclk_chan_disable+0x8c>)
    3aba:	400b      	ands	r3, r1
    3abc:	1c19      	adds	r1, r3, #0
    3abe:	1c03      	adds	r3, r0, #0
    3ac0:	430b      	orrs	r3, r1
    3ac2:	8053      	strh	r3, [r2, #2]
    3ac4:	4b07      	ldr	r3, [pc, #28]	; (3ae4 <system_gclk_chan_disable+0x94>)
    3ac6:	4798      	blx	r3
    3ac8:	46c0      	nop			; (mov r8, r8)
    3aca:	46bd      	mov	sp, r7
    3acc:	b004      	add	sp, #16
    3ace:	bd80      	pop	{r7, pc}
    3ad0:	000036f5 	.word	0x000036f5
    3ad4:	40000c02 	.word	0x40000c02
    3ad8:	40000c00 	.word	0x40000c00
    3adc:	fffff0ff 	.word	0xfffff0ff
    3ae0:	ffffbfff 	.word	0xffffbfff
    3ae4:	00003709 	.word	0x00003709

00003ae8 <system_gclk_chan_get_hz>:
    3ae8:	b580      	push	{r7, lr}
    3aea:	b084      	sub	sp, #16
    3aec:	af00      	add	r7, sp, #0
    3aee:	0002      	movs	r2, r0
    3af0:	1dfb      	adds	r3, r7, #7
    3af2:	701a      	strb	r2, [r3, #0]
    3af4:	4b0d      	ldr	r3, [pc, #52]	; (3b2c <system_gclk_chan_get_hz+0x44>)
    3af6:	4798      	blx	r3
    3af8:	4a0d      	ldr	r2, [pc, #52]	; (3b30 <system_gclk_chan_get_hz+0x48>)
    3afa:	1dfb      	adds	r3, r7, #7
    3afc:	781b      	ldrb	r3, [r3, #0]
    3afe:	7013      	strb	r3, [r2, #0]
    3b00:	4b0c      	ldr	r3, [pc, #48]	; (3b34 <system_gclk_chan_get_hz+0x4c>)
    3b02:	885b      	ldrh	r3, [r3, #2]
    3b04:	051b      	lsls	r3, r3, #20
    3b06:	0f1b      	lsrs	r3, r3, #28
    3b08:	b2da      	uxtb	r2, r3
    3b0a:	230f      	movs	r3, #15
    3b0c:	18fb      	adds	r3, r7, r3
    3b0e:	701a      	strb	r2, [r3, #0]
    3b10:	4b09      	ldr	r3, [pc, #36]	; (3b38 <system_gclk_chan_get_hz+0x50>)
    3b12:	4798      	blx	r3
    3b14:	230f      	movs	r3, #15
    3b16:	18fb      	adds	r3, r7, r3
    3b18:	781b      	ldrb	r3, [r3, #0]
    3b1a:	0018      	movs	r0, r3
    3b1c:	4b07      	ldr	r3, [pc, #28]	; (3b3c <system_gclk_chan_get_hz+0x54>)
    3b1e:	4798      	blx	r3
    3b20:	0003      	movs	r3, r0
    3b22:	0018      	movs	r0, r3
    3b24:	46bd      	mov	sp, r7
    3b26:	b004      	add	sp, #16
    3b28:	bd80      	pop	{r7, pc}
    3b2a:	46c0      	nop			; (mov r8, r8)
    3b2c:	000036f5 	.word	0x000036f5
    3b30:	40000c02 	.word	0x40000c02
    3b34:	40000c00 	.word	0x40000c00
    3b38:	00003709 	.word	0x00003709
    3b3c:	000038ed 	.word	0x000038ed

00003b40 <system_pinmux_get_group_from_gpio_pin>:
    3b40:	b580      	push	{r7, lr}
    3b42:	b084      	sub	sp, #16
    3b44:	af00      	add	r7, sp, #0
    3b46:	0002      	movs	r2, r0
    3b48:	1dfb      	adds	r3, r7, #7
    3b4a:	701a      	strb	r2, [r3, #0]
    3b4c:	230f      	movs	r3, #15
    3b4e:	18fb      	adds	r3, r7, r3
    3b50:	1dfa      	adds	r2, r7, #7
    3b52:	7812      	ldrb	r2, [r2, #0]
    3b54:	09d2      	lsrs	r2, r2, #7
    3b56:	701a      	strb	r2, [r3, #0]
    3b58:	230e      	movs	r3, #14
    3b5a:	18fb      	adds	r3, r7, r3
    3b5c:	1dfa      	adds	r2, r7, #7
    3b5e:	7812      	ldrb	r2, [r2, #0]
    3b60:	0952      	lsrs	r2, r2, #5
    3b62:	701a      	strb	r2, [r3, #0]
    3b64:	4b0d      	ldr	r3, [pc, #52]	; (3b9c <system_pinmux_get_group_from_gpio_pin+0x5c>)
    3b66:	60bb      	str	r3, [r7, #8]
    3b68:	230f      	movs	r3, #15
    3b6a:	18fb      	adds	r3, r7, r3
    3b6c:	781b      	ldrb	r3, [r3, #0]
    3b6e:	2b00      	cmp	r3, #0
    3b70:	d10f      	bne.n	3b92 <system_pinmux_get_group_from_gpio_pin+0x52>
    3b72:	230f      	movs	r3, #15
    3b74:	18fb      	adds	r3, r7, r3
    3b76:	781b      	ldrb	r3, [r3, #0]
    3b78:	009b      	lsls	r3, r3, #2
    3b7a:	2210      	movs	r2, #16
    3b7c:	4694      	mov	ip, r2
    3b7e:	44bc      	add	ip, r7
    3b80:	4463      	add	r3, ip
    3b82:	3b08      	subs	r3, #8
    3b84:	681a      	ldr	r2, [r3, #0]
    3b86:	230e      	movs	r3, #14
    3b88:	18fb      	adds	r3, r7, r3
    3b8a:	781b      	ldrb	r3, [r3, #0]
    3b8c:	01db      	lsls	r3, r3, #7
    3b8e:	18d3      	adds	r3, r2, r3
    3b90:	e000      	b.n	3b94 <system_pinmux_get_group_from_gpio_pin+0x54>
    3b92:	2300      	movs	r3, #0
    3b94:	0018      	movs	r0, r3
    3b96:	46bd      	mov	sp, r7
    3b98:	b004      	add	sp, #16
    3b9a:	bd80      	pop	{r7, pc}
    3b9c:	41004400 	.word	0x41004400

00003ba0 <_system_pinmux_config>:
    3ba0:	b580      	push	{r7, lr}
    3ba2:	b088      	sub	sp, #32
    3ba4:	af00      	add	r7, sp, #0
    3ba6:	60f8      	str	r0, [r7, #12]
    3ba8:	60b9      	str	r1, [r7, #8]
    3baa:	607a      	str	r2, [r7, #4]
    3bac:	2300      	movs	r3, #0
    3bae:	61fb      	str	r3, [r7, #28]
    3bb0:	687b      	ldr	r3, [r7, #4]
    3bb2:	78db      	ldrb	r3, [r3, #3]
    3bb4:	2201      	movs	r2, #1
    3bb6:	4053      	eors	r3, r2
    3bb8:	b2db      	uxtb	r3, r3
    3bba:	2b00      	cmp	r3, #0
    3bbc:	d035      	beq.n	3c2a <_system_pinmux_config+0x8a>
    3bbe:	687b      	ldr	r3, [r7, #4]
    3bc0:	781b      	ldrb	r3, [r3, #0]
    3bc2:	2b80      	cmp	r3, #128	; 0x80
    3bc4:	d00b      	beq.n	3bde <_system_pinmux_config+0x3e>
    3bc6:	69fb      	ldr	r3, [r7, #28]
    3bc8:	2280      	movs	r2, #128	; 0x80
    3bca:	0252      	lsls	r2, r2, #9
    3bcc:	4313      	orrs	r3, r2
    3bce:	61fb      	str	r3, [r7, #28]
    3bd0:	687b      	ldr	r3, [r7, #4]
    3bd2:	781b      	ldrb	r3, [r3, #0]
    3bd4:	061b      	lsls	r3, r3, #24
    3bd6:	001a      	movs	r2, r3
    3bd8:	69fb      	ldr	r3, [r7, #28]
    3bda:	4313      	orrs	r3, r2
    3bdc:	61fb      	str	r3, [r7, #28]
    3bde:	687b      	ldr	r3, [r7, #4]
    3be0:	785b      	ldrb	r3, [r3, #1]
    3be2:	2b00      	cmp	r3, #0
    3be4:	d003      	beq.n	3bee <_system_pinmux_config+0x4e>
    3be6:	687b      	ldr	r3, [r7, #4]
    3be8:	785b      	ldrb	r3, [r3, #1]
    3bea:	2b02      	cmp	r3, #2
    3bec:	d110      	bne.n	3c10 <_system_pinmux_config+0x70>
    3bee:	69fb      	ldr	r3, [r7, #28]
    3bf0:	2280      	movs	r2, #128	; 0x80
    3bf2:	0292      	lsls	r2, r2, #10
    3bf4:	4313      	orrs	r3, r2
    3bf6:	61fb      	str	r3, [r7, #28]
    3bf8:	687b      	ldr	r3, [r7, #4]
    3bfa:	789b      	ldrb	r3, [r3, #2]
    3bfc:	2b00      	cmp	r3, #0
    3bfe:	d004      	beq.n	3c0a <_system_pinmux_config+0x6a>
    3c00:	69fb      	ldr	r3, [r7, #28]
    3c02:	2280      	movs	r2, #128	; 0x80
    3c04:	02d2      	lsls	r2, r2, #11
    3c06:	4313      	orrs	r3, r2
    3c08:	61fb      	str	r3, [r7, #28]
    3c0a:	68fb      	ldr	r3, [r7, #12]
    3c0c:	68ba      	ldr	r2, [r7, #8]
    3c0e:	605a      	str	r2, [r3, #4]
    3c10:	687b      	ldr	r3, [r7, #4]
    3c12:	785b      	ldrb	r3, [r3, #1]
    3c14:	2b01      	cmp	r3, #1
    3c16:	d003      	beq.n	3c20 <_system_pinmux_config+0x80>
    3c18:	687b      	ldr	r3, [r7, #4]
    3c1a:	785b      	ldrb	r3, [r3, #1]
    3c1c:	2b02      	cmp	r3, #2
    3c1e:	d107      	bne.n	3c30 <_system_pinmux_config+0x90>
    3c20:	69fb      	ldr	r3, [r7, #28]
    3c22:	4a22      	ldr	r2, [pc, #136]	; (3cac <_system_pinmux_config+0x10c>)
    3c24:	4013      	ands	r3, r2
    3c26:	61fb      	str	r3, [r7, #28]
    3c28:	e002      	b.n	3c30 <_system_pinmux_config+0x90>
    3c2a:	68fb      	ldr	r3, [r7, #12]
    3c2c:	68ba      	ldr	r2, [r7, #8]
    3c2e:	605a      	str	r2, [r3, #4]
    3c30:	68bb      	ldr	r3, [r7, #8]
    3c32:	041b      	lsls	r3, r3, #16
    3c34:	0c1b      	lsrs	r3, r3, #16
    3c36:	61bb      	str	r3, [r7, #24]
    3c38:	68bb      	ldr	r3, [r7, #8]
    3c3a:	0c1b      	lsrs	r3, r3, #16
    3c3c:	617b      	str	r3, [r7, #20]
    3c3e:	69ba      	ldr	r2, [r7, #24]
    3c40:	69fb      	ldr	r3, [r7, #28]
    3c42:	4313      	orrs	r3, r2
    3c44:	22a0      	movs	r2, #160	; 0xa0
    3c46:	05d2      	lsls	r2, r2, #23
    3c48:	431a      	orrs	r2, r3
    3c4a:	68fb      	ldr	r3, [r7, #12]
    3c4c:	629a      	str	r2, [r3, #40]	; 0x28
    3c4e:	697a      	ldr	r2, [r7, #20]
    3c50:	69fb      	ldr	r3, [r7, #28]
    3c52:	4313      	orrs	r3, r2
    3c54:	22d0      	movs	r2, #208	; 0xd0
    3c56:	0612      	lsls	r2, r2, #24
    3c58:	431a      	orrs	r2, r3
    3c5a:	68fb      	ldr	r3, [r7, #12]
    3c5c:	629a      	str	r2, [r3, #40]	; 0x28
    3c5e:	687b      	ldr	r3, [r7, #4]
    3c60:	78db      	ldrb	r3, [r3, #3]
    3c62:	2201      	movs	r2, #1
    3c64:	4053      	eors	r3, r2
    3c66:	b2db      	uxtb	r3, r3
    3c68:	2b00      	cmp	r3, #0
    3c6a:	d01a      	beq.n	3ca2 <_system_pinmux_config+0x102>
    3c6c:	69fa      	ldr	r2, [r7, #28]
    3c6e:	2380      	movs	r3, #128	; 0x80
    3c70:	02db      	lsls	r3, r3, #11
    3c72:	4013      	ands	r3, r2
    3c74:	d00a      	beq.n	3c8c <_system_pinmux_config+0xec>
    3c76:	687b      	ldr	r3, [r7, #4]
    3c78:	789b      	ldrb	r3, [r3, #2]
    3c7a:	2b01      	cmp	r3, #1
    3c7c:	d103      	bne.n	3c86 <_system_pinmux_config+0xe6>
    3c7e:	68fb      	ldr	r3, [r7, #12]
    3c80:	68ba      	ldr	r2, [r7, #8]
    3c82:	619a      	str	r2, [r3, #24]
    3c84:	e002      	b.n	3c8c <_system_pinmux_config+0xec>
    3c86:	68fb      	ldr	r3, [r7, #12]
    3c88:	68ba      	ldr	r2, [r7, #8]
    3c8a:	615a      	str	r2, [r3, #20]
    3c8c:	687b      	ldr	r3, [r7, #4]
    3c8e:	785b      	ldrb	r3, [r3, #1]
    3c90:	2b01      	cmp	r3, #1
    3c92:	d003      	beq.n	3c9c <_system_pinmux_config+0xfc>
    3c94:	687b      	ldr	r3, [r7, #4]
    3c96:	785b      	ldrb	r3, [r3, #1]
    3c98:	2b02      	cmp	r3, #2
    3c9a:	d102      	bne.n	3ca2 <_system_pinmux_config+0x102>
    3c9c:	68fb      	ldr	r3, [r7, #12]
    3c9e:	68ba      	ldr	r2, [r7, #8]
    3ca0:	609a      	str	r2, [r3, #8]
    3ca2:	46c0      	nop			; (mov r8, r8)
    3ca4:	46bd      	mov	sp, r7
    3ca6:	b008      	add	sp, #32
    3ca8:	bd80      	pop	{r7, pc}
    3caa:	46c0      	nop			; (mov r8, r8)
    3cac:	fffbffff 	.word	0xfffbffff

00003cb0 <system_pinmux_pin_set_config>:
    3cb0:	b580      	push	{r7, lr}
    3cb2:	b084      	sub	sp, #16
    3cb4:	af00      	add	r7, sp, #0
    3cb6:	0002      	movs	r2, r0
    3cb8:	6039      	str	r1, [r7, #0]
    3cba:	1dfb      	adds	r3, r7, #7
    3cbc:	701a      	strb	r2, [r3, #0]
    3cbe:	1dfb      	adds	r3, r7, #7
    3cc0:	781b      	ldrb	r3, [r3, #0]
    3cc2:	0018      	movs	r0, r3
    3cc4:	4b0a      	ldr	r3, [pc, #40]	; (3cf0 <system_pinmux_pin_set_config+0x40>)
    3cc6:	4798      	blx	r3
    3cc8:	0003      	movs	r3, r0
    3cca:	60fb      	str	r3, [r7, #12]
    3ccc:	1dfb      	adds	r3, r7, #7
    3cce:	781b      	ldrb	r3, [r3, #0]
    3cd0:	221f      	movs	r2, #31
    3cd2:	4013      	ands	r3, r2
    3cd4:	2201      	movs	r2, #1
    3cd6:	409a      	lsls	r2, r3
    3cd8:	0013      	movs	r3, r2
    3cda:	60bb      	str	r3, [r7, #8]
    3cdc:	683a      	ldr	r2, [r7, #0]
    3cde:	68b9      	ldr	r1, [r7, #8]
    3ce0:	68fb      	ldr	r3, [r7, #12]
    3ce2:	0018      	movs	r0, r3
    3ce4:	4b03      	ldr	r3, [pc, #12]	; (3cf4 <system_pinmux_pin_set_config+0x44>)
    3ce6:	4798      	blx	r3
    3ce8:	46c0      	nop			; (mov r8, r8)
    3cea:	46bd      	mov	sp, r7
    3cec:	b004      	add	sp, #16
    3cee:	bd80      	pop	{r7, pc}
    3cf0:	00003b41 	.word	0x00003b41
    3cf4:	00003ba1 	.word	0x00003ba1

00003cf8 <_system_dummy_init>:
    3cf8:	b580      	push	{r7, lr}
    3cfa:	af00      	add	r7, sp, #0
    3cfc:	46c0      	nop			; (mov r8, r8)
    3cfe:	46bd      	mov	sp, r7
    3d00:	bd80      	pop	{r7, pc}
    3d02:	46c0      	nop			; (mov r8, r8)

00003d04 <system_init>:
    3d04:	b580      	push	{r7, lr}
    3d06:	af00      	add	r7, sp, #0
    3d08:	4b06      	ldr	r3, [pc, #24]	; (3d24 <system_init+0x20>)
    3d0a:	4798      	blx	r3
    3d0c:	4b06      	ldr	r3, [pc, #24]	; (3d28 <system_init+0x24>)
    3d0e:	4798      	blx	r3
    3d10:	4b06      	ldr	r3, [pc, #24]	; (3d2c <system_init+0x28>)
    3d12:	4798      	blx	r3
    3d14:	4b06      	ldr	r3, [pc, #24]	; (3d30 <system_init+0x2c>)
    3d16:	4798      	blx	r3
    3d18:	4b06      	ldr	r3, [pc, #24]	; (3d34 <system_init+0x30>)
    3d1a:	4798      	blx	r3
    3d1c:	46c0      	nop			; (mov r8, r8)
    3d1e:	46bd      	mov	sp, r7
    3d20:	bd80      	pop	{r7, pc}
    3d22:	46c0      	nop			; (mov r8, r8)
    3d24:	00003515 	.word	0x00003515
    3d28:	00003001 	.word	0x00003001
    3d2c:	00003cf9 	.word	0x00003cf9
    3d30:	00000271 	.word	0x00000271
    3d34:	00003cf9 	.word	0x00003cf9

00003d38 <Reset_Handler>:
    3d38:	b580      	push	{r7, lr}
    3d3a:	b082      	sub	sp, #8
    3d3c:	af00      	add	r7, sp, #0
    3d3e:	4b2f      	ldr	r3, [pc, #188]	; (3dfc <Reset_Handler+0xc4>)
    3d40:	607b      	str	r3, [r7, #4]
    3d42:	4b2f      	ldr	r3, [pc, #188]	; (3e00 <Reset_Handler+0xc8>)
    3d44:	603b      	str	r3, [r7, #0]
    3d46:	687a      	ldr	r2, [r7, #4]
    3d48:	683b      	ldr	r3, [r7, #0]
    3d4a:	429a      	cmp	r2, r3
    3d4c:	d00c      	beq.n	3d68 <Reset_Handler+0x30>
    3d4e:	e007      	b.n	3d60 <Reset_Handler+0x28>
    3d50:	683b      	ldr	r3, [r7, #0]
    3d52:	1d1a      	adds	r2, r3, #4
    3d54:	603a      	str	r2, [r7, #0]
    3d56:	687a      	ldr	r2, [r7, #4]
    3d58:	1d11      	adds	r1, r2, #4
    3d5a:	6079      	str	r1, [r7, #4]
    3d5c:	6812      	ldr	r2, [r2, #0]
    3d5e:	601a      	str	r2, [r3, #0]
    3d60:	683a      	ldr	r2, [r7, #0]
    3d62:	4b28      	ldr	r3, [pc, #160]	; (3e04 <Reset_Handler+0xcc>)
    3d64:	429a      	cmp	r2, r3
    3d66:	d3f3      	bcc.n	3d50 <Reset_Handler+0x18>
    3d68:	4b27      	ldr	r3, [pc, #156]	; (3e08 <Reset_Handler+0xd0>)
    3d6a:	603b      	str	r3, [r7, #0]
    3d6c:	e004      	b.n	3d78 <Reset_Handler+0x40>
    3d6e:	683b      	ldr	r3, [r7, #0]
    3d70:	1d1a      	adds	r2, r3, #4
    3d72:	603a      	str	r2, [r7, #0]
    3d74:	2200      	movs	r2, #0
    3d76:	601a      	str	r2, [r3, #0]
    3d78:	683a      	ldr	r2, [r7, #0]
    3d7a:	4b24      	ldr	r3, [pc, #144]	; (3e0c <Reset_Handler+0xd4>)
    3d7c:	429a      	cmp	r2, r3
    3d7e:	d3f6      	bcc.n	3d6e <Reset_Handler+0x36>
    3d80:	4b23      	ldr	r3, [pc, #140]	; (3e10 <Reset_Handler+0xd8>)
    3d82:	607b      	str	r3, [r7, #4]
    3d84:	4b23      	ldr	r3, [pc, #140]	; (3e14 <Reset_Handler+0xdc>)
    3d86:	687a      	ldr	r2, [r7, #4]
    3d88:	21ff      	movs	r1, #255	; 0xff
    3d8a:	438a      	bics	r2, r1
    3d8c:	609a      	str	r2, [r3, #8]
    3d8e:	4a22      	ldr	r2, [pc, #136]	; (3e18 <Reset_Handler+0xe0>)
    3d90:	2390      	movs	r3, #144	; 0x90
    3d92:	005b      	lsls	r3, r3, #1
    3d94:	2102      	movs	r1, #2
    3d96:	50d1      	str	r1, [r2, r3]
    3d98:	4a20      	ldr	r2, [pc, #128]	; (3e1c <Reset_Handler+0xe4>)
    3d9a:	78d3      	ldrb	r3, [r2, #3]
    3d9c:	2103      	movs	r1, #3
    3d9e:	438b      	bics	r3, r1
    3da0:	1c19      	adds	r1, r3, #0
    3da2:	2302      	movs	r3, #2
    3da4:	430b      	orrs	r3, r1
    3da6:	70d3      	strb	r3, [r2, #3]
    3da8:	4a1c      	ldr	r2, [pc, #112]	; (3e1c <Reset_Handler+0xe4>)
    3daa:	78d3      	ldrb	r3, [r2, #3]
    3dac:	210c      	movs	r1, #12
    3dae:	438b      	bics	r3, r1
    3db0:	1c19      	adds	r1, r3, #0
    3db2:	2308      	movs	r3, #8
    3db4:	430b      	orrs	r3, r1
    3db6:	70d3      	strb	r3, [r2, #3]
    3db8:	4a19      	ldr	r2, [pc, #100]	; (3e20 <Reset_Handler+0xe8>)
    3dba:	7b93      	ldrb	r3, [r2, #14]
    3dbc:	2130      	movs	r1, #48	; 0x30
    3dbe:	438b      	bics	r3, r1
    3dc0:	1c19      	adds	r1, r3, #0
    3dc2:	2320      	movs	r3, #32
    3dc4:	430b      	orrs	r3, r1
    3dc6:	7393      	strb	r3, [r2, #14]
    3dc8:	4a15      	ldr	r2, [pc, #84]	; (3e20 <Reset_Handler+0xe8>)
    3dca:	7b93      	ldrb	r3, [r2, #14]
    3dcc:	210c      	movs	r1, #12
    3dce:	438b      	bics	r3, r1
    3dd0:	1c19      	adds	r1, r3, #0
    3dd2:	2308      	movs	r3, #8
    3dd4:	430b      	orrs	r3, r1
    3dd6:	7393      	strb	r3, [r2, #14]
    3dd8:	4a11      	ldr	r2, [pc, #68]	; (3e20 <Reset_Handler+0xe8>)
    3dda:	7b93      	ldrb	r3, [r2, #14]
    3ddc:	2103      	movs	r1, #3
    3dde:	438b      	bics	r3, r1
    3de0:	1c19      	adds	r1, r3, #0
    3de2:	2302      	movs	r3, #2
    3de4:	430b      	orrs	r3, r1
    3de6:	7393      	strb	r3, [r2, #14]
    3de8:	4a0e      	ldr	r2, [pc, #56]	; (3e24 <Reset_Handler+0xec>)
    3dea:	6853      	ldr	r3, [r2, #4]
    3dec:	2180      	movs	r1, #128	; 0x80
    3dee:	430b      	orrs	r3, r1
    3df0:	6053      	str	r3, [r2, #4]
    3df2:	4b0d      	ldr	r3, [pc, #52]	; (3e28 <Reset_Handler+0xf0>)
    3df4:	4798      	blx	r3
    3df6:	4b0d      	ldr	r3, [pc, #52]	; (3e2c <Reset_Handler+0xf4>)
    3df8:	4798      	blx	r3
    3dfa:	e7fe      	b.n	3dfa <Reset_Handler+0xc2>
    3dfc:	000058b4 	.word	0x000058b4
    3e00:	20000000 	.word	0x20000000
    3e04:	20000008 	.word	0x20000008
    3e08:	20000008 	.word	0x20000008
    3e0c:	2000029c 	.word	0x2000029c
    3e10:	00000000 	.word	0x00000000
    3e14:	e000ed00 	.word	0xe000ed00
    3e18:	41007000 	.word	0x41007000
    3e1c:	41005000 	.word	0x41005000
    3e20:	41004800 	.word	0x41004800
    3e24:	41004000 	.word	0x41004000
    3e28:	00005735 	.word	0x00005735
    3e2c:	000052a9 	.word	0x000052a9

00003e30 <Dummy_Handler>:
    3e30:	b580      	push	{r7, lr}
    3e32:	af00      	add	r7, sp, #0
    3e34:	e7fe      	b.n	3e34 <Dummy_Handler+0x4>
    3e36:	46c0      	nop			; (mov r8, r8)

00003e38 <system_pinmux_get_group_from_gpio_pin>:
 *
 * \return Base address of the associated PORT module.
 */
static inline PortGroup* system_pinmux_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
    3e38:	b580      	push	{r7, lr}
    3e3a:	b084      	sub	sp, #16
    3e3c:	af00      	add	r7, sp, #0
    3e3e:	0002      	movs	r2, r0
    3e40:	1dfb      	adds	r3, r7, #7
    3e42:	701a      	strb	r2, [r3, #0]
	uint8_t port_index  = (gpio_pin / 128);
    3e44:	230f      	movs	r3, #15
    3e46:	18fb      	adds	r3, r7, r3
    3e48:	1dfa      	adds	r2, r7, #7
    3e4a:	7812      	ldrb	r2, [r2, #0]
    3e4c:	09d2      	lsrs	r2, r2, #7
    3e4e:	701a      	strb	r2, [r3, #0]
	uint8_t group_index = (gpio_pin / 32);
    3e50:	230e      	movs	r3, #14
    3e52:	18fb      	adds	r3, r7, r3
    3e54:	1dfa      	adds	r2, r7, #7
    3e56:	7812      	ldrb	r2, [r2, #0]
    3e58:	0952      	lsrs	r2, r2, #5
    3e5a:	701a      	strb	r2, [r3, #0]

	/* Array of available ports */
	Port *const ports[PORT_INST_NUM] = PORT_INSTS;
    3e5c:	4b0d      	ldr	r3, [pc, #52]	; (3e94 <system_pinmux_get_group_from_gpio_pin+0x5c>)
    3e5e:	60bb      	str	r3, [r7, #8]

	if (port_index < PORT_INST_NUM) {
    3e60:	230f      	movs	r3, #15
    3e62:	18fb      	adds	r3, r7, r3
    3e64:	781b      	ldrb	r3, [r3, #0]
    3e66:	2b00      	cmp	r3, #0
    3e68:	d10f      	bne.n	3e8a <system_pinmux_get_group_from_gpio_pin+0x52>
		return &(ports[port_index]->Group[group_index]);
    3e6a:	230f      	movs	r3, #15
    3e6c:	18fb      	adds	r3, r7, r3
    3e6e:	781b      	ldrb	r3, [r3, #0]
    3e70:	009b      	lsls	r3, r3, #2
    3e72:	2210      	movs	r2, #16
    3e74:	4694      	mov	ip, r2
    3e76:	44bc      	add	ip, r7
    3e78:	4463      	add	r3, ip
    3e7a:	3b08      	subs	r3, #8
    3e7c:	681a      	ldr	r2, [r3, #0]
    3e7e:	230e      	movs	r3, #14
    3e80:	18fb      	adds	r3, r7, r3
    3e82:	781b      	ldrb	r3, [r3, #0]
    3e84:	01db      	lsls	r3, r3, #7
    3e86:	18d3      	adds	r3, r2, r3
    3e88:	e000      	b.n	3e8c <system_pinmux_get_group_from_gpio_pin+0x54>
	} else {
		Assert(false);
		return NULL;
    3e8a:	2300      	movs	r3, #0
	}
}
    3e8c:	0018      	movs	r0, r3
    3e8e:	46bd      	mov	sp, r7
    3e90:	b004      	add	sp, #16
    3e92:	bd80      	pop	{r7, pc}
    3e94:	41004400 	.word	0x41004400

00003e98 <port_get_group_from_gpio_pin>:
 *
 *  \return Base address of the associated PORT module.
 */
static inline PortGroup* port_get_group_from_gpio_pin(
		const uint8_t gpio_pin)
{
    3e98:	b580      	push	{r7, lr}
    3e9a:	b082      	sub	sp, #8
    3e9c:	af00      	add	r7, sp, #0
    3e9e:	0002      	movs	r2, r0
    3ea0:	1dfb      	adds	r3, r7, #7
    3ea2:	701a      	strb	r2, [r3, #0]
	return system_pinmux_get_group_from_gpio_pin(gpio_pin);
    3ea4:	1dfb      	adds	r3, r7, #7
    3ea6:	781b      	ldrb	r3, [r3, #0]
    3ea8:	0018      	movs	r0, r3
    3eaa:	4b03      	ldr	r3, [pc, #12]	; (3eb8 <port_get_group_from_gpio_pin+0x20>)
    3eac:	4798      	blx	r3
    3eae:	0003      	movs	r3, r0
}
    3eb0:	0018      	movs	r0, r3
    3eb2:	46bd      	mov	sp, r7
    3eb4:	b002      	add	sp, #8
    3eb6:	bd80      	pop	{r7, pc}
    3eb8:	00003e39 	.word	0x00003e39

00003ebc <port_get_config_defaults>:
 *
 *  \param[out] config  Configuration structure to initialize to default values
 */
static inline void port_get_config_defaults(
		struct port_config *const config)
{
    3ebc:	b580      	push	{r7, lr}
    3ebe:	b082      	sub	sp, #8
    3ec0:	af00      	add	r7, sp, #0
    3ec2:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->direction  = PORT_PIN_DIR_INPUT;
    3ec4:	687b      	ldr	r3, [r7, #4]
    3ec6:	2200      	movs	r2, #0
    3ec8:	701a      	strb	r2, [r3, #0]
	config->input_pull = PORT_PIN_PULL_UP;
    3eca:	687b      	ldr	r3, [r7, #4]
    3ecc:	2201      	movs	r2, #1
    3ece:	705a      	strb	r2, [r3, #1]
	config->powersave  = false;
    3ed0:	687b      	ldr	r3, [r7, #4]
    3ed2:	2200      	movs	r2, #0
    3ed4:	709a      	strb	r2, [r3, #2]
}
    3ed6:	46c0      	nop			; (mov r8, r8)
    3ed8:	46bd      	mov	sp, r7
    3eda:	b002      	add	sp, #8
    3edc:	bd80      	pop	{r7, pc}
    3ede:	46c0      	nop			; (mov r8, r8)

00003ee0 <port_pin_get_input_level>:
 *
 *  \return Status of the port pin's input buffer.
 */
static inline bool port_pin_get_input_level(
		const uint8_t gpio_pin)
{
    3ee0:	b580      	push	{r7, lr}
    3ee2:	b084      	sub	sp, #16
    3ee4:	af00      	add	r7, sp, #0
    3ee6:	0002      	movs	r2, r0
    3ee8:	1dfb      	adds	r3, r7, #7
    3eea:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
    3eec:	1dfb      	adds	r3, r7, #7
    3eee:	781b      	ldrb	r3, [r3, #0]
    3ef0:	0018      	movs	r0, r3
    3ef2:	4b0b      	ldr	r3, [pc, #44]	; (3f20 <port_pin_get_input_level+0x40>)
    3ef4:	4798      	blx	r3
    3ef6:	0003      	movs	r3, r0
    3ef8:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
    3efa:	1dfb      	adds	r3, r7, #7
    3efc:	781b      	ldrb	r3, [r3, #0]
    3efe:	221f      	movs	r2, #31
    3f00:	4013      	ands	r3, r2
    3f02:	2201      	movs	r2, #1
    3f04:	409a      	lsls	r2, r3
    3f06:	0013      	movs	r3, r2
    3f08:	60bb      	str	r3, [r7, #8]

	return (port_base->IN.reg & pin_mask);
    3f0a:	68fb      	ldr	r3, [r7, #12]
    3f0c:	6a1b      	ldr	r3, [r3, #32]
    3f0e:	68ba      	ldr	r2, [r7, #8]
    3f10:	4013      	ands	r3, r2
    3f12:	1e5a      	subs	r2, r3, #1
    3f14:	4193      	sbcs	r3, r2
    3f16:	b2db      	uxtb	r3, r3
}
    3f18:	0018      	movs	r0, r3
    3f1a:	46bd      	mov	sp, r7
    3f1c:	b004      	add	sp, #16
    3f1e:	bd80      	pop	{r7, pc}
    3f20:	00003e99 	.word	0x00003e99

00003f24 <port_pin_set_output_level>:
 *  \param[in] level     Logical level to set the given pin to
 */
static inline void port_pin_set_output_level(
		const uint8_t gpio_pin,
		const bool level)
{
    3f24:	b580      	push	{r7, lr}
    3f26:	b084      	sub	sp, #16
    3f28:	af00      	add	r7, sp, #0
    3f2a:	0002      	movs	r2, r0
    3f2c:	1dfb      	adds	r3, r7, #7
    3f2e:	701a      	strb	r2, [r3, #0]
    3f30:	1dbb      	adds	r3, r7, #6
    3f32:	1c0a      	adds	r2, r1, #0
    3f34:	701a      	strb	r2, [r3, #0]
	PortGroup *const port_base = port_get_group_from_gpio_pin(gpio_pin);
    3f36:	1dfb      	adds	r3, r7, #7
    3f38:	781b      	ldrb	r3, [r3, #0]
    3f3a:	0018      	movs	r0, r3
    3f3c:	4b0d      	ldr	r3, [pc, #52]	; (3f74 <port_pin_set_output_level+0x50>)
    3f3e:	4798      	blx	r3
    3f40:	0003      	movs	r3, r0
    3f42:	60fb      	str	r3, [r7, #12]
	uint32_t pin_mask  = (1UL << (gpio_pin % 32));
    3f44:	1dfb      	adds	r3, r7, #7
    3f46:	781b      	ldrb	r3, [r3, #0]
    3f48:	221f      	movs	r2, #31
    3f4a:	4013      	ands	r3, r2
    3f4c:	2201      	movs	r2, #1
    3f4e:	409a      	lsls	r2, r3
    3f50:	0013      	movs	r3, r2
    3f52:	60bb      	str	r3, [r7, #8]

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
    3f54:	1dbb      	adds	r3, r7, #6
    3f56:	781b      	ldrb	r3, [r3, #0]
    3f58:	2b00      	cmp	r3, #0
    3f5a:	d003      	beq.n	3f64 <port_pin_set_output_level+0x40>
		port_base->OUTSET.reg = pin_mask;
    3f5c:	68fb      	ldr	r3, [r7, #12]
    3f5e:	68ba      	ldr	r2, [r7, #8]
    3f60:	619a      	str	r2, [r3, #24]
	} else {
		port_base->OUTCLR.reg = pin_mask;
	}
}
    3f62:	e002      	b.n	3f6a <port_pin_set_output_level+0x46>

	/* Set the pin to high or low atomically based on the requested level */
	if (level) {
		port_base->OUTSET.reg = pin_mask;
	} else {
		port_base->OUTCLR.reg = pin_mask;
    3f64:	68fb      	ldr	r3, [r7, #12]
    3f66:	68ba      	ldr	r2, [r7, #8]
    3f68:	615a      	str	r2, [r3, #20]
	}
}
    3f6a:	46c0      	nop			; (mov r8, r8)
    3f6c:	46bd      	mov	sp, r7
    3f6e:	b004      	add	sp, #16
    3f70:	bd80      	pop	{r7, pc}
    3f72:	46c0      	nop			; (mov r8, r8)
    3f74:	00003e99 	.word	0x00003e99

00003f78 <system_interrupt_enable_global>:
 * \brief Enables global interrupts.
 *
 * Enables global interrupts in the device to fire any enabled interrupt handlers.
 */
static inline void system_interrupt_enable_global(void)
{
    3f78:	b580      	push	{r7, lr}
    3f7a:	af00      	add	r7, sp, #0
	cpu_irq_enable();
    3f7c:	4b04      	ldr	r3, [pc, #16]	; (3f90 <system_interrupt_enable_global+0x18>)
    3f7e:	2201      	movs	r2, #1
    3f80:	701a      	strb	r2, [r3, #0]
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
    3f82:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
    3f86:	b662      	cpsie	i
}
    3f88:	46c0      	nop			; (mov r8, r8)
    3f8a:	46bd      	mov	sp, r7
    3f8c:	bd80      	pop	{r7, pc}
    3f8e:	46c0      	nop			; (mov r8, r8)
    3f90:	20000000 	.word	0x20000000

00003f94 <system_interrupt_disable_global>:
 *
 * Disabled global interrupts in the device, preventing any enabled interrupt
 * handlers from executing.
 */
static inline void system_interrupt_disable_global(void)
{
    3f94:	b580      	push	{r7, lr}
    3f96:	af00      	add	r7, sp, #0
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
    3f98:	b672      	cpsid	i
    3f9a:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    3f9e:	4b03      	ldr	r3, [pc, #12]	; (3fac <system_interrupt_disable_global+0x18>)
    3fa0:	2200      	movs	r2, #0
    3fa2:	701a      	strb	r2, [r3, #0]
}
    3fa4:	46c0      	nop			; (mov r8, r8)
    3fa6:	46bd      	mov	sp, r7
    3fa8:	bd80      	pop	{r7, pc}
    3faa:	46c0      	nop			; (mov r8, r8)
    3fac:	20000000 	.word	0x20000000

00003fb0 <system_interrupt_enable>:
 *
 * \param[in] vector Interrupt vector to enable
 */
static inline void system_interrupt_enable(
		const enum system_interrupt_vector vector)
{
    3fb0:	b580      	push	{r7, lr}
    3fb2:	b082      	sub	sp, #8
    3fb4:	af00      	add	r7, sp, #0
    3fb6:	0002      	movs	r2, r0
    3fb8:	1dfb      	adds	r3, r7, #7
    3fba:	701a      	strb	r2, [r3, #0]
	NVIC->ISER[0] = (uint32_t)(1 << ((uint32_t)vector & 0x0000001f));
    3fbc:	4b06      	ldr	r3, [pc, #24]	; (3fd8 <system_interrupt_enable+0x28>)
    3fbe:	1dfa      	adds	r2, r7, #7
    3fc0:	7812      	ldrb	r2, [r2, #0]
    3fc2:	0011      	movs	r1, r2
    3fc4:	221f      	movs	r2, #31
    3fc6:	400a      	ands	r2, r1
    3fc8:	2101      	movs	r1, #1
    3fca:	4091      	lsls	r1, r2
    3fcc:	000a      	movs	r2, r1
    3fce:	601a      	str	r2, [r3, #0]
}
    3fd0:	46c0      	nop			; (mov r8, r8)
    3fd2:	46bd      	mov	sp, r7
    3fd4:	b002      	add	sp, #8
    3fd6:	bd80      	pop	{r7, pc}
    3fd8:	e000e100 	.word	0xe000e100

00003fdc <rtc_count_get_config_defaults>:
 *  \param[out] config  Configuration structure to be initialized to default
 *                      values
 */
static inline void rtc_count_get_config_defaults(
		struct rtc_count_config *const config)
{
    3fdc:	b580      	push	{r7, lr}
    3fde:	b084      	sub	sp, #16
    3fe0:	af00      	add	r7, sp, #0
    3fe2:	6078      	str	r0, [r7, #4]
	/* Sanity check argument */
	Assert(config);

	/* Set default into configuration structure */
	config->prescaler           = RTC_COUNT_PRESCALER_DIV_1024;
    3fe4:	687b      	ldr	r3, [r7, #4]
    3fe6:	22a0      	movs	r2, #160	; 0xa0
    3fe8:	0112      	lsls	r2, r2, #4
    3fea:	801a      	strh	r2, [r3, #0]
	config->mode                = RTC_COUNT_MODE_32BIT;
    3fec:	687b      	ldr	r3, [r7, #4]
    3fee:	2201      	movs	r2, #1
    3ff0:	709a      	strb	r2, [r3, #2]
	config->clear_on_match      = false;
    3ff2:	687b      	ldr	r3, [r7, #4]
    3ff4:	2200      	movs	r2, #0
    3ff6:	70da      	strb	r2, [r3, #3]

#ifdef FEATURE_RTC_CONTINUOUSLY_UPDATED
	config->continuously_update = false;
    3ff8:	687b      	ldr	r3, [r7, #4]
    3ffa:	2200      	movs	r2, #0
    3ffc:	711a      	strb	r2, [r3, #4]
#endif
#if (SAML21XXXB) || (SAML22) || (SAMC20) || (SAMC21)
	config->enable_read_sync    = true;
#endif

	for (uint8_t i = 0; i < RTC_NUM_OF_COMP16; i++) {
    3ffe:	230f      	movs	r3, #15
    4000:	18fb      	adds	r3, r7, r3
    4002:	2200      	movs	r2, #0
    4004:	701a      	strb	r2, [r3, #0]
    4006:	e00e      	b.n	4026 <rtc_count_get_config_defaults+0x4a>
		config->compare_values[i] = 0;
    4008:	230f      	movs	r3, #15
    400a:	18fb      	adds	r3, r7, r3
    400c:	781a      	ldrb	r2, [r3, #0]
    400e:	687b      	ldr	r3, [r7, #4]
    4010:	3202      	adds	r2, #2
    4012:	0092      	lsls	r2, r2, #2
    4014:	2100      	movs	r1, #0
    4016:	50d1      	str	r1, [r2, r3]
#endif
#if (SAML21XXXB) || (SAML22) || (SAMC20) || (SAMC21)
	config->enable_read_sync    = true;
#endif

	for (uint8_t i = 0; i < RTC_NUM_OF_COMP16; i++) {
    4018:	230f      	movs	r3, #15
    401a:	18fb      	adds	r3, r7, r3
    401c:	781a      	ldrb	r2, [r3, #0]
    401e:	230f      	movs	r3, #15
    4020:	18fb      	adds	r3, r7, r3
    4022:	3201      	adds	r2, #1
    4024:	701a      	strb	r2, [r3, #0]
    4026:	230f      	movs	r3, #15
    4028:	18fb      	adds	r3, r7, r3
    402a:	781b      	ldrb	r3, [r3, #0]
    402c:	2b01      	cmp	r3, #1
    402e:	d9eb      	bls.n	4008 <rtc_count_get_config_defaults+0x2c>
		config->compare_values[i] = 0;
	}
}
    4030:	46c0      	nop			; (mov r8, r8)
    4032:	46bd      	mov	sp, r7
    4034:	b004      	add	sp, #16
    4036:	bd80      	pop	{r7, pc}

00004038 <spi_is_syncing>:
 * \retval false  Module synchronization is not ongoing
 *
 */
static inline bool spi_is_syncing(
		struct spi_module *const module)
{
    4038:	b580      	push	{r7, lr}
    403a:	b084      	sub	sp, #16
    403c:	af00      	add	r7, sp, #0
    403e:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    4040:	687b      	ldr	r3, [r7, #4]
    4042:	681b      	ldr	r3, [r3, #0]
    4044:	60fb      	str	r3, [r7, #12]

#  ifdef FEATURE_SPI_SYNC_SCHEME_VERSION_2
	/* Return synchronization status */
	return (spi_module->SYNCBUSY.reg);
    4046:	68fb      	ldr	r3, [r7, #12]
    4048:	69db      	ldr	r3, [r3, #28]
    404a:	1e5a      	subs	r2, r3, #1
    404c:	4193      	sbcs	r3, r2
    404e:	b2db      	uxtb	r3, r3
#  else
	/* Return synchronization status */
	return (spi_module->STATUS.reg & SERCOM_SPI_STATUS_SYNCBUSY);
#  endif
}
    4050:	0018      	movs	r0, r3
    4052:	46bd      	mov	sp, r7
    4054:	b004      	add	sp, #16
    4056:	bd80      	pop	{r7, pc}

00004058 <spi_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to initialize to default values
 */
static inline void spi_get_config_defaults(
		struct spi_config *const config)
{
    4058:	b580      	push	{r7, lr}
    405a:	b082      	sub	sp, #8
    405c:	af00      	add	r7, sp, #0
    405e:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(config);

	/* Default configuration values */
	config->mode             = SPI_MODE_MASTER;
    4060:	687b      	ldr	r3, [r7, #4]
    4062:	2201      	movs	r2, #1
    4064:	701a      	strb	r2, [r3, #0]
	config->data_order       = SPI_DATA_ORDER_MSB;
    4066:	687b      	ldr	r3, [r7, #4]
    4068:	2200      	movs	r2, #0
    406a:	605a      	str	r2, [r3, #4]
	config->transfer_mode    = SPI_TRANSFER_MODE_0;
    406c:	687b      	ldr	r3, [r7, #4]
    406e:	2200      	movs	r2, #0
    4070:	609a      	str	r2, [r3, #8]
	config->mux_setting      = SPI_SIGNAL_MUX_SETTING_D;
    4072:	687b      	ldr	r3, [r7, #4]
    4074:	22c0      	movs	r2, #192	; 0xc0
    4076:	0392      	lsls	r2, r2, #14
    4078:	60da      	str	r2, [r3, #12]
	config->character_size   = SPI_CHARACTER_SIZE_8BIT;
    407a:	687b      	ldr	r3, [r7, #4]
    407c:	2200      	movs	r2, #0
    407e:	741a      	strb	r2, [r3, #16]
	config->run_in_standby   = false;
    4080:	687b      	ldr	r3, [r7, #4]
    4082:	2200      	movs	r2, #0
    4084:	745a      	strb	r2, [r3, #17]
	config->receiver_enable  = true;
    4086:	687b      	ldr	r3, [r7, #4]
    4088:	2201      	movs	r2, #1
    408a:	749a      	strb	r2, [r3, #18]
#  ifdef FEATURE_SPI_SLAVE_SELECT_LOW_DETECT
	config->select_slave_low_detect_enable= true;
    408c:	687b      	ldr	r3, [r7, #4]
    408e:	2201      	movs	r2, #1
    4090:	74da      	strb	r2, [r3, #19]
#  endif
#  ifdef FEATURE_SPI_HARDWARE_SLAVE_SELECT
	config->master_slave_select_enable= false;
    4092:	687b      	ldr	r3, [r7, #4]
    4094:	2200      	movs	r2, #0
    4096:	751a      	strb	r2, [r3, #20]
#  endif
	config->generator_source = GCLK_GENERATOR_0;
    4098:	687b      	ldr	r3, [r7, #4]
    409a:	2224      	movs	r2, #36	; 0x24
    409c:	2100      	movs	r1, #0
    409e:	5499      	strb	r1, [r3, r2]

	/* Clear mode specific config */
	memset(&(config->mode_specific), 0, sizeof(config->mode_specific));
    40a0:	687b      	ldr	r3, [r7, #4]
    40a2:	3318      	adds	r3, #24
    40a4:	220c      	movs	r2, #12
    40a6:	2100      	movs	r1, #0
    40a8:	0018      	movs	r0, r3
    40aa:	4b0a      	ldr	r3, [pc, #40]	; (40d4 <spi_get_config_defaults+0x7c>)
    40ac:	4798      	blx	r3

	/* Master config defaults */
	config->mode_specific.master.baudrate = 100000;
    40ae:	687b      	ldr	r3, [r7, #4]
    40b0:	4a09      	ldr	r2, [pc, #36]	; (40d8 <spi_get_config_defaults+0x80>)
    40b2:	619a      	str	r2, [r3, #24]

	/* pinmux config defaults */
	config->pinmux_pad0 = PINMUX_DEFAULT;
    40b4:	687b      	ldr	r3, [r7, #4]
    40b6:	2200      	movs	r2, #0
    40b8:	629a      	str	r2, [r3, #40]	; 0x28
	config->pinmux_pad1 = PINMUX_DEFAULT;
    40ba:	687b      	ldr	r3, [r7, #4]
    40bc:	2200      	movs	r2, #0
    40be:	62da      	str	r2, [r3, #44]	; 0x2c
	config->pinmux_pad2 = PINMUX_DEFAULT;
    40c0:	687b      	ldr	r3, [r7, #4]
    40c2:	2200      	movs	r2, #0
    40c4:	631a      	str	r2, [r3, #48]	; 0x30
	config->pinmux_pad3 = PINMUX_DEFAULT;
    40c6:	687b      	ldr	r3, [r7, #4]
    40c8:	2200      	movs	r2, #0
    40ca:	635a      	str	r2, [r3, #52]	; 0x34

};
    40cc:	46c0      	nop			; (mov r8, r8)
    40ce:	46bd      	mov	sp, r7
    40d0:	b002      	add	sp, #8
    40d2:	bd80      	pop	{r7, pc}
    40d4:	00005793 	.word	0x00005793
    40d8:	000186a0 	.word	0x000186a0

000040dc <spi_slave_inst_get_config_defaults>:
 *
 * \param[out] config  Configuration structure to initialize to default values
 */
static inline void spi_slave_inst_get_config_defaults(
		struct spi_slave_inst_config *const config)
{
    40dc:	b580      	push	{r7, lr}
    40de:	b082      	sub	sp, #8
    40e0:	af00      	add	r7, sp, #0
    40e2:	6078      	str	r0, [r7, #4]
	Assert(config);

	config->ss_pin          = 10;
    40e4:	687b      	ldr	r3, [r7, #4]
    40e6:	220a      	movs	r2, #10
    40e8:	701a      	strb	r2, [r3, #0]
	config->address_enabled = false;
    40ea:	687b      	ldr	r3, [r7, #4]
    40ec:	2200      	movs	r2, #0
    40ee:	705a      	strb	r2, [r3, #1]
	config->address         = 0;
    40f0:	687b      	ldr	r3, [r7, #4]
    40f2:	2200      	movs	r2, #0
    40f4:	709a      	strb	r2, [r3, #2]
}
    40f6:	46c0      	nop			; (mov r8, r8)
    40f8:	46bd      	mov	sp, r7
    40fa:	b002      	add	sp, #8
    40fc:	bd80      	pop	{r7, pc}
    40fe:	46c0      	nop			; (mov r8, r8)

00004100 <spi_attach_slave>:
 *
 */
static inline void spi_attach_slave(
		struct spi_slave_inst *const slave,
		const struct spi_slave_inst_config *const config)
{
    4100:	b580      	push	{r7, lr}
    4102:	b084      	sub	sp, #16
    4104:	af00      	add	r7, sp, #0
    4106:	6078      	str	r0, [r7, #4]
    4108:	6039      	str	r1, [r7, #0]
	Assert(slave);
	Assert(config);

	slave->ss_pin          = config->ss_pin;
    410a:	683b      	ldr	r3, [r7, #0]
    410c:	781a      	ldrb	r2, [r3, #0]
    410e:	687b      	ldr	r3, [r7, #4]
    4110:	701a      	strb	r2, [r3, #0]
	slave->address_enabled = config->address_enabled;
    4112:	683b      	ldr	r3, [r7, #0]
    4114:	785a      	ldrb	r2, [r3, #1]
    4116:	687b      	ldr	r3, [r7, #4]
    4118:	705a      	strb	r2, [r3, #1]
	slave->address         = config->address;
    411a:	683b      	ldr	r3, [r7, #0]
    411c:	789a      	ldrb	r2, [r3, #2]
    411e:	687b      	ldr	r3, [r7, #4]
    4120:	709a      	strb	r2, [r3, #2]

	/* Get default config for pin */
	struct port_config pin_conf;
	port_get_config_defaults(&pin_conf);
    4122:	230c      	movs	r3, #12
    4124:	18fb      	adds	r3, r7, r3
    4126:	0018      	movs	r0, r3
    4128:	4b0b      	ldr	r3, [pc, #44]	; (4158 <spi_attach_slave+0x58>)
    412a:	4798      	blx	r3

	/* Edit config to set the pin as output */
	pin_conf.direction = PORT_PIN_DIR_OUTPUT;
    412c:	230c      	movs	r3, #12
    412e:	18fb      	adds	r3, r7, r3
    4130:	2201      	movs	r2, #1
    4132:	701a      	strb	r2, [r3, #0]

	/* Set config on Slave Select pin */
	port_pin_set_config(slave->ss_pin, &pin_conf);
    4134:	687b      	ldr	r3, [r7, #4]
    4136:	781b      	ldrb	r3, [r3, #0]
    4138:	220c      	movs	r2, #12
    413a:	18ba      	adds	r2, r7, r2
    413c:	0011      	movs	r1, r2
    413e:	0018      	movs	r0, r3
    4140:	4b06      	ldr	r3, [pc, #24]	; (415c <spi_attach_slave+0x5c>)
    4142:	4798      	blx	r3
	port_pin_set_output_level(slave->ss_pin, true);
    4144:	687b      	ldr	r3, [r7, #4]
    4146:	781b      	ldrb	r3, [r3, #0]
    4148:	2101      	movs	r1, #1
    414a:	0018      	movs	r0, r3
    414c:	4b04      	ldr	r3, [pc, #16]	; (4160 <spi_attach_slave+0x60>)
    414e:	4798      	blx	r3
}
    4150:	46c0      	nop			; (mov r8, r8)
    4152:	46bd      	mov	sp, r7
    4154:	b004      	add	sp, #16
    4156:	bd80      	pop	{r7, pc}
    4158:	00003ebd 	.word	0x00003ebd
    415c:	00002fa1 	.word	0x00002fa1
    4160:	00003f25 	.word	0x00003f25

00004164 <spi_enable>:
 *
 * \param[in,out] module  Pointer to the software instance struct
 */
static inline void spi_enable(
		struct spi_module *const module)
{
    4164:	b580      	push	{r7, lr}
    4166:	b084      	sub	sp, #16
    4168:	af00      	add	r7, sp, #0
    416a:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(module);
	Assert(module->hw);

	SercomSpi *const spi_module = &(module->hw->SPI);
    416c:	687b      	ldr	r3, [r7, #4]
    416e:	681b      	ldr	r3, [r3, #0]
    4170:	60fb      	str	r3, [r7, #12]

#  if SPI_CALLBACK_MODE == true
	system_interrupt_enable(_sercom_get_interrupt_vector(module->hw));
    4172:	687b      	ldr	r3, [r7, #4]
    4174:	681b      	ldr	r3, [r3, #0]
    4176:	0018      	movs	r0, r3
    4178:	4b0b      	ldr	r3, [pc, #44]	; (41a8 <spi_enable+0x44>)
    417a:	4798      	blx	r3
    417c:	0003      	movs	r3, r0
    417e:	0018      	movs	r0, r3
    4180:	4b0a      	ldr	r3, [pc, #40]	; (41ac <spi_enable+0x48>)
    4182:	4798      	blx	r3
#  endif

	while (spi_is_syncing(module)) {
    4184:	46c0      	nop			; (mov r8, r8)
    4186:	687b      	ldr	r3, [r7, #4]
    4188:	0018      	movs	r0, r3
    418a:	4b09      	ldr	r3, [pc, #36]	; (41b0 <spi_enable+0x4c>)
    418c:	4798      	blx	r3
    418e:	1e03      	subs	r3, r0, #0
    4190:	d1f9      	bne.n	4186 <spi_enable+0x22>
		/* Wait until the synchronization is complete */
	}

	/* Enable SPI */
	spi_module->CTRLA.reg |= SERCOM_SPI_CTRLA_ENABLE;
    4192:	68fb      	ldr	r3, [r7, #12]
    4194:	681b      	ldr	r3, [r3, #0]
    4196:	2202      	movs	r2, #2
    4198:	431a      	orrs	r2, r3
    419a:	68fb      	ldr	r3, [r7, #12]
    419c:	601a      	str	r2, [r3, #0]
}
    419e:	46c0      	nop			; (mov r8, r8)
    41a0:	46bd      	mov	sp, r7
    41a2:	b004      	add	sp, #16
    41a4:	bd80      	pop	{r7, pc}
    41a6:	46c0      	nop			; (mov r8, r8)
    41a8:	00002e9d 	.word	0x00002e9d
    41ac:	00003fb1 	.word	0x00003fb1
    41b0:	00004039 	.word	0x00004039

000041b4 <tcc_enable>:
 *
 * \param[in]  module_inst   Pointer to the software module instance struct
 */
static inline void tcc_enable(
		const struct tcc_module *const module_inst)
{
    41b4:	b580      	push	{r7, lr}
    41b6:	b084      	sub	sp, #16
    41b8:	af00      	add	r7, sp, #0
    41ba:	6078      	str	r0, [r7, #4]
	/* Sanity check arguments */
	Assert(module_inst);
	Assert(module_inst->hw);

	/* Get a pointer to the module's hardware instance */
	Tcc *const tcc_module = module_inst->hw;
    41bc:	687b      	ldr	r3, [r7, #4]
    41be:	681b      	ldr	r3, [r3, #0]
    41c0:	60fb      	str	r3, [r7, #12]

	while (tcc_module->SYNCBUSY.reg & TCC_SYNCBUSY_ENABLE) {
    41c2:	46c0      	nop			; (mov r8, r8)
    41c4:	68fb      	ldr	r3, [r7, #12]
    41c6:	689b      	ldr	r3, [r3, #8]
    41c8:	2202      	movs	r2, #2
    41ca:	4013      	ands	r3, r2
    41cc:	d1fa      	bne.n	41c4 <tcc_enable+0x10>
		/* Wait for sync */
	}

	/* Enable the TCC module */
	tcc_module->CTRLA.reg |= TCC_CTRLA_ENABLE;
    41ce:	68fb      	ldr	r3, [r7, #12]
    41d0:	681b      	ldr	r3, [r3, #0]
    41d2:	2202      	movs	r2, #2
    41d4:	431a      	orrs	r2, r3
    41d6:	68fb      	ldr	r3, [r7, #12]
    41d8:	601a      	str	r2, [r3, #0]
}
    41da:	46c0      	nop			; (mov r8, r8)
    41dc:	46bd      	mov	sp, r7
    41de:	b004      	add	sp, #16
    41e0:	bd80      	pop	{r7, pc}
    41e2:	46c0      	nop			; (mov r8, r8)

000041e4 <configure_port_pins>:
void configure_extint_callbacks(void);
void configure_port_pins(void);

// Configure the LED selection port as output
void configure_port_pins(void)
{
    41e4:	b580      	push	{r7, lr}
    41e6:	b082      	sub	sp, #8
    41e8:	af00      	add	r7, sp, #0
	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
    41ea:	1d3b      	adds	r3, r7, #4
    41ec:	0018      	movs	r0, r3
    41ee:	4b07      	ldr	r3, [pc, #28]	; (420c <configure_port_pins+0x28>)
    41f0:	4798      	blx	r3
	config_port_pin.direction = PORT_PIN_DIR_INPUT;
    41f2:	1d3b      	adds	r3, r7, #4
    41f4:	2200      	movs	r2, #0
    41f6:	701a      	strb	r2, [r3, #0]
	port_pin_set_config(PIN_PA03, &config_port_pin);
    41f8:	1d3b      	adds	r3, r7, #4
    41fa:	0019      	movs	r1, r3
    41fc:	2003      	movs	r0, #3
    41fe:	4b04      	ldr	r3, [pc, #16]	; (4210 <configure_port_pins+0x2c>)
    4200:	4798      	blx	r3
}
    4202:	46c0      	nop			; (mov r8, r8)
    4204:	46bd      	mov	sp, r7
    4206:	b002      	add	sp, #8
    4208:	bd80      	pop	{r7, pc}
    420a:	46c0      	nop			; (mov r8, r8)
    420c:	00003ebd 	.word	0x00003ebd
    4210:	00002fa1 	.word	0x00002fa1

00004214 <configure_extint_channel>:

///////////////////////// EXT INT ////////////////
void configure_extint_channel(void)
{
    4214:	b580      	push	{r7, lr}
    4216:	b084      	sub	sp, #16
    4218:	af00      	add	r7, sp, #0
	struct extint_chan_conf config_extint_chan;
	extint_chan_get_config_defaults(&config_extint_chan);
    421a:	1d3b      	adds	r3, r7, #4
    421c:	0018      	movs	r0, r3
    421e:	4b0b      	ldr	r3, [pc, #44]	; (424c <configure_extint_channel+0x38>)
    4220:	4798      	blx	r3
	config_extint_chan.gpio_pin           = PIN_PA03A_EIC_EXTINT3;
    4222:	1d3b      	adds	r3, r7, #4
    4224:	2203      	movs	r2, #3
    4226:	601a      	str	r2, [r3, #0]
	config_extint_chan.gpio_pin_mux       = MUX_PA03A_EIC_EXTINT3;
    4228:	1d3b      	adds	r3, r7, #4
    422a:	2200      	movs	r2, #0
    422c:	605a      	str	r2, [r3, #4]
	config_extint_chan.gpio_pin_pull      = EXTINT_PULL_UP;
    422e:	1d3b      	adds	r3, r7, #4
    4230:	2201      	movs	r2, #1
    4232:	721a      	strb	r2, [r3, #8]
	config_extint_chan.detection_criteria = EXTINT_DETECT_RISING;
    4234:	1d3b      	adds	r3, r7, #4
    4236:	2201      	movs	r2, #1
    4238:	72da      	strb	r2, [r3, #11]
	extint_chan_set_config(3, &config_extint_chan);
    423a:	1d3b      	adds	r3, r7, #4
    423c:	0019      	movs	r1, r3
    423e:	2003      	movs	r0, #3
    4240:	4b03      	ldr	r3, [pc, #12]	; (4250 <configure_extint_channel+0x3c>)
    4242:	4798      	blx	r3
}
    4244:	46c0      	nop			; (mov r8, r8)
    4246:	46bd      	mov	sp, r7
    4248:	b004      	add	sp, #16
    424a:	bd80      	pop	{r7, pc}
    424c:	000003b5 	.word	0x000003b5
    4250:	000003e9 	.word	0x000003e9

00004254 <configure_extint_callbacks>:
void configure_extint_callbacks(void)
{
    4254:	b580      	push	{r7, lr}
    4256:	af00      	add	r7, sp, #0
	extint_register_callback(isr0, 3, EXTINT_CALLBACK_TYPE_DETECT);
    4258:	4b06      	ldr	r3, [pc, #24]	; (4274 <configure_extint_callbacks+0x20>)
    425a:	2200      	movs	r2, #0
    425c:	2103      	movs	r1, #3
    425e:	0018      	movs	r0, r3
    4260:	4b05      	ldr	r3, [pc, #20]	; (4278 <configure_extint_callbacks+0x24>)
    4262:	4798      	blx	r3
	extint_chan_enable_callback(3, EXTINT_CALLBACK_TYPE_DETECT);
    4264:	2100      	movs	r1, #0
    4266:	2003      	movs	r0, #3
    4268:	4b04      	ldr	r3, [pc, #16]	; (427c <configure_extint_callbacks+0x28>)
    426a:	4798      	blx	r3
}
    426c:	46c0      	nop			; (mov r8, r8)
    426e:	46bd      	mov	sp, r7
    4270:	bd80      	pop	{r7, pc}
    4272:	46c0      	nop			; (mov r8, r8)
    4274:	00004d79 	.word	0x00004d79
    4278:	00000ed1 	.word	0x00000ed1
    427c:	00000f35 	.word	0x00000f35

00004280 <configure_RFM69_spi>:
struct spi_slave_inst slave;
void configure_RFM69_spi(void);
volatile uint16_t read_buf = 0;

void configure_RFM69_spi(void)
{
    4280:	b580      	push	{r7, lr}
    4282:	b090      	sub	sp, #64	; 0x40
    4284:	af00      	add	r7, sp, #0
	struct spi_config config_spi_master;
	struct spi_slave_inst_config slave_dev_config;
	/* Configure and initialize software device instance of peripheral slave */
	spi_slave_inst_get_config_defaults(&slave_dev_config);
    4286:	1d3b      	adds	r3, r7, #4
    4288:	0018      	movs	r0, r3
    428a:	4b21      	ldr	r3, [pc, #132]	; (4310 <configure_RFM69_spi+0x90>)
    428c:	4798      	blx	r3
	slave_dev_config.ss_pin = SLAVE_SELECT_PIN;
    428e:	1d3b      	adds	r3, r7, #4
    4290:	2212      	movs	r2, #18
    4292:	701a      	strb	r2, [r3, #0]
	spi_attach_slave(&slave, &slave_dev_config);
    4294:	1d3a      	adds	r2, r7, #4
    4296:	4b1f      	ldr	r3, [pc, #124]	; (4314 <configure_RFM69_spi+0x94>)
    4298:	0011      	movs	r1, r2
    429a:	0018      	movs	r0, r3
    429c:	4b1e      	ldr	r3, [pc, #120]	; (4318 <configure_RFM69_spi+0x98>)
    429e:	4798      	blx	r3
	/* Configure, initialize and enable SERCOM SPI module */
	spi_get_config_defaults(&config_spi_master);
    42a0:	2308      	movs	r3, #8
    42a2:	18fb      	adds	r3, r7, r3
    42a4:	0018      	movs	r0, r3
    42a6:	4b1d      	ldr	r3, [pc, #116]	; (431c <configure_RFM69_spi+0x9c>)
    42a8:	4798      	blx	r3
	/* Configure pad 0 for MOSI */
	/* Configure pad 1 for SCK */
	/* Configure pad 2 for SS (Unused) */
	/* Configure pad 3 for MISO */
	config_spi_master.mux_setting = SPI_SIGNAL_MUX_SETTING_D;
    42aa:	2308      	movs	r3, #8
    42ac:	18fb      	adds	r3, r7, r3
    42ae:	22c0      	movs	r2, #192	; 0xc0
    42b0:	0392      	lsls	r2, r2, #14
    42b2:	60da      	str	r2, [r3, #12]
	/* Configure pins used for SPI */
	config_spi_master.pinmux_pad0 = PINMUX_PA16C_SERCOM1_PAD0;
    42b4:	2308      	movs	r3, #8
    42b6:	18fb      	adds	r3, r7, r3
    42b8:	4a19      	ldr	r2, [pc, #100]	; (4320 <configure_RFM69_spi+0xa0>)
    42ba:	629a      	str	r2, [r3, #40]	; 0x28
	config_spi_master.pinmux_pad1 = PINMUX_PA17C_SERCOM1_PAD1;
    42bc:	2308      	movs	r3, #8
    42be:	18fb      	adds	r3, r7, r3
    42c0:	4a18      	ldr	r2, [pc, #96]	; (4324 <configure_RFM69_spi+0xa4>)
    42c2:	62da      	str	r2, [r3, #44]	; 0x2c
	config_spi_master.pinmux_pad2 = PINMUX_UNUSED;
    42c4:	2308      	movs	r3, #8
    42c6:	18fb      	adds	r3, r7, r3
    42c8:	2201      	movs	r2, #1
    42ca:	4252      	negs	r2, r2
    42cc:	631a      	str	r2, [r3, #48]	; 0x30
	config_spi_master.pinmux_pad3 = PINMUX_PA19C_SERCOM1_PAD3;
    42ce:	2308      	movs	r3, #8
    42d0:	18fb      	adds	r3, r7, r3
    42d2:	4a15      	ldr	r2, [pc, #84]	; (4328 <configure_RFM69_spi+0xa8>)
    42d4:	635a      	str	r2, [r3, #52]	; 0x34
	config_spi_master.data_order = SPI_DATA_ORDER_MSB;
    42d6:	2308      	movs	r3, #8
    42d8:	18fb      	adds	r3, r7, r3
    42da:	2200      	movs	r2, #0
    42dc:	605a      	str	r2, [r3, #4]
	config_spi_master.transfer_mode = SPI_TRANSFER_MODE_0;
    42de:	2308      	movs	r3, #8
    42e0:	18fb      	adds	r3, r7, r3
    42e2:	2200      	movs	r2, #0
    42e4:	609a      	str	r2, [r3, #8]
	spi_init(&spi_master_instance, SERCOM1, &config_spi_master);
    42e6:	2308      	movs	r3, #8
    42e8:	18fa      	adds	r2, r7, r3
    42ea:	4910      	ldr	r1, [pc, #64]	; (432c <configure_RFM69_spi+0xac>)
    42ec:	4b10      	ldr	r3, [pc, #64]	; (4330 <configure_RFM69_spi+0xb0>)
    42ee:	0018      	movs	r0, r3
    42f0:	4b10      	ldr	r3, [pc, #64]	; (4334 <configure_RFM69_spi+0xb4>)
    42f2:	4798      	blx	r3
	//spi_set_baudrate(&spi_master_instance, 9600);
	spi_enable(&spi_master_instance);
    42f4:	4b0e      	ldr	r3, [pc, #56]	; (4330 <configure_RFM69_spi+0xb0>)
    42f6:	0018      	movs	r0, r3
    42f8:	4b0f      	ldr	r3, [pc, #60]	; (4338 <configure_RFM69_spi+0xb8>)
    42fa:	4798      	blx	r3

	spi_select_slave(&spi_master_instance, &slave, false);
    42fc:	4905      	ldr	r1, [pc, #20]	; (4314 <configure_RFM69_spi+0x94>)
    42fe:	4b0c      	ldr	r3, [pc, #48]	; (4330 <configure_RFM69_spi+0xb0>)
    4300:	2200      	movs	r2, #0
    4302:	0018      	movs	r0, r3
    4304:	4b0d      	ldr	r3, [pc, #52]	; (433c <configure_RFM69_spi+0xbc>)
    4306:	4798      	blx	r3
}
    4308:	46c0      	nop			; (mov r8, r8)
    430a:	46bd      	mov	sp, r7
    430c:	b010      	add	sp, #64	; 0x40
    430e:	bd80      	pop	{r7, pc}
    4310:	000040dd 	.word	0x000040dd
    4314:	20000298 	.word	0x20000298
    4318:	00004101 	.word	0x00004101
    431c:	00004059 	.word	0x00004059
    4320:	00100002 	.word	0x00100002
    4324:	00110002 	.word	0x00110002
    4328:	00130002 	.word	0x00130002
    432c:	42000c00 	.word	0x42000c00
    4330:	20000218 	.word	0x20000218
    4334:	000022ad 	.word	0x000022ad
    4338:	00004165 	.word	0x00004165
    433c:	0000259d 	.word	0x0000259d

00004340 <configure_rtc_count>:
uint32_t millis(void);
void reset_millis(void);

////////////////////// RTC for millis() ///////////////////////////////////////
void configure_rtc_count(void)
{
    4340:	b580      	push	{r7, lr}
    4342:	b084      	sub	sp, #16
    4344:	af00      	add	r7, sp, #0
	struct rtc_count_config config_rtc_count;
	rtc_count_get_config_defaults(&config_rtc_count);
    4346:	003b      	movs	r3, r7
    4348:	0018      	movs	r0, r3
    434a:	4b0f      	ldr	r3, [pc, #60]	; (4388 <configure_rtc_count+0x48>)
    434c:	4798      	blx	r3
	config_rtc_count.prescaler           = RTC_COUNT_PRESCALER_DIV_1;
    434e:	003b      	movs	r3, r7
    4350:	2200      	movs	r2, #0
    4352:	801a      	strh	r2, [r3, #0]
	config_rtc_count.mode                = RTC_COUNT_MODE_16BIT;
    4354:	003b      	movs	r3, r7
    4356:	2200      	movs	r2, #0
    4358:	709a      	strb	r2, [r3, #2]
	config_rtc_count.continuously_update = true;
    435a:	003b      	movs	r3, r7
    435c:	2201      	movs	r2, #1
    435e:	711a      	strb	r2, [r3, #4]
	//config_rtc_count.compare_values[0] = 1000;
	rtc_count_init(&rtc_instance, RTC, &config_rtc_count);
    4360:	003a      	movs	r2, r7
    4362:	490a      	ldr	r1, [pc, #40]	; (438c <configure_rtc_count+0x4c>)
    4364:	4b0a      	ldr	r3, [pc, #40]	; (4390 <configure_rtc_count+0x50>)
    4366:	0018      	movs	r0, r3
    4368:	4b0a      	ldr	r3, [pc, #40]	; (4394 <configure_rtc_count+0x54>)
    436a:	4798      	blx	r3
	rtc_count_enable(&rtc_instance);
    436c:	4b08      	ldr	r3, [pc, #32]	; (4390 <configure_rtc_count+0x50>)
    436e:	0018      	movs	r0, r3
    4370:	4b09      	ldr	r3, [pc, #36]	; (4398 <configure_rtc_count+0x58>)
    4372:	4798      	blx	r3

	rtc_count_set_period(&rtc_instance, 10000);
    4374:	4a09      	ldr	r2, [pc, #36]	; (439c <configure_rtc_count+0x5c>)
    4376:	4b06      	ldr	r3, [pc, #24]	; (4390 <configure_rtc_count+0x50>)
    4378:	0011      	movs	r1, r2
    437a:	0018      	movs	r0, r3
    437c:	4b08      	ldr	r3, [pc, #32]	; (43a0 <configure_rtc_count+0x60>)
    437e:	4798      	blx	r3
}
    4380:	46c0      	nop			; (mov r8, r8)
    4382:	46bd      	mov	sp, r7
    4384:	b004      	add	sp, #16
    4386:	bd80      	pop	{r7, pc}
    4388:	00003fdd 	.word	0x00003fdd
    438c:	40001400 	.word	0x40001400
    4390:	200000fc 	.word	0x200000fc
    4394:	000007e5 	.word	0x000007e5
    4398:	000005dd 	.word	0x000005dd
    439c:	00002710 	.word	0x00002710
    43a0:	000009c9 	.word	0x000009c9

000043a4 <reset_millis>:

void reset_millis(void)
{
    43a4:	b580      	push	{r7, lr}
    43a6:	af00      	add	r7, sp, #0
	rtc_count_set_count(&rtc_instance, 0);
    43a8:	4b05      	ldr	r3, [pc, #20]	; (43c0 <reset_millis+0x1c>)
    43aa:	2100      	movs	r1, #0
    43ac:	0018      	movs	r0, r3
    43ae:	4b05      	ldr	r3, [pc, #20]	; (43c4 <reset_millis+0x20>)
    43b0:	4798      	blx	r3
	rtc_count_enable(&rtc_instance);
    43b2:	4b03      	ldr	r3, [pc, #12]	; (43c0 <reset_millis+0x1c>)
    43b4:	0018      	movs	r0, r3
    43b6:	4b04      	ldr	r3, [pc, #16]	; (43c8 <reset_millis+0x24>)
    43b8:	4798      	blx	r3
}
    43ba:	46c0      	nop			; (mov r8, r8)
    43bc:	46bd      	mov	sp, r7
    43be:	bd80      	pop	{r7, pc}
    43c0:	200000fc 	.word	0x200000fc
    43c4:	00000875 	.word	0x00000875
    43c8:	000005dd 	.word	0x000005dd

000043cc <millis>:

uint32_t millis(void)
{
    43cc:	b580      	push	{r7, lr}
    43ce:	b082      	sub	sp, #8
    43d0:	af00      	add	r7, sp, #0
    //rtc_count_set_count(&rtc_instance, 20);
	volatile uint32_t milli = 0;
    43d2:	2300      	movs	r3, #0
    43d4:	607b      	str	r3, [r7, #4]
	milli = rtc_count_get_count(&rtc_instance);
    43d6:	4b05      	ldr	r3, [pc, #20]	; (43ec <millis+0x20>)
    43d8:	0018      	movs	r0, r3
    43da:	4b05      	ldr	r3, [pc, #20]	; (43f0 <millis+0x24>)
    43dc:	4798      	blx	r3
    43de:	0003      	movs	r3, r0
    43e0:	607b      	str	r3, [r7, #4]
	return milli;
    43e2:	687b      	ldr	r3, [r7, #4]
}
    43e4:	0018      	movs	r0, r3
    43e6:	46bd      	mov	sp, r7
    43e8:	b002      	add	sp, #8
    43ea:	bd80      	pop	{r7, pc}
    43ec:	200000fc 	.word	0x200000fc
    43f0:	000008d5 	.word	0x000008d5

000043f4 <sendFrame>:



// internal function
void sendFrame(uint8_t toAddress, const void* buffer, uint8_t bufferSize, bool requestACK, bool sendACK)
{
    43f4:	b590      	push	{r4, r7, lr}
    43f6:	b085      	sub	sp, #20
    43f8:	af00      	add	r7, sp, #0
    43fa:	0004      	movs	r4, r0
    43fc:	6039      	str	r1, [r7, #0]
    43fe:	0010      	movs	r0, r2
    4400:	0019      	movs	r1, r3
    4402:	1dfb      	adds	r3, r7, #7
    4404:	1c22      	adds	r2, r4, #0
    4406:	701a      	strb	r2, [r3, #0]
    4408:	1dbb      	adds	r3, r7, #6
    440a:	1c02      	adds	r2, r0, #0
    440c:	701a      	strb	r2, [r3, #0]
    440e:	1d7b      	adds	r3, r7, #5
    4410:	1c0a      	adds	r2, r1, #0
    4412:	701a      	strb	r2, [r3, #0]
	setMode(RF69_MODE_STANDBY); // turn off receiver to prevent reception while filling fifo
    4414:	2001      	movs	r0, #1
    4416:	4b4b      	ldr	r3, [pc, #300]	; (4544 <sendFrame+0x150>)
    4418:	4798      	blx	r3
	while ((readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
    441a:	46c0      	nop			; (mov r8, r8)
    441c:	2027      	movs	r0, #39	; 0x27
    441e:	4b4a      	ldr	r3, [pc, #296]	; (4548 <sendFrame+0x154>)
    4420:	4798      	blx	r3
    4422:	0003      	movs	r3, r0
    4424:	b25b      	sxtb	r3, r3
    4426:	2b00      	cmp	r3, #0
    4428:	daf8      	bge.n	441c <sendFrame+0x28>
	writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_00); // DIO0 is "Packet Sent"
    442a:	2100      	movs	r1, #0
    442c:	2025      	movs	r0, #37	; 0x25
    442e:	4b47      	ldr	r3, [pc, #284]	; (454c <sendFrame+0x158>)
    4430:	4798      	blx	r3
	if (bufferSize > RF69_MAX_DATA_LEN) bufferSize = RF69_MAX_DATA_LEN;
    4432:	1dbb      	adds	r3, r7, #6
    4434:	781b      	ldrb	r3, [r3, #0]
    4436:	2b3d      	cmp	r3, #61	; 0x3d
    4438:	d902      	bls.n	4440 <sendFrame+0x4c>
    443a:	1dbb      	adds	r3, r7, #6
    443c:	223d      	movs	r2, #61	; 0x3d
    443e:	701a      	strb	r2, [r3, #0]

	// control byte
	volatile uint8_t CTLbyte = 0x00;
    4440:	230e      	movs	r3, #14
    4442:	18fb      	adds	r3, r7, r3
    4444:	2200      	movs	r2, #0
    4446:	701a      	strb	r2, [r3, #0]
	if (sendACK)
    4448:	2320      	movs	r3, #32
    444a:	18fb      	adds	r3, r7, r3
    444c:	781b      	ldrb	r3, [r3, #0]
    444e:	2b00      	cmp	r3, #0
    4450:	d004      	beq.n	445c <sendFrame+0x68>
	CTLbyte = RFM69_CTL_SENDACK;
    4452:	230e      	movs	r3, #14
    4454:	18fb      	adds	r3, r7, r3
    4456:	2280      	movs	r2, #128	; 0x80
    4458:	701a      	strb	r2, [r3, #0]
    445a:	e007      	b.n	446c <sendFrame+0x78>
	else if (requestACK)
    445c:	1d7b      	adds	r3, r7, #5
    445e:	781b      	ldrb	r3, [r3, #0]
    4460:	2b00      	cmp	r3, #0
    4462:	d003      	beq.n	446c <sendFrame+0x78>
	CTLbyte = RFM69_CTL_REQACK;
    4464:	230e      	movs	r3, #14
    4466:	18fb      	adds	r3, r7, r3
    4468:	2240      	movs	r2, #64	; 0x40
    446a:	701a      	strb	r2, [r3, #0]

	// write to FIFO
	radioselect();
    446c:	4b38      	ldr	r3, [pc, #224]	; (4550 <sendFrame+0x15c>)
    446e:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, REG_FIFO | 0x80, &read_buf); //SPI.transfer(REG_FIFO | 0x80); // CHANGE //
    4470:	4a38      	ldr	r2, [pc, #224]	; (4554 <sendFrame+0x160>)
    4472:	4b39      	ldr	r3, [pc, #228]	; (4558 <sendFrame+0x164>)
    4474:	2180      	movs	r1, #128	; 0x80
    4476:	0018      	movs	r0, r3
    4478:	4b38      	ldr	r3, [pc, #224]	; (455c <sendFrame+0x168>)
    447a:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, bufferSize + 3, &read_buf); //SPI.transfer(bufferSize + 3); // CHANGE //
    447c:	1dbb      	adds	r3, r7, #6
    447e:	781b      	ldrb	r3, [r3, #0]
    4480:	b29b      	uxth	r3, r3
    4482:	3303      	adds	r3, #3
    4484:	b299      	uxth	r1, r3
    4486:	4a33      	ldr	r2, [pc, #204]	; (4554 <sendFrame+0x160>)
    4488:	4b33      	ldr	r3, [pc, #204]	; (4558 <sendFrame+0x164>)
    448a:	0018      	movs	r0, r3
    448c:	4b33      	ldr	r3, [pc, #204]	; (455c <sendFrame+0x168>)
    448e:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, toAddress, &read_buf); //SPI.transfer(toAddress); // CHANGE //
    4490:	1dfb      	adds	r3, r7, #7
    4492:	781b      	ldrb	r3, [r3, #0]
    4494:	b299      	uxth	r1, r3
    4496:	4a2f      	ldr	r2, [pc, #188]	; (4554 <sendFrame+0x160>)
    4498:	4b2f      	ldr	r3, [pc, #188]	; (4558 <sendFrame+0x164>)
    449a:	0018      	movs	r0, r3
    449c:	4b2f      	ldr	r3, [pc, #188]	; (455c <sendFrame+0x168>)
    449e:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, _address, &read_buf); //SPI.transfer(_address); // CHANGE //
    44a0:	4b2f      	ldr	r3, [pc, #188]	; (4560 <sendFrame+0x16c>)
    44a2:	781b      	ldrb	r3, [r3, #0]
    44a4:	b2db      	uxtb	r3, r3
    44a6:	b299      	uxth	r1, r3
    44a8:	4a2a      	ldr	r2, [pc, #168]	; (4554 <sendFrame+0x160>)
    44aa:	4b2b      	ldr	r3, [pc, #172]	; (4558 <sendFrame+0x164>)
    44ac:	0018      	movs	r0, r3
    44ae:	4b2b      	ldr	r3, [pc, #172]	; (455c <sendFrame+0x168>)
    44b0:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, CTLbyte, &read_buf); //SPI.transfer(CTLbyte); // CHANGE //
    44b2:	230e      	movs	r3, #14
    44b4:	18fb      	adds	r3, r7, r3
    44b6:	781b      	ldrb	r3, [r3, #0]
    44b8:	b2db      	uxtb	r3, r3
    44ba:	b299      	uxth	r1, r3
    44bc:	4a25      	ldr	r2, [pc, #148]	; (4554 <sendFrame+0x160>)
    44be:	4b26      	ldr	r3, [pc, #152]	; (4558 <sendFrame+0x164>)
    44c0:	0018      	movs	r0, r3
    44c2:	4b26      	ldr	r3, [pc, #152]	; (455c <sendFrame+0x168>)
    44c4:	4798      	blx	r3

	for (uint8_t i = 0; i < bufferSize; i++)
    44c6:	230f      	movs	r3, #15
    44c8:	18fb      	adds	r3, r7, r3
    44ca:	2200      	movs	r2, #0
    44cc:	701a      	strb	r2, [r3, #0]
    44ce:	e012      	b.n	44f6 <sendFrame+0x102>
	spi_transceive_wait(&spi_master_instance, ((uint8_t*) buffer)[i], &read_buf); //SPI.transfer(((uint8_t*) buffer)[i]); // CHANGE //
    44d0:	230f      	movs	r3, #15
    44d2:	18fb      	adds	r3, r7, r3
    44d4:	781b      	ldrb	r3, [r3, #0]
    44d6:	683a      	ldr	r2, [r7, #0]
    44d8:	18d3      	adds	r3, r2, r3
    44da:	781b      	ldrb	r3, [r3, #0]
    44dc:	b299      	uxth	r1, r3
    44de:	4a1d      	ldr	r2, [pc, #116]	; (4554 <sendFrame+0x160>)
    44e0:	4b1d      	ldr	r3, [pc, #116]	; (4558 <sendFrame+0x164>)
    44e2:	0018      	movs	r0, r3
    44e4:	4b1d      	ldr	r3, [pc, #116]	; (455c <sendFrame+0x168>)
    44e6:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, bufferSize + 3, &read_buf); //SPI.transfer(bufferSize + 3); // CHANGE //
	spi_transceive_wait(&spi_master_instance, toAddress, &read_buf); //SPI.transfer(toAddress); // CHANGE //
	spi_transceive_wait(&spi_master_instance, _address, &read_buf); //SPI.transfer(_address); // CHANGE //
	spi_transceive_wait(&spi_master_instance, CTLbyte, &read_buf); //SPI.transfer(CTLbyte); // CHANGE //

	for (uint8_t i = 0; i < bufferSize; i++)
    44e8:	230f      	movs	r3, #15
    44ea:	18fb      	adds	r3, r7, r3
    44ec:	781a      	ldrb	r2, [r3, #0]
    44ee:	230f      	movs	r3, #15
    44f0:	18fb      	adds	r3, r7, r3
    44f2:	3201      	adds	r2, #1
    44f4:	701a      	strb	r2, [r3, #0]
    44f6:	230f      	movs	r3, #15
    44f8:	18fa      	adds	r2, r7, r3
    44fa:	1dbb      	adds	r3, r7, #6
    44fc:	7812      	ldrb	r2, [r2, #0]
    44fe:	781b      	ldrb	r3, [r3, #0]
    4500:	429a      	cmp	r2, r3
    4502:	d3e5      	bcc.n	44d0 <sendFrame+0xdc>
	spi_transceive_wait(&spi_master_instance, ((uint8_t*) buffer)[i], &read_buf); //SPI.transfer(((uint8_t*) buffer)[i]); // CHANGE //
	unselect();
    4504:	4b17      	ldr	r3, [pc, #92]	; (4564 <sendFrame+0x170>)
    4506:	4798      	blx	r3

	// no need to wait for transmit mode to be ready since its handled by the radio
	setMode(RF69_MODE_TX);
    4508:	2004      	movs	r0, #4
    450a:	4b0e      	ldr	r3, [pc, #56]	; (4544 <sendFrame+0x150>)
    450c:	4798      	blx	r3
	reset_millis(); //uint32_t txStart = millis(); // CHANGE //
    450e:	4b16      	ldr	r3, [pc, #88]	; (4568 <sendFrame+0x174>)
    4510:	4798      	blx	r3
	while (port_pin_get_input_level(PIN_PA03) == 0 && millis() < RF69_TX_LIMIT_MS); // wait for DIO0 to turn HIGH signalling transmission finish // CHANGE //
    4512:	46c0      	nop			; (mov r8, r8)
    4514:	2003      	movs	r0, #3
    4516:	4b15      	ldr	r3, [pc, #84]	; (456c <sendFrame+0x178>)
    4518:	4798      	blx	r3
    451a:	0003      	movs	r3, r0
    451c:	001a      	movs	r2, r3
    451e:	2301      	movs	r3, #1
    4520:	4053      	eors	r3, r2
    4522:	b2db      	uxtb	r3, r3
    4524:	2b00      	cmp	r3, #0
    4526:	d005      	beq.n	4534 <sendFrame+0x140>
    4528:	4b11      	ldr	r3, [pc, #68]	; (4570 <sendFrame+0x17c>)
    452a:	4798      	blx	r3
    452c:	1e02      	subs	r2, r0, #0
    452e:	4b11      	ldr	r3, [pc, #68]	; (4574 <sendFrame+0x180>)
    4530:	429a      	cmp	r2, r3
    4532:	d9ef      	bls.n	4514 <sendFrame+0x120>
	setMode(RF69_MODE_STANDBY);
    4534:	2001      	movs	r0, #1
    4536:	4b03      	ldr	r3, [pc, #12]	; (4544 <sendFrame+0x150>)
    4538:	4798      	blx	r3
}
    453a:	46c0      	nop			; (mov r8, r8)
    453c:	46bd      	mov	sp, r7
    453e:	b005      	add	sp, #20
    4540:	bd90      	pop	{r4, r7, pc}
    4542:	46c0      	nop			; (mov r8, r8)
    4544:	00004995 	.word	0x00004995
    4548:	00004f81 	.word	0x00004f81
    454c:	00004fe9 	.word	0x00004fe9
    4550:	00005049 	.word	0x00005049
    4554:	20000060 	.word	0x20000060
    4558:	20000218 	.word	0x20000218
    455c:	00002451 	.word	0x00002451
    4560:	20000158 	.word	0x20000158
    4564:	00005075 	.word	0x00005075
    4568:	000043a5 	.word	0x000043a5
    456c:	00003ee1 	.word	0x00003ee1
    4570:	000043cd 	.word	0x000043cd
    4574:	000003e7 	.word	0x000003e7

00004578 <RFM_setHighPower>:

// for RFM69HW only: you must call RFM_setHighPower(true) after RFM_initialize() or else transmission won't work
void RFM_setHighPower(bool onOff) {
    4578:	b580      	push	{r7, lr}
    457a:	b082      	sub	sp, #8
    457c:	af00      	add	r7, sp, #0
    457e:	0002      	movs	r2, r0
    4580:	1dfb      	adds	r3, r7, #7
    4582:	701a      	strb	r2, [r3, #0]
	_isRFM69HW = onOff;
    4584:	4b19      	ldr	r3, [pc, #100]	; (45ec <RFM_setHighPower+0x74>)
    4586:	1dfa      	adds	r2, r7, #7
    4588:	7812      	ldrb	r2, [r2, #0]
    458a:	701a      	strb	r2, [r3, #0]
	writeReg(REG_OCP, _isRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
    458c:	4b17      	ldr	r3, [pc, #92]	; (45ec <RFM_setHighPower+0x74>)
    458e:	781b      	ldrb	r3, [r3, #0]
    4590:	b2db      	uxtb	r3, r3
    4592:	2b00      	cmp	r3, #0
    4594:	d001      	beq.n	459a <RFM_setHighPower+0x22>
    4596:	230f      	movs	r3, #15
    4598:	e000      	b.n	459c <RFM_setHighPower+0x24>
    459a:	231a      	movs	r3, #26
    459c:	0019      	movs	r1, r3
    459e:	2013      	movs	r0, #19
    45a0:	4b13      	ldr	r3, [pc, #76]	; (45f0 <RFM_setHighPower+0x78>)
    45a2:	4798      	blx	r3
	if (_isRFM69HW) // turning ON
    45a4:	4b11      	ldr	r3, [pc, #68]	; (45ec <RFM_setHighPower+0x74>)
    45a6:	781b      	ldrb	r3, [r3, #0]
    45a8:	b2db      	uxtb	r3, r3
    45aa:	2b00      	cmp	r3, #0
    45ac:	d010      	beq.n	45d0 <RFM_setHighPower+0x58>
	writeReg(REG_PALEVEL, (readReg(REG_PALEVEL) & 0x1F) | RF_PALEVEL_PA1_ON | RF_PALEVEL_PA2_ON); // enable P1 & P2 amplifier stages
    45ae:	2011      	movs	r0, #17
    45b0:	4b10      	ldr	r3, [pc, #64]	; (45f4 <RFM_setHighPower+0x7c>)
    45b2:	4798      	blx	r3
    45b4:	0003      	movs	r3, r0
    45b6:	b25b      	sxtb	r3, r3
    45b8:	221f      	movs	r2, #31
    45ba:	4013      	ands	r3, r2
    45bc:	b25b      	sxtb	r3, r3
    45be:	2260      	movs	r2, #96	; 0x60
    45c0:	4313      	orrs	r3, r2
    45c2:	b25b      	sxtb	r3, r3
    45c4:	b2db      	uxtb	r3, r3
    45c6:	0019      	movs	r1, r3
    45c8:	2011      	movs	r0, #17
    45ca:	4b09      	ldr	r3, [pc, #36]	; (45f0 <RFM_setHighPower+0x78>)
    45cc:	4798      	blx	r3
	else
	writeReg(REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | _powerLevel); // enable P0 only
}
    45ce:	e009      	b.n	45e4 <RFM_setHighPower+0x6c>
	_isRFM69HW = onOff;
	writeReg(REG_OCP, _isRFM69HW ? RF_OCP_OFF : RF_OCP_ON);
	if (_isRFM69HW) // turning ON
	writeReg(REG_PALEVEL, (readReg(REG_PALEVEL) & 0x1F) | RF_PALEVEL_PA1_ON | RF_PALEVEL_PA2_ON); // enable P1 & P2 amplifier stages
	else
	writeReg(REG_PALEVEL, RF_PALEVEL_PA0_ON | RF_PALEVEL_PA1_OFF | RF_PALEVEL_PA2_OFF | _powerLevel); // enable P0 only
    45d0:	4b09      	ldr	r3, [pc, #36]	; (45f8 <RFM_setHighPower+0x80>)
    45d2:	781b      	ldrb	r3, [r3, #0]
    45d4:	2280      	movs	r2, #128	; 0x80
    45d6:	4252      	negs	r2, r2
    45d8:	4313      	orrs	r3, r2
    45da:	b2db      	uxtb	r3, r3
    45dc:	0019      	movs	r1, r3
    45de:	2011      	movs	r0, #17
    45e0:	4b03      	ldr	r3, [pc, #12]	; (45f0 <RFM_setHighPower+0x78>)
    45e2:	4798      	blx	r3
}
    45e4:	46c0      	nop			; (mov r8, r8)
    45e6:	46bd      	mov	sp, r7
    45e8:	b002      	add	sp, #8
    45ea:	bd80      	pop	{r7, pc}
    45ec:	20000214 	.word	0x20000214
    45f0:	00004fe9 	.word	0x00004fe9
    45f4:	00004f81 	.word	0x00004f81
    45f8:	20000114 	.word	0x20000114

000045fc <RFM69>:

void RFM69()
{
    45fc:	b580      	push	{r7, lr}
    45fe:	af00      	add	r7, sp, #0
	_mode = RF69_MODE_STANDBY;
    4600:	4b07      	ldr	r3, [pc, #28]	; (4620 <RFM69+0x24>)
    4602:	2201      	movs	r2, #1
    4604:	801a      	strh	r2, [r3, #0]
	_promiscuousMode = false;
    4606:	4b07      	ldr	r3, [pc, #28]	; (4624 <RFM69+0x28>)
    4608:	2200      	movs	r2, #0
    460a:	701a      	strb	r2, [r3, #0]
	_powerLevel = 31;
    460c:	4b06      	ldr	r3, [pc, #24]	; (4628 <RFM69+0x2c>)
    460e:	221f      	movs	r2, #31
    4610:	701a      	strb	r2, [r3, #0]
	_isRFM69HW = false;
    4612:	4b06      	ldr	r3, [pc, #24]	; (462c <RFM69+0x30>)
    4614:	2200      	movs	r2, #0
    4616:	701a      	strb	r2, [r3, #0]
}
    4618:	46c0      	nop			; (mov r8, r8)
    461a:	46bd      	mov	sp, r7
    461c:	bd80      	pop	{r7, pc}
    461e:	46c0      	nop			; (mov r8, r8)
    4620:	20000212 	.word	0x20000212
    4624:	20000160 	.word	0x20000160
    4628:	20000114 	.word	0x20000114
    462c:	20000214 	.word	0x20000214

00004630 <RFM_initialize>:

bool RFM_initialize(uint8_t freqBand, uint8_t nodeID, uint8_t networkID)
{
    4630:	b590      	push	{r4, r7, lr}
    4632:	b091      	sub	sp, #68	; 0x44
    4634:	af00      	add	r7, sp, #0
    4636:	0004      	movs	r4, r0
    4638:	0008      	movs	r0, r1
    463a:	0011      	movs	r1, r2
    463c:	1dfb      	adds	r3, r7, #7
    463e:	1c22      	adds	r2, r4, #0
    4640:	701a      	strb	r2, [r3, #0]
    4642:	1dbb      	adds	r3, r7, #6
    4644:	1c02      	adds	r2, r0, #0
    4646:	701a      	strb	r2, [r3, #0]
    4648:	1d7b      	adds	r3, r7, #5
    464a:	1c0a      	adds	r2, r1, #0
    464c:	701a      	strb	r2, [r3, #0]
  RFM69();
    464e:	4bc1      	ldr	r3, [pc, #772]	; (4954 <RFM_initialize+0x324>)
    4650:	4798      	blx	r3

  const uint8_t CONFIG[][2] =
    4652:	2310      	movs	r3, #16
    4654:	18fb      	adds	r3, r7, r3
    4656:	2201      	movs	r2, #1
    4658:	701a      	strb	r2, [r3, #0]
    465a:	2310      	movs	r3, #16
    465c:	18fb      	adds	r3, r7, r3
    465e:	2204      	movs	r2, #4
    4660:	705a      	strb	r2, [r3, #1]
    4662:	2310      	movs	r3, #16
    4664:	18fb      	adds	r3, r7, r3
    4666:	2202      	movs	r2, #2
    4668:	709a      	strb	r2, [r3, #2]
    466a:	2310      	movs	r3, #16
    466c:	18fb      	adds	r3, r7, r3
    466e:	2200      	movs	r2, #0
    4670:	70da      	strb	r2, [r3, #3]
    4672:	2310      	movs	r3, #16
    4674:	18fb      	adds	r3, r7, r3
    4676:	2203      	movs	r2, #3
    4678:	711a      	strb	r2, [r3, #4]
    467a:	2310      	movs	r3, #16
    467c:	18fb      	adds	r3, r7, r3
    467e:	2202      	movs	r2, #2
    4680:	715a      	strb	r2, [r3, #5]
    4682:	2310      	movs	r3, #16
    4684:	18fb      	adds	r3, r7, r3
    4686:	2204      	movs	r2, #4
    4688:	719a      	strb	r2, [r3, #6]
    468a:	2310      	movs	r3, #16
    468c:	18fb      	adds	r3, r7, r3
    468e:	2240      	movs	r2, #64	; 0x40
    4690:	71da      	strb	r2, [r3, #7]
    4692:	2310      	movs	r3, #16
    4694:	18fb      	adds	r3, r7, r3
    4696:	2205      	movs	r2, #5
    4698:	721a      	strb	r2, [r3, #8]
    469a:	2310      	movs	r3, #16
    469c:	18fb      	adds	r3, r7, r3
    469e:	2203      	movs	r2, #3
    46a0:	725a      	strb	r2, [r3, #9]
    46a2:	2310      	movs	r3, #16
    46a4:	18fb      	adds	r3, r7, r3
    46a6:	2206      	movs	r2, #6
    46a8:	729a      	strb	r2, [r3, #10]
    46aa:	2310      	movs	r3, #16
    46ac:	18fb      	adds	r3, r7, r3
    46ae:	2233      	movs	r2, #51	; 0x33
    46b0:	72da      	strb	r2, [r3, #11]
    46b2:	2310      	movs	r3, #16
    46b4:	18fb      	adds	r3, r7, r3
    46b6:	2207      	movs	r2, #7
    46b8:	731a      	strb	r2, [r3, #12]
    /* 0x03 */ { REG_BITRATEMSB, RF_BITRATEMSB_55555}, // default: 4.8 KBPS
    /* 0x04 */ { REG_BITRATELSB, RF_BITRATELSB_55555},
    /* 0x05 */ { REG_FDEVMSB, RF_FDEVMSB_50000}, // default: 5KHz, (FDEV + BitRate / 2 <= 500KHz)
    /* 0x06 */ { REG_FDEVLSB, RF_FDEVLSB_50000},

    /* 0x07 */ { REG_FRFMSB, (uint8_t) (freqBand==RF69_315MHZ ? RF_FRFMSB_315 : (freqBand==RF69_433MHZ ? RF_FRFMSB_433 : (freqBand==RF69_868MHZ ? RF_FRFMSB_868 : RF_FRFMSB_915))) },
    46ba:	1dfb      	adds	r3, r7, #7
    46bc:	781b      	ldrb	r3, [r3, #0]
    46be:	2b1f      	cmp	r3, #31
    46c0:	d00d      	beq.n	46de <RFM_initialize+0xae>
    46c2:	1dfb      	adds	r3, r7, #7
    46c4:	781b      	ldrb	r3, [r3, #0]
    46c6:	2b2b      	cmp	r3, #43	; 0x2b
    46c8:	d007      	beq.n	46da <RFM_initialize+0xaa>
    46ca:	1dfb      	adds	r3, r7, #7
    46cc:	781b      	ldrb	r3, [r3, #0]
    46ce:	2b56      	cmp	r3, #86	; 0x56
    46d0:	d101      	bne.n	46d6 <RFM_initialize+0xa6>
    46d2:	23d9      	movs	r3, #217	; 0xd9
    46d4:	e004      	b.n	46e0 <RFM_initialize+0xb0>
    46d6:	23e4      	movs	r3, #228	; 0xe4
    46d8:	e002      	b.n	46e0 <RFM_initialize+0xb0>
    46da:	236c      	movs	r3, #108	; 0x6c
    46dc:	e000      	b.n	46e0 <RFM_initialize+0xb0>
    46de:	234e      	movs	r3, #78	; 0x4e

bool RFM_initialize(uint8_t freqBand, uint8_t nodeID, uint8_t networkID)
{
  RFM69();

  const uint8_t CONFIG[][2] =
    46e0:	2210      	movs	r2, #16
    46e2:	18ba      	adds	r2, r7, r2
    46e4:	7353      	strb	r3, [r2, #13]
    46e6:	2310      	movs	r3, #16
    46e8:	18fb      	adds	r3, r7, r3
    46ea:	2208      	movs	r2, #8
    46ec:	739a      	strb	r2, [r3, #14]
    /* 0x04 */ { REG_BITRATELSB, RF_BITRATELSB_55555},
    /* 0x05 */ { REG_FDEVMSB, RF_FDEVMSB_50000}, // default: 5KHz, (FDEV + BitRate / 2 <= 500KHz)
    /* 0x06 */ { REG_FDEVLSB, RF_FDEVLSB_50000},

    /* 0x07 */ { REG_FRFMSB, (uint8_t) (freqBand==RF69_315MHZ ? RF_FRFMSB_315 : (freqBand==RF69_433MHZ ? RF_FRFMSB_433 : (freqBand==RF69_868MHZ ? RF_FRFMSB_868 : RF_FRFMSB_915))) },
    /* 0x08 */ { REG_FRFMID, (uint8_t) (freqBand==RF69_315MHZ ? RF_FRFMID_315 : (freqBand==RF69_433MHZ ? RF_FRFMID_433 : (freqBand==RF69_868MHZ ? RF_FRFMID_868 : RF_FRFMID_915))) },
    46ee:	1dfb      	adds	r3, r7, #7
    46f0:	781b      	ldrb	r3, [r3, #0]
    46f2:	2b1f      	cmp	r3, #31
    46f4:	d00d      	beq.n	4712 <RFM_initialize+0xe2>
    46f6:	1dfb      	adds	r3, r7, #7
    46f8:	781b      	ldrb	r3, [r3, #0]
    46fa:	2b2b      	cmp	r3, #43	; 0x2b
    46fc:	d007      	beq.n	470e <RFM_initialize+0xde>
    46fe:	1dfb      	adds	r3, r7, #7
    4700:	781b      	ldrb	r3, [r3, #0]
    4702:	2b56      	cmp	r3, #86	; 0x56
    4704:	d101      	bne.n	470a <RFM_initialize+0xda>
    4706:	2300      	movs	r3, #0
    4708:	e004      	b.n	4714 <RFM_initialize+0xe4>
    470a:	23c0      	movs	r3, #192	; 0xc0
    470c:	e002      	b.n	4714 <RFM_initialize+0xe4>
    470e:	2340      	movs	r3, #64	; 0x40
    4710:	e000      	b.n	4714 <RFM_initialize+0xe4>
    4712:	23c0      	movs	r3, #192	; 0xc0

bool RFM_initialize(uint8_t freqBand, uint8_t nodeID, uint8_t networkID)
{
  RFM69();

  const uint8_t CONFIG[][2] =
    4714:	2210      	movs	r2, #16
    4716:	18ba      	adds	r2, r7, r2
    4718:	73d3      	strb	r3, [r2, #15]
    471a:	2310      	movs	r3, #16
    471c:	18fb      	adds	r3, r7, r3
    471e:	2209      	movs	r2, #9
    4720:	741a      	strb	r2, [r3, #16]
    4722:	2310      	movs	r3, #16
    4724:	18fb      	adds	r3, r7, r3
    4726:	2200      	movs	r2, #0
    4728:	745a      	strb	r2, [r3, #17]
    472a:	2310      	movs	r3, #16
    472c:	18fb      	adds	r3, r7, r3
    472e:	2219      	movs	r2, #25
    4730:	749a      	strb	r2, [r3, #18]
    4732:	2310      	movs	r3, #16
    4734:	18fb      	adds	r3, r7, r3
    4736:	2242      	movs	r2, #66	; 0x42
    4738:	74da      	strb	r2, [r3, #19]
    473a:	2310      	movs	r3, #16
    473c:	18fb      	adds	r3, r7, r3
    473e:	2225      	movs	r2, #37	; 0x25
    4740:	751a      	strb	r2, [r3, #20]
    4742:	2310      	movs	r3, #16
    4744:	18fb      	adds	r3, r7, r3
    4746:	2240      	movs	r2, #64	; 0x40
    4748:	755a      	strb	r2, [r3, #21]
    474a:	2310      	movs	r3, #16
    474c:	18fb      	adds	r3, r7, r3
    474e:	2226      	movs	r2, #38	; 0x26
    4750:	759a      	strb	r2, [r3, #22]
    4752:	2310      	movs	r3, #16
    4754:	18fb      	adds	r3, r7, r3
    4756:	2207      	movs	r2, #7
    4758:	75da      	strb	r2, [r3, #23]
    475a:	2310      	movs	r3, #16
    475c:	18fb      	adds	r3, r7, r3
    475e:	2228      	movs	r2, #40	; 0x28
    4760:	761a      	strb	r2, [r3, #24]
    4762:	2310      	movs	r3, #16
    4764:	18fb      	adds	r3, r7, r3
    4766:	2210      	movs	r2, #16
    4768:	765a      	strb	r2, [r3, #25]
    476a:	2310      	movs	r3, #16
    476c:	18fb      	adds	r3, r7, r3
    476e:	2229      	movs	r2, #41	; 0x29
    4770:	769a      	strb	r2, [r3, #26]
    4772:	2310      	movs	r3, #16
    4774:	18fb      	adds	r3, r7, r3
    4776:	22dc      	movs	r2, #220	; 0xdc
    4778:	76da      	strb	r2, [r3, #27]
    477a:	2310      	movs	r3, #16
    477c:	18fb      	adds	r3, r7, r3
    477e:	222e      	movs	r2, #46	; 0x2e
    4780:	771a      	strb	r2, [r3, #28]
    4782:	2310      	movs	r3, #16
    4784:	18fb      	adds	r3, r7, r3
    4786:	2288      	movs	r2, #136	; 0x88
    4788:	775a      	strb	r2, [r3, #29]
    478a:	2310      	movs	r3, #16
    478c:	18fb      	adds	r3, r7, r3
    478e:	222f      	movs	r2, #47	; 0x2f
    4790:	779a      	strb	r2, [r3, #30]
    4792:	2310      	movs	r3, #16
    4794:	18fb      	adds	r3, r7, r3
    4796:	222d      	movs	r2, #45	; 0x2d
    4798:	77da      	strb	r2, [r3, #31]
    479a:	2310      	movs	r3, #16
    479c:	18fb      	adds	r3, r7, r3
    479e:	2220      	movs	r2, #32
    47a0:	2130      	movs	r1, #48	; 0x30
    47a2:	5499      	strb	r1, [r3, r2]
    47a4:	2310      	movs	r3, #16
    47a6:	18fb      	adds	r3, r7, r3
    47a8:	1d7a      	adds	r2, r7, #5
    47aa:	2121      	movs	r1, #33	; 0x21
    47ac:	7812      	ldrb	r2, [r2, #0]
    47ae:	545a      	strb	r2, [r3, r1]
    47b0:	2310      	movs	r3, #16
    47b2:	18fb      	adds	r3, r7, r3
    47b4:	2222      	movs	r2, #34	; 0x22
    47b6:	2137      	movs	r1, #55	; 0x37
    47b8:	5499      	strb	r1, [r3, r2]
    47ba:	2310      	movs	r3, #16
    47bc:	18fb      	adds	r3, r7, r3
    47be:	2223      	movs	r2, #35	; 0x23
    47c0:	2190      	movs	r1, #144	; 0x90
    47c2:	5499      	strb	r1, [r3, r2]
    47c4:	2310      	movs	r3, #16
    47c6:	18fb      	adds	r3, r7, r3
    47c8:	2224      	movs	r2, #36	; 0x24
    47ca:	2138      	movs	r1, #56	; 0x38
    47cc:	5499      	strb	r1, [r3, r2]
    47ce:	2310      	movs	r3, #16
    47d0:	18fb      	adds	r3, r7, r3
    47d2:	2225      	movs	r2, #37	; 0x25
    47d4:	2142      	movs	r1, #66	; 0x42
    47d6:	5499      	strb	r1, [r3, r2]
    47d8:	2310      	movs	r3, #16
    47da:	18fb      	adds	r3, r7, r3
    47dc:	2226      	movs	r2, #38	; 0x26
    47de:	213c      	movs	r1, #60	; 0x3c
    47e0:	5499      	strb	r1, [r3, r2]
    47e2:	2310      	movs	r3, #16
    47e4:	18fb      	adds	r3, r7, r3
    47e6:	2227      	movs	r2, #39	; 0x27
    47e8:	218f      	movs	r1, #143	; 0x8f
    47ea:	5499      	strb	r1, [r3, r2]
    47ec:	2310      	movs	r3, #16
    47ee:	18fb      	adds	r3, r7, r3
    47f0:	2228      	movs	r2, #40	; 0x28
    47f2:	213d      	movs	r1, #61	; 0x3d
    47f4:	5499      	strb	r1, [r3, r2]
    47f6:	2310      	movs	r3, #16
    47f8:	18fb      	adds	r3, r7, r3
    47fa:	2229      	movs	r2, #41	; 0x29
    47fc:	2112      	movs	r1, #18
    47fe:	5499      	strb	r1, [r3, r2]
    4800:	2310      	movs	r3, #16
    4802:	18fb      	adds	r3, r7, r3
    4804:	222a      	movs	r2, #42	; 0x2a
    4806:	216f      	movs	r1, #111	; 0x6f
    4808:	5499      	strb	r1, [r3, r2]
    480a:	2310      	movs	r3, #16
    480c:	18fb      	adds	r3, r7, r3
    480e:	222b      	movs	r2, #43	; 0x2b
    4810:	2130      	movs	r1, #48	; 0x30
    4812:	5499      	strb	r1, [r3, r2]
    4814:	2310      	movs	r3, #16
    4816:	18fb      	adds	r3, r7, r3
    4818:	222c      	movs	r2, #44	; 0x2c
    481a:	21ff      	movs	r1, #255	; 0xff
    481c:	5499      	strb	r1, [r3, r2]
    481e:	2310      	movs	r3, #16
    4820:	18fb      	adds	r3, r7, r3
    4822:	222d      	movs	r2, #45	; 0x2d
    4824:	2100      	movs	r1, #0
    4826:	5499      	strb	r1, [r3, r2]

  //digitalWrite(_slaveSelectPin, HIGH); // CHANGE //
  //pinMode(_slaveSelectPin, OUTPUT); // CHANGE //
  //SPI.begin(); // CHANGE //

  configure_RFM69_spi();
    4828:	4b4b      	ldr	r3, [pc, #300]	; (4958 <RFM_initialize+0x328>)
    482a:	4798      	blx	r3
  configure_rtc_count(); // Configure the RTC module for millis
    482c:	4b4b      	ldr	r3, [pc, #300]	; (495c <RFM_initialize+0x32c>)
    482e:	4798      	blx	r3
  configure_port_pins();
    4830:	4b4b      	ldr	r3, [pc, #300]	; (4960 <RFM_initialize+0x330>)
    4832:	4798      	blx	r3
  configure_extint_channel();
    4834:	4b4b      	ldr	r3, [pc, #300]	; (4964 <RFM_initialize+0x334>)
    4836:	4798      	blx	r3


  reset_millis(); //unsigned long start = millis(); // CHANGE // 
    4838:	4b4b      	ldr	r3, [pc, #300]	; (4968 <RFM_initialize+0x338>)
    483a:	4798      	blx	r3
  volatile uint8_t timeout = 50;
    483c:	230f      	movs	r3, #15
    483e:	18fb      	adds	r3, r7, r3
    4840:	2232      	movs	r2, #50	; 0x32
    4842:	701a      	strb	r2, [r3, #0]
  do 
	writeReg(REG_SYNCVALUE1, 0xAA); 
    4844:	21aa      	movs	r1, #170	; 0xaa
    4846:	202f      	movs	r0, #47	; 0x2f
    4848:	4b48      	ldr	r3, [pc, #288]	; (496c <RFM_initialize+0x33c>)
    484a:	4798      	blx	r3
  while (readReg(REG_SYNCVALUE1) != 0xaa && millis() < timeout); // CHANGE // 
    484c:	202f      	movs	r0, #47	; 0x2f
    484e:	4b48      	ldr	r3, [pc, #288]	; (4970 <RFM_initialize+0x340>)
    4850:	4798      	blx	r3
    4852:	1e03      	subs	r3, r0, #0
    4854:	2baa      	cmp	r3, #170	; 0xaa
    4856:	d008      	beq.n	486a <RFM_initialize+0x23a>
    4858:	4b46      	ldr	r3, [pc, #280]	; (4974 <RFM_initialize+0x344>)
    485a:	4798      	blx	r3
    485c:	0002      	movs	r2, r0
    485e:	230f      	movs	r3, #15
    4860:	18fb      	adds	r3, r7, r3
    4862:	781b      	ldrb	r3, [r3, #0]
    4864:	b2db      	uxtb	r3, r3
    4866:	429a      	cmp	r2, r3
    4868:	d3ec      	bcc.n	4844 <RFM_initialize+0x214>
  
  reset_millis(); //start = millis(); // CHANGE // 
    486a:	4b3f      	ldr	r3, [pc, #252]	; (4968 <RFM_initialize+0x338>)
    486c:	4798      	blx	r3
  do writeReg(REG_SYNCVALUE1, 0x55); while (readReg(REG_SYNCVALUE1) != 0x55 && millis() < timeout); // CHANGE // 
    486e:	2155      	movs	r1, #85	; 0x55
    4870:	202f      	movs	r0, #47	; 0x2f
    4872:	4b3e      	ldr	r3, [pc, #248]	; (496c <RFM_initialize+0x33c>)
    4874:	4798      	blx	r3
    4876:	202f      	movs	r0, #47	; 0x2f
    4878:	4b3d      	ldr	r3, [pc, #244]	; (4970 <RFM_initialize+0x340>)
    487a:	4798      	blx	r3
    487c:	1e03      	subs	r3, r0, #0
    487e:	2b55      	cmp	r3, #85	; 0x55
    4880:	d008      	beq.n	4894 <RFM_initialize+0x264>
    4882:	4b3c      	ldr	r3, [pc, #240]	; (4974 <RFM_initialize+0x344>)
    4884:	4798      	blx	r3
    4886:	0002      	movs	r2, r0
    4888:	230f      	movs	r3, #15
    488a:	18fb      	adds	r3, r7, r3
    488c:	781b      	ldrb	r3, [r3, #0]
    488e:	b2db      	uxtb	r3, r3
    4890:	429a      	cmp	r2, r3
    4892:	d3ec      	bcc.n	486e <RFM_initialize+0x23e>

  for (uint8_t i = 0; CONFIG[i][0] != 255; i++)
    4894:	233f      	movs	r3, #63	; 0x3f
    4896:	18fb      	adds	r3, r7, r3
    4898:	2200      	movs	r2, #0
    489a:	701a      	strb	r2, [r3, #0]
    489c:	e019      	b.n	48d2 <RFM_initialize+0x2a2>
    writeReg(CONFIG[i][0], CONFIG[i][1]);
    489e:	233f      	movs	r3, #63	; 0x3f
    48a0:	18fb      	adds	r3, r7, r3
    48a2:	781a      	ldrb	r2, [r3, #0]
    48a4:	2310      	movs	r3, #16
    48a6:	18fb      	adds	r3, r7, r3
    48a8:	0052      	lsls	r2, r2, #1
    48aa:	5cd0      	ldrb	r0, [r2, r3]
    48ac:	233f      	movs	r3, #63	; 0x3f
    48ae:	18fb      	adds	r3, r7, r3
    48b0:	781b      	ldrb	r3, [r3, #0]
    48b2:	2210      	movs	r2, #16
    48b4:	18ba      	adds	r2, r7, r2
    48b6:	005b      	lsls	r3, r3, #1
    48b8:	18d3      	adds	r3, r2, r3
    48ba:	3301      	adds	r3, #1
    48bc:	781b      	ldrb	r3, [r3, #0]
    48be:	0019      	movs	r1, r3
    48c0:	4b2a      	ldr	r3, [pc, #168]	; (496c <RFM_initialize+0x33c>)
    48c2:	4798      	blx	r3
  while (readReg(REG_SYNCVALUE1) != 0xaa && millis() < timeout); // CHANGE // 
  
  reset_millis(); //start = millis(); // CHANGE // 
  do writeReg(REG_SYNCVALUE1, 0x55); while (readReg(REG_SYNCVALUE1) != 0x55 && millis() < timeout); // CHANGE // 

  for (uint8_t i = 0; CONFIG[i][0] != 255; i++)
    48c4:	233f      	movs	r3, #63	; 0x3f
    48c6:	18fb      	adds	r3, r7, r3
    48c8:	781a      	ldrb	r2, [r3, #0]
    48ca:	233f      	movs	r3, #63	; 0x3f
    48cc:	18fb      	adds	r3, r7, r3
    48ce:	3201      	adds	r2, #1
    48d0:	701a      	strb	r2, [r3, #0]
    48d2:	233f      	movs	r3, #63	; 0x3f
    48d4:	18fb      	adds	r3, r7, r3
    48d6:	781a      	ldrb	r2, [r3, #0]
    48d8:	2310      	movs	r3, #16
    48da:	18fb      	adds	r3, r7, r3
    48dc:	0052      	lsls	r2, r2, #1
    48de:	5cd3      	ldrb	r3, [r2, r3]
    48e0:	2bff      	cmp	r3, #255	; 0xff
    48e2:	d1dc      	bne.n	489e <RFM_initialize+0x26e>
    writeReg(CONFIG[i][0], CONFIG[i][1]);

  // Encryption is persistent between resets and can trip you up during debugging.
  // Disable it during initialization so we always start from a known state.
  RFM_encrypt(0);
    48e4:	2000      	movs	r0, #0
    48e6:	4b24      	ldr	r3, [pc, #144]	; (4978 <RFM_initialize+0x348>)
    48e8:	4798      	blx	r3

  RFM_setHighPower(_isRFM69HW); // called regardless if it's a RFM69W or RFM69HW
    48ea:	4b24      	ldr	r3, [pc, #144]	; (497c <RFM_initialize+0x34c>)
    48ec:	781b      	ldrb	r3, [r3, #0]
    48ee:	b2db      	uxtb	r3, r3
    48f0:	0018      	movs	r0, r3
    48f2:	4b23      	ldr	r3, [pc, #140]	; (4980 <RFM_initialize+0x350>)
    48f4:	4798      	blx	r3
  setMode(RF69_MODE_STANDBY);
    48f6:	2001      	movs	r0, #1
    48f8:	4b22      	ldr	r3, [pc, #136]	; (4984 <RFM_initialize+0x354>)
    48fa:	4798      	blx	r3
  reset_millis(); //start = get_timer();
    48fc:	4b1a      	ldr	r3, [pc, #104]	; (4968 <RFM_initialize+0x338>)
    48fe:	4798      	blx	r3
  while (((readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00) && millis() < timeout); // wait for ModeReady  // CHANGE //
    4900:	46c0      	nop			; (mov r8, r8)
    4902:	2027      	movs	r0, #39	; 0x27
    4904:	4b1a      	ldr	r3, [pc, #104]	; (4970 <RFM_initialize+0x340>)
    4906:	4798      	blx	r3
    4908:	0003      	movs	r3, r0
    490a:	b25b      	sxtb	r3, r3
    490c:	2b00      	cmp	r3, #0
    490e:	db08      	blt.n	4922 <RFM_initialize+0x2f2>
    4910:	4b18      	ldr	r3, [pc, #96]	; (4974 <RFM_initialize+0x344>)
    4912:	4798      	blx	r3
    4914:	0002      	movs	r2, r0
    4916:	230f      	movs	r3, #15
    4918:	18fb      	adds	r3, r7, r3
    491a:	781b      	ldrb	r3, [r3, #0]
    491c:	b2db      	uxtb	r3, r3
    491e:	429a      	cmp	r2, r3
    4920:	d3ef      	bcc.n	4902 <RFM_initialize+0x2d2>
  if (millis() >= timeout) // CHANGE //
    4922:	4b14      	ldr	r3, [pc, #80]	; (4974 <RFM_initialize+0x344>)
    4924:	4798      	blx	r3
    4926:	0002      	movs	r2, r0
    4928:	230f      	movs	r3, #15
    492a:	18fb      	adds	r3, r7, r3
    492c:	781b      	ldrb	r3, [r3, #0]
    492e:	b2db      	uxtb	r3, r3
    4930:	429a      	cmp	r2, r3
    4932:	d301      	bcc.n	4938 <RFM_initialize+0x308>
    return false;
    4934:	2300      	movs	r3, #0
    4936:	e009      	b.n	494c <RFM_initialize+0x31c>
  _inISR = false;
    4938:	4b13      	ldr	r3, [pc, #76]	; (4988 <RFM_initialize+0x358>)
    493a:	2200      	movs	r2, #0
    493c:	701a      	strb	r2, [r3, #0]

  configure_extint_callbacks(); //attachInterrupt(_interruptNum, isr0, RISING); // CHANGE //
    493e:	4b13      	ldr	r3, [pc, #76]	; (498c <RFM_initialize+0x35c>)
    4940:	4798      	blx	r3

  _address = nodeID;
    4942:	4b13      	ldr	r3, [pc, #76]	; (4990 <RFM_initialize+0x360>)
    4944:	1dba      	adds	r2, r7, #6
    4946:	7812      	ldrb	r2, [r2, #0]
    4948:	701a      	strb	r2, [r3, #0]
  return true;
    494a:	2301      	movs	r3, #1
}
    494c:	0018      	movs	r0, r3
    494e:	46bd      	mov	sp, r7
    4950:	b011      	add	sp, #68	; 0x44
    4952:	bd90      	pop	{r4, r7, pc}
    4954:	000045fd 	.word	0x000045fd
    4958:	00004281 	.word	0x00004281
    495c:	00004341 	.word	0x00004341
    4960:	000041e5 	.word	0x000041e5
    4964:	00004215 	.word	0x00004215
    4968:	000043a5 	.word	0x000043a5
    496c:	00004fe9 	.word	0x00004fe9
    4970:	00004f81 	.word	0x00004f81
    4974:	000043cd 	.word	0x000043cd
    4978:	00004e8d 	.word	0x00004e8d
    497c:	20000214 	.word	0x20000214
    4980:	00004579 	.word	0x00004579
    4984:	00004995 	.word	0x00004995
    4988:	20000115 	.word	0x20000115
    498c:	00004255 	.word	0x00004255
    4990:	20000158 	.word	0x20000158

00004994 <setMode>:
  }
  setMode(oldMode);
}

void setMode(uint8_t newMode)
{
    4994:	b580      	push	{r7, lr}
    4996:	b082      	sub	sp, #8
    4998:	af00      	add	r7, sp, #0
    499a:	0002      	movs	r2, r0
    499c:	1dfb      	adds	r3, r7, #7
    499e:	701a      	strb	r2, [r3, #0]
  if (newMode == _mode)
    49a0:	1dfb      	adds	r3, r7, #7
    49a2:	781b      	ldrb	r3, [r3, #0]
    49a4:	b29a      	uxth	r2, r3
    49a6:	4b47      	ldr	r3, [pc, #284]	; (4ac4 <setMode+0x130>)
    49a8:	881b      	ldrh	r3, [r3, #0]
    49aa:	b29b      	uxth	r3, r3
    49ac:	429a      	cmp	r2, r3
    49ae:	d100      	bne.n	49b2 <setMode+0x1e>
    49b0:	e081      	b.n	4ab6 <setMode+0x122>
    return;

  switch (newMode) {
    49b2:	1dfb      	adds	r3, r7, #7
    49b4:	781b      	ldrb	r3, [r3, #0]
    49b6:	2b04      	cmp	r3, #4
    49b8:	d900      	bls.n	49bc <setMode+0x28>
    49ba:	e07e      	b.n	4aba <setMode+0x126>
    49bc:	009a      	lsls	r2, r3, #2
    49be:	4b42      	ldr	r3, [pc, #264]	; (4ac8 <setMode+0x134>)
    49c0:	18d3      	adds	r3, r2, r3
    49c2:	681b      	ldr	r3, [r3, #0]
    49c4:	469f      	mov	pc, r3
    case RF69_MODE_TX:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_TRANSMITTER);
    49c6:	2001      	movs	r0, #1
    49c8:	4b40      	ldr	r3, [pc, #256]	; (4acc <setMode+0x138>)
    49ca:	4798      	blx	r3
    49cc:	0003      	movs	r3, r0
    49ce:	b25b      	sxtb	r3, r3
    49d0:	221c      	movs	r2, #28
    49d2:	4393      	bics	r3, r2
    49d4:	b25b      	sxtb	r3, r3
    49d6:	220c      	movs	r2, #12
    49d8:	4313      	orrs	r3, r2
    49da:	b25b      	sxtb	r3, r3
    49dc:	b2db      	uxtb	r3, r3
    49de:	0019      	movs	r1, r3
    49e0:	2001      	movs	r0, #1
    49e2:	4b3b      	ldr	r3, [pc, #236]	; (4ad0 <setMode+0x13c>)
    49e4:	4798      	blx	r3
      if (_isRFM69HW) setHighPowerRegs(true);
    49e6:	4b3b      	ldr	r3, [pc, #236]	; (4ad4 <setMode+0x140>)
    49e8:	781b      	ldrb	r3, [r3, #0]
    49ea:	b2db      	uxtb	r3, r3
    49ec:	2b00      	cmp	r3, #0
    49ee:	d04c      	beq.n	4a8a <setMode+0xf6>
    49f0:	2001      	movs	r0, #1
    49f2:	4b39      	ldr	r3, [pc, #228]	; (4ad8 <setMode+0x144>)
    49f4:	4798      	blx	r3
      break;
    49f6:	e048      	b.n	4a8a <setMode+0xf6>
    case RF69_MODE_RX:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_RECEIVER);
    49f8:	2001      	movs	r0, #1
    49fa:	4b34      	ldr	r3, [pc, #208]	; (4acc <setMode+0x138>)
    49fc:	4798      	blx	r3
    49fe:	0003      	movs	r3, r0
    4a00:	b25b      	sxtb	r3, r3
    4a02:	221c      	movs	r2, #28
    4a04:	4393      	bics	r3, r2
    4a06:	b25b      	sxtb	r3, r3
    4a08:	2210      	movs	r2, #16
    4a0a:	4313      	orrs	r3, r2
    4a0c:	b25b      	sxtb	r3, r3
    4a0e:	b2db      	uxtb	r3, r3
    4a10:	0019      	movs	r1, r3
    4a12:	2001      	movs	r0, #1
    4a14:	4b2e      	ldr	r3, [pc, #184]	; (4ad0 <setMode+0x13c>)
    4a16:	4798      	blx	r3
      if (_isRFM69HW) setHighPowerRegs(false);
    4a18:	4b2e      	ldr	r3, [pc, #184]	; (4ad4 <setMode+0x140>)
    4a1a:	781b      	ldrb	r3, [r3, #0]
    4a1c:	b2db      	uxtb	r3, r3
    4a1e:	2b00      	cmp	r3, #0
    4a20:	d035      	beq.n	4a8e <setMode+0xfa>
    4a22:	2000      	movs	r0, #0
    4a24:	4b2c      	ldr	r3, [pc, #176]	; (4ad8 <setMode+0x144>)
    4a26:	4798      	blx	r3
      break;
    4a28:	e031      	b.n	4a8e <setMode+0xfa>
    case RF69_MODE_SYNTH:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SYNTHESIZER);
    4a2a:	2001      	movs	r0, #1
    4a2c:	4b27      	ldr	r3, [pc, #156]	; (4acc <setMode+0x138>)
    4a2e:	4798      	blx	r3
    4a30:	0003      	movs	r3, r0
    4a32:	b25b      	sxtb	r3, r3
    4a34:	221c      	movs	r2, #28
    4a36:	4393      	bics	r3, r2
    4a38:	b25b      	sxtb	r3, r3
    4a3a:	2208      	movs	r2, #8
    4a3c:	4313      	orrs	r3, r2
    4a3e:	b25b      	sxtb	r3, r3
    4a40:	b2db      	uxtb	r3, r3
    4a42:	0019      	movs	r1, r3
    4a44:	2001      	movs	r0, #1
    4a46:	4b22      	ldr	r3, [pc, #136]	; (4ad0 <setMode+0x13c>)
    4a48:	4798      	blx	r3
      break;
    4a4a:	e021      	b.n	4a90 <setMode+0xfc>
    case RF69_MODE_STANDBY:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_STANDBY);
    4a4c:	2001      	movs	r0, #1
    4a4e:	4b1f      	ldr	r3, [pc, #124]	; (4acc <setMode+0x138>)
    4a50:	4798      	blx	r3
    4a52:	0003      	movs	r3, r0
    4a54:	b25b      	sxtb	r3, r3
    4a56:	221c      	movs	r2, #28
    4a58:	4393      	bics	r3, r2
    4a5a:	b25b      	sxtb	r3, r3
    4a5c:	2204      	movs	r2, #4
    4a5e:	4313      	orrs	r3, r2
    4a60:	b25b      	sxtb	r3, r3
    4a62:	b2db      	uxtb	r3, r3
    4a64:	0019      	movs	r1, r3
    4a66:	2001      	movs	r0, #1
    4a68:	4b19      	ldr	r3, [pc, #100]	; (4ad0 <setMode+0x13c>)
    4a6a:	4798      	blx	r3
      break;
    4a6c:	e010      	b.n	4a90 <setMode+0xfc>
    case RF69_MODE_SLEEP:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SLEEP);
    4a6e:	2001      	movs	r0, #1
    4a70:	4b16      	ldr	r3, [pc, #88]	; (4acc <setMode+0x138>)
    4a72:	4798      	blx	r3
    4a74:	0003      	movs	r3, r0
    4a76:	001a      	movs	r2, r3
    4a78:	231c      	movs	r3, #28
    4a7a:	439a      	bics	r2, r3
    4a7c:	0013      	movs	r3, r2
    4a7e:	b2db      	uxtb	r3, r3
    4a80:	0019      	movs	r1, r3
    4a82:	2001      	movs	r0, #1
    4a84:	4b12      	ldr	r3, [pc, #72]	; (4ad0 <setMode+0x13c>)
    4a86:	4798      	blx	r3
      break;
    4a88:	e002      	b.n	4a90 <setMode+0xfc>

  switch (newMode) {
    case RF69_MODE_TX:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_TRANSMITTER);
      if (_isRFM69HW) setHighPowerRegs(true);
      break;
    4a8a:	46c0      	nop			; (mov r8, r8)
    4a8c:	e000      	b.n	4a90 <setMode+0xfc>
    case RF69_MODE_RX:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_RECEIVER);
      if (_isRFM69HW) setHighPowerRegs(false);
      break;
    4a8e:	46c0      	nop			; (mov r8, r8)
      return;
  }

  // we are using packet mode, so this check is not really needed
  // but waiting for mode ready is necessary when going from sleep because the FIFO may not be immediately available from previous mode
  while (_mode == RF69_MODE_SLEEP && (readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady
    4a90:	46c0      	nop			; (mov r8, r8)
    4a92:	4b0c      	ldr	r3, [pc, #48]	; (4ac4 <setMode+0x130>)
    4a94:	881b      	ldrh	r3, [r3, #0]
    4a96:	b29b      	uxth	r3, r3
    4a98:	2b00      	cmp	r3, #0
    4a9a:	d106      	bne.n	4aaa <setMode+0x116>
    4a9c:	2027      	movs	r0, #39	; 0x27
    4a9e:	4b0b      	ldr	r3, [pc, #44]	; (4acc <setMode+0x138>)
    4aa0:	4798      	blx	r3
    4aa2:	0003      	movs	r3, r0
    4aa4:	b25b      	sxtb	r3, r3
    4aa6:	2b00      	cmp	r3, #0
    4aa8:	daf3      	bge.n	4a92 <setMode+0xfe>

  _mode = newMode;
    4aaa:	1dfb      	adds	r3, r7, #7
    4aac:	781b      	ldrb	r3, [r3, #0]
    4aae:	b29a      	uxth	r2, r3
    4ab0:	4b04      	ldr	r3, [pc, #16]	; (4ac4 <setMode+0x130>)
    4ab2:	801a      	strh	r2, [r3, #0]
    4ab4:	e002      	b.n	4abc <setMode+0x128>
}

void setMode(uint8_t newMode)
{
  if (newMode == _mode)
    return;
    4ab6:	46c0      	nop			; (mov r8, r8)
    4ab8:	e000      	b.n	4abc <setMode+0x128>
      break;
    case RF69_MODE_SLEEP:
      writeReg(REG_OPMODE, (readReg(REG_OPMODE) & 0xE3) | RF_OPMODE_SLEEP);
      break;
    default:
      return;
    4aba:	46c0      	nop			; (mov r8, r8)
  // we are using packet mode, so this check is not really needed
  // but waiting for mode ready is necessary when going from sleep because the FIFO may not be immediately available from previous mode
  while (_mode == RF69_MODE_SLEEP && (readReg(REG_IRQFLAGS1) & RF_IRQFLAGS1_MODEREADY) == 0x00); // wait for ModeReady

  _mode = newMode;
}
    4abc:	46bd      	mov	sp, r7
    4abe:	b002      	add	sp, #8
    4ac0:	bd80      	pop	{r7, pc}
    4ac2:	46c0      	nop			; (mov r8, r8)
    4ac4:	20000212 	.word	0x20000212
    4ac8:	0000586c 	.word	0x0000586c
    4acc:	00004f81 	.word	0x00004f81
    4ad0:	00004fe9 	.word	0x00004fe9
    4ad4:	20000214 	.word	0x20000214
    4ad8:	000050a1 	.word	0x000050a1

00004adc <canSend>:
  if (_isRFM69HW) _powerLevel /= 2;
  writeReg(REG_PALEVEL, (readReg(REG_PALEVEL) & 0xE0) | _powerLevel);
}

bool canSend()
{
    4adc:	b580      	push	{r7, lr}
    4ade:	af00      	add	r7, sp, #0
  if (_mode == RF69_MODE_RX && PAYLOADLEN == 0 && readRSSI() < CSMA_LIMIT) // if signal stronger than -100dBm is detected assume channel activity
    4ae0:	4b0b      	ldr	r3, [pc, #44]	; (4b10 <canSend+0x34>)
    4ae2:	881b      	ldrh	r3, [r3, #0]
    4ae4:	b29b      	uxth	r3, r3
    4ae6:	2b03      	cmp	r3, #3
    4ae8:	d10e      	bne.n	4b08 <canSend+0x2c>
    4aea:	4b0a      	ldr	r3, [pc, #40]	; (4b14 <canSend+0x38>)
    4aec:	881b      	ldrh	r3, [r3, #0]
    4aee:	b29b      	uxth	r3, r3
    4af0:	2b00      	cmp	r3, #0
    4af2:	d109      	bne.n	4b08 <canSend+0x2c>
    4af4:	4b08      	ldr	r3, [pc, #32]	; (4b18 <canSend+0x3c>)
    4af6:	4798      	blx	r3
    4af8:	0003      	movs	r3, r0
    4afa:	335a      	adds	r3, #90	; 0x5a
    4afc:	da04      	bge.n	4b08 <canSend+0x2c>
  {
    setMode(RF69_MODE_STANDBY);
    4afe:	2001      	movs	r0, #1
    4b00:	4b06      	ldr	r3, [pc, #24]	; (4b1c <canSend+0x40>)
    4b02:	4798      	blx	r3
    return true;
    4b04:	2301      	movs	r3, #1
    4b06:	e000      	b.n	4b0a <canSend+0x2e>
  }
  return false;
    4b08:	2300      	movs	r3, #0
}
    4b0a:	0018      	movs	r0, r3
    4b0c:	46bd      	mov	sp, r7
    4b0e:	bd80      	pop	{r7, pc}
    4b10:	20000212 	.word	0x20000212
    4b14:	200001e0 	.word	0x200001e0
    4b18:	00004f41 	.word	0x00004f41
    4b1c:	00004995 	.word	0x00004995

00004b20 <RFM_send>:

void RFM_send(uint8_t toAddress, const void* buffer, uint8_t bufferSize, bool requestACK)
{
    4b20:	b590      	push	{r4, r7, lr}
    4b22:	b085      	sub	sp, #20
    4b24:	af02      	add	r7, sp, #8
    4b26:	0004      	movs	r4, r0
    4b28:	6039      	str	r1, [r7, #0]
    4b2a:	0010      	movs	r0, r2
    4b2c:	0019      	movs	r1, r3
    4b2e:	1dfb      	adds	r3, r7, #7
    4b30:	1c22      	adds	r2, r4, #0
    4b32:	701a      	strb	r2, [r3, #0]
    4b34:	1dbb      	adds	r3, r7, #6
    4b36:	1c02      	adds	r2, r0, #0
    4b38:	701a      	strb	r2, [r3, #0]
    4b3a:	1d7b      	adds	r3, r7, #5
    4b3c:	1c0a      	adds	r2, r1, #0
    4b3e:	701a      	strb	r2, [r3, #0]
  writeReg(REG_PACKETCONFIG2, (readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTART); // avoid RX deadlocks
    4b40:	203d      	movs	r0, #61	; 0x3d
    4b42:	4b17      	ldr	r3, [pc, #92]	; (4ba0 <RFM_send+0x80>)
    4b44:	4798      	blx	r3
    4b46:	0003      	movs	r3, r0
    4b48:	001a      	movs	r2, r3
    4b4a:	2304      	movs	r3, #4
    4b4c:	4313      	orrs	r3, r2
    4b4e:	b2db      	uxtb	r3, r3
    4b50:	0019      	movs	r1, r3
    4b52:	203d      	movs	r0, #61	; 0x3d
    4b54:	4b13      	ldr	r3, [pc, #76]	; (4ba4 <RFM_send+0x84>)
    4b56:	4798      	blx	r3
  reset_millis(); //uint32_t now = millis(); // CHANGE //
    4b58:	4b13      	ldr	r3, [pc, #76]	; (4ba8 <RFM_send+0x88>)
    4b5a:	4798      	blx	r3
  while (!canSend() && millis() < RF69_CSMA_LIMIT_MS) RFM_receiveDone(); // CHANGE //
    4b5c:	e001      	b.n	4b62 <RFM_send+0x42>
    4b5e:	4b13      	ldr	r3, [pc, #76]	; (4bac <RFM_send+0x8c>)
    4b60:	4798      	blx	r3
    4b62:	4b13      	ldr	r3, [pc, #76]	; (4bb0 <RFM_send+0x90>)
    4b64:	4798      	blx	r3
    4b66:	0003      	movs	r3, r0
    4b68:	001a      	movs	r2, r3
    4b6a:	2301      	movs	r3, #1
    4b6c:	4053      	eors	r3, r2
    4b6e:	b2db      	uxtb	r3, r3
    4b70:	2b00      	cmp	r3, #0
    4b72:	d005      	beq.n	4b80 <RFM_send+0x60>
    4b74:	4b0f      	ldr	r3, [pc, #60]	; (4bb4 <RFM_send+0x94>)
    4b76:	4798      	blx	r3
    4b78:	1e02      	subs	r2, r0, #0
    4b7a:	4b0f      	ldr	r3, [pc, #60]	; (4bb8 <RFM_send+0x98>)
    4b7c:	429a      	cmp	r2, r3
    4b7e:	d9ee      	bls.n	4b5e <RFM_send+0x3e>
  sendFrame(toAddress, buffer, bufferSize, requestACK, false);
    4b80:	1d7b      	adds	r3, r7, #5
    4b82:	781c      	ldrb	r4, [r3, #0]
    4b84:	1dbb      	adds	r3, r7, #6
    4b86:	781a      	ldrb	r2, [r3, #0]
    4b88:	6839      	ldr	r1, [r7, #0]
    4b8a:	1dfb      	adds	r3, r7, #7
    4b8c:	7818      	ldrb	r0, [r3, #0]
    4b8e:	2300      	movs	r3, #0
    4b90:	9300      	str	r3, [sp, #0]
    4b92:	0023      	movs	r3, r4
    4b94:	4c09      	ldr	r4, [pc, #36]	; (4bbc <RFM_send+0x9c>)
    4b96:	47a0      	blx	r4
}
    4b98:	46c0      	nop			; (mov r8, r8)
    4b9a:	46bd      	mov	sp, r7
    4b9c:	b003      	add	sp, #12
    4b9e:	bd90      	pop	{r4, r7, pc}
    4ba0:	00004f81 	.word	0x00004f81
    4ba4:	00004fe9 	.word	0x00004fe9
    4ba8:	000043a5 	.word	0x000043a5
    4bac:	00004e31 	.word	0x00004e31
    4bb0:	00004add 	.word	0x00004add
    4bb4:	000043cd 	.word	0x000043cd
    4bb8:	000003e7 	.word	0x000003e7
    4bbc:	000043f5 	.word	0x000043f5

00004bc0 <interruptHandler>:
  sendFrame(sender, buffer, bufferSize, false, true);
  RFM_RSSI = _RSSI; // restore payload RSSI
}

// internal function - interrupt gets called when a packet is received
void interruptHandler() {
    4bc0:	b580      	push	{r7, lr}
    4bc2:	b082      	sub	sp, #8
    4bc4:	af00      	add	r7, sp, #0
  if (_mode == RF69_MODE_RX && (readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY)) //
    4bc6:	4b58      	ldr	r3, [pc, #352]	; (4d28 <interruptHandler+0x168>)
    4bc8:	881b      	ldrh	r3, [r3, #0]
    4bca:	b29b      	uxth	r3, r3
    4bcc:	2b03      	cmp	r3, #3
    4bce:	d000      	beq.n	4bd2 <interruptHandler+0x12>
    4bd0:	e0a1      	b.n	4d16 <interruptHandler+0x156>
    4bd2:	2028      	movs	r0, #40	; 0x28
    4bd4:	4b55      	ldr	r3, [pc, #340]	; (4d2c <interruptHandler+0x16c>)
    4bd6:	4798      	blx	r3
    4bd8:	0003      	movs	r3, r0
    4bda:	001a      	movs	r2, r3
    4bdc:	2304      	movs	r3, #4
    4bde:	4013      	ands	r3, r2
    4be0:	d100      	bne.n	4be4 <interruptHandler+0x24>
    4be2:	e098      	b.n	4d16 <interruptHandler+0x156>
  {
    setMode(RF69_MODE_STANDBY);
    4be4:	2001      	movs	r0, #1
    4be6:	4b52      	ldr	r3, [pc, #328]	; (4d30 <interruptHandler+0x170>)
    4be8:	4798      	blx	r3
    radioselect();
    4bea:	4b52      	ldr	r3, [pc, #328]	; (4d34 <interruptHandler+0x174>)
    4bec:	4798      	blx	r3
    spi_transceive_wait(&spi_master_instance, REG_FIFO & 0x7F, &read_buf); //SPI.transfer(REG_FIFO & 0x7F); // CHANGE //
    4bee:	4a52      	ldr	r2, [pc, #328]	; (4d38 <interruptHandler+0x178>)
    4bf0:	4b52      	ldr	r3, [pc, #328]	; (4d3c <interruptHandler+0x17c>)
    4bf2:	2100      	movs	r1, #0
    4bf4:	0018      	movs	r0, r3
    4bf6:	4b52      	ldr	r3, [pc, #328]	; (4d40 <interruptHandler+0x180>)
    4bf8:	4798      	blx	r3
    spi_transceive_wait(&spi_master_instance, 0, &PAYLOADLEN); //SPI.transfer(0); // CHANGE //
    4bfa:	4a52      	ldr	r2, [pc, #328]	; (4d44 <interruptHandler+0x184>)
    4bfc:	4b4f      	ldr	r3, [pc, #316]	; (4d3c <interruptHandler+0x17c>)
    4bfe:	2100      	movs	r1, #0
    4c00:	0018      	movs	r0, r3
    4c02:	4b4f      	ldr	r3, [pc, #316]	; (4d40 <interruptHandler+0x180>)
    4c04:	4798      	blx	r3
    PAYLOADLEN = PAYLOADLEN > 66 ? 66 : PAYLOADLEN; // precaution
    4c06:	4b4f      	ldr	r3, [pc, #316]	; (4d44 <interruptHandler+0x184>)
    4c08:	881b      	ldrh	r3, [r3, #0]
    4c0a:	b29b      	uxth	r3, r3
    4c0c:	2b42      	cmp	r3, #66	; 0x42
    4c0e:	d803      	bhi.n	4c18 <interruptHandler+0x58>
    4c10:	4b4c      	ldr	r3, [pc, #304]	; (4d44 <interruptHandler+0x184>)
    4c12:	881b      	ldrh	r3, [r3, #0]
    4c14:	b29a      	uxth	r2, r3
    4c16:	e000      	b.n	4c1a <interruptHandler+0x5a>
    4c18:	2242      	movs	r2, #66	; 0x42
    4c1a:	4b4a      	ldr	r3, [pc, #296]	; (4d44 <interruptHandler+0x184>)
    4c1c:	801a      	strh	r2, [r3, #0]
    spi_transceive_wait(&spi_master_instance, 0, &TARGETID); //SPI.transfer(0); // CHANGE //
    4c1e:	4a4a      	ldr	r2, [pc, #296]	; (4d48 <interruptHandler+0x188>)
    4c20:	4b46      	ldr	r3, [pc, #280]	; (4d3c <interruptHandler+0x17c>)
    4c22:	2100      	movs	r1, #0
    4c24:	0018      	movs	r0, r3
    4c26:	4b46      	ldr	r3, [pc, #280]	; (4d40 <interruptHandler+0x180>)
    4c28:	4798      	blx	r3
    if(!(_promiscuousMode || TARGETID == _address || TARGETID == RF69_BROADCAST_ADDR) // match this node's address, or broadcast address or anything in promiscuous mode
    4c2a:	4b48      	ldr	r3, [pc, #288]	; (4d4c <interruptHandler+0x18c>)
    4c2c:	781b      	ldrb	r3, [r3, #0]
    4c2e:	b2db      	uxtb	r3, r3
    4c30:	2201      	movs	r2, #1
    4c32:	4053      	eors	r3, r2
    4c34:	b2db      	uxtb	r3, r3
    4c36:	2b00      	cmp	r3, #0
    4c38:	d00d      	beq.n	4c56 <interruptHandler+0x96>
    4c3a:	4b45      	ldr	r3, [pc, #276]	; (4d50 <interruptHandler+0x190>)
    4c3c:	781b      	ldrb	r3, [r3, #0]
    4c3e:	b2db      	uxtb	r3, r3
    4c40:	b29a      	uxth	r2, r3
    4c42:	4b41      	ldr	r3, [pc, #260]	; (4d48 <interruptHandler+0x188>)
    4c44:	881b      	ldrh	r3, [r3, #0]
    4c46:	b29b      	uxth	r3, r3
    4c48:	429a      	cmp	r2, r3
    4c4a:	d004      	beq.n	4c56 <interruptHandler+0x96>
    4c4c:	4b3e      	ldr	r3, [pc, #248]	; (4d48 <interruptHandler+0x188>)
    4c4e:	881b      	ldrh	r3, [r3, #0]
    4c50:	b29b      	uxth	r3, r3
    4c52:	2bff      	cmp	r3, #255	; 0xff
    4c54:	d104      	bne.n	4c60 <interruptHandler+0xa0>
       || PAYLOADLEN < 3) // address situation could receive packets that are malformed and don't fit this libraries extra fields
    4c56:	4b3b      	ldr	r3, [pc, #236]	; (4d44 <interruptHandler+0x184>)
    4c58:	881b      	ldrh	r3, [r3, #0]
    4c5a:	b29b      	uxth	r3, r3
    4c5c:	2b02      	cmp	r3, #2
    4c5e:	d807      	bhi.n	4c70 <interruptHandler+0xb0>
    {
      PAYLOADLEN = 0;
    4c60:	4b38      	ldr	r3, [pc, #224]	; (4d44 <interruptHandler+0x184>)
    4c62:	2200      	movs	r2, #0
    4c64:	801a      	strh	r2, [r3, #0]
      unselect();
    4c66:	4b3b      	ldr	r3, [pc, #236]	; (4d54 <interruptHandler+0x194>)
    4c68:	4798      	blx	r3
      receiveBegin();
    4c6a:	4b3b      	ldr	r3, [pc, #236]	; (4d58 <interruptHandler+0x198>)
    4c6c:	4798      	blx	r3
    4c6e:	e058      	b.n	4d22 <interruptHandler+0x162>
      return;
    }

    RFM_DATALEN = PAYLOADLEN - 3;
    4c70:	4b34      	ldr	r3, [pc, #208]	; (4d44 <interruptHandler+0x184>)
    4c72:	881b      	ldrh	r3, [r3, #0]
    4c74:	b29b      	uxth	r3, r3
    4c76:	3b03      	subs	r3, #3
    4c78:	b29a      	uxth	r2, r3
    4c7a:	4b38      	ldr	r3, [pc, #224]	; (4d5c <interruptHandler+0x19c>)
    4c7c:	801a      	strh	r2, [r3, #0]
    spi_transceive_wait(&spi_master_instance, 0, &RFM_SENDERID); //SPI.transfer(0); // CHANGE //
    4c7e:	4a38      	ldr	r2, [pc, #224]	; (4d60 <interruptHandler+0x1a0>)
    4c80:	4b2e      	ldr	r3, [pc, #184]	; (4d3c <interruptHandler+0x17c>)
    4c82:	2100      	movs	r1, #0
    4c84:	0018      	movs	r0, r3
    4c86:	4b2e      	ldr	r3, [pc, #184]	; (4d40 <interruptHandler+0x180>)
    4c88:	4798      	blx	r3
    uint8_t CTLbyte = 0;
    4c8a:	1dbb      	adds	r3, r7, #6
    4c8c:	2200      	movs	r2, #0
    4c8e:	701a      	strb	r2, [r3, #0]
	spi_transceive_wait(&spi_master_instance, 0, &CTLbyte); //SPI.transfer(0); // CHANGE //
    4c90:	1dba      	adds	r2, r7, #6
    4c92:	4b2a      	ldr	r3, [pc, #168]	; (4d3c <interruptHandler+0x17c>)
    4c94:	2100      	movs	r1, #0
    4c96:	0018      	movs	r0, r3
    4c98:	4b29      	ldr	r3, [pc, #164]	; (4d40 <interruptHandler+0x180>)
    4c9a:	4798      	blx	r3

    ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
    4c9c:	1dbb      	adds	r3, r7, #6
    4c9e:	781b      	ldrb	r3, [r3, #0]
    4ca0:	b29b      	uxth	r3, r3
    4ca2:	2280      	movs	r2, #128	; 0x80
    4ca4:	4013      	ands	r3, r2
    4ca6:	b29a      	uxth	r2, r3
    4ca8:	4b2e      	ldr	r3, [pc, #184]	; (4d64 <interruptHandler+0x1a4>)
    4caa:	801a      	strh	r2, [r3, #0]
    ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag
    4cac:	1dbb      	adds	r3, r7, #6
    4cae:	781b      	ldrb	r3, [r3, #0]
    4cb0:	b29b      	uxth	r3, r3
    4cb2:	2240      	movs	r2, #64	; 0x40
    4cb4:	4013      	ands	r3, r2
    4cb6:	b29a      	uxth	r2, r3
    4cb8:	4b2b      	ldr	r3, [pc, #172]	; (4d68 <interruptHandler+0x1a8>)
    4cba:	801a      	strh	r2, [r3, #0]

    for (uint8_t i = 0; i < RFM_DATALEN; i++)
    4cbc:	1dfb      	adds	r3, r7, #7
    4cbe:	2200      	movs	r2, #0
    4cc0:	701a      	strb	r2, [r3, #0]
    4cc2:	e00e      	b.n	4ce2 <interruptHandler+0x122>
    {
      spi_transceive_wait(&spi_master_instance, 0, RFM_DATA + i); //SPI.transfer(0); // CHANGE //
    4cc4:	1dfb      	adds	r3, r7, #7
    4cc6:	781b      	ldrb	r3, [r3, #0]
    4cc8:	005a      	lsls	r2, r3, #1
    4cca:	4b28      	ldr	r3, [pc, #160]	; (4d6c <interruptHandler+0x1ac>)
    4ccc:	18d2      	adds	r2, r2, r3
    4cce:	4b1b      	ldr	r3, [pc, #108]	; (4d3c <interruptHandler+0x17c>)
    4cd0:	2100      	movs	r1, #0
    4cd2:	0018      	movs	r0, r3
    4cd4:	4b1a      	ldr	r3, [pc, #104]	; (4d40 <interruptHandler+0x180>)
    4cd6:	4798      	blx	r3
	spi_transceive_wait(&spi_master_instance, 0, &CTLbyte); //SPI.transfer(0); // CHANGE //

    ACK_RECEIVED = CTLbyte & RFM69_CTL_SENDACK; // extract ACK-received flag
    ACK_REQUESTED = CTLbyte & RFM69_CTL_REQACK; // extract ACK-requested flag

    for (uint8_t i = 0; i < RFM_DATALEN; i++)
    4cd8:	1dfb      	adds	r3, r7, #7
    4cda:	781a      	ldrb	r2, [r3, #0]
    4cdc:	1dfb      	adds	r3, r7, #7
    4cde:	3201      	adds	r2, #1
    4ce0:	701a      	strb	r2, [r3, #0]
    4ce2:	1dfb      	adds	r3, r7, #7
    4ce4:	781b      	ldrb	r3, [r3, #0]
    4ce6:	b29a      	uxth	r2, r3
    4ce8:	4b1c      	ldr	r3, [pc, #112]	; (4d5c <interruptHandler+0x19c>)
    4cea:	881b      	ldrh	r3, [r3, #0]
    4cec:	b29b      	uxth	r3, r3
    4cee:	429a      	cmp	r2, r3
    4cf0:	d3e8      	bcc.n	4cc4 <interruptHandler+0x104>
    {
      spi_transceive_wait(&spi_master_instance, 0, RFM_DATA + i); //SPI.transfer(0); // CHANGE //
    }
    if (RFM_DATALEN < RF69_MAX_DATA_LEN) RFM_DATA[RFM_DATALEN] = 0; // add null at end of string
    4cf2:	4b1a      	ldr	r3, [pc, #104]	; (4d5c <interruptHandler+0x19c>)
    4cf4:	881b      	ldrh	r3, [r3, #0]
    4cf6:	b29b      	uxth	r3, r3
    4cf8:	2b3c      	cmp	r3, #60	; 0x3c
    4cfa:	d807      	bhi.n	4d0c <interruptHandler+0x14c>
    4cfc:	4b17      	ldr	r3, [pc, #92]	; (4d5c <interruptHandler+0x19c>)
    4cfe:	881b      	ldrh	r3, [r3, #0]
    4d00:	b29b      	uxth	r3, r3
    4d02:	001a      	movs	r2, r3
    4d04:	4b19      	ldr	r3, [pc, #100]	; (4d6c <interruptHandler+0x1ac>)
    4d06:	0052      	lsls	r2, r2, #1
    4d08:	2100      	movs	r1, #0
    4d0a:	52d1      	strh	r1, [r2, r3]
    unselect();
    4d0c:	4b11      	ldr	r3, [pc, #68]	; (4d54 <interruptHandler+0x194>)
    4d0e:	4798      	blx	r3
    setMode(RF69_MODE_RX);
    4d10:	2003      	movs	r0, #3
    4d12:	4b07      	ldr	r3, [pc, #28]	; (4d30 <interruptHandler+0x170>)
    4d14:	4798      	blx	r3
  }
  RFM_RSSI = readRSSI();
    4d16:	4b16      	ldr	r3, [pc, #88]	; (4d70 <interruptHandler+0x1b0>)
    4d18:	4798      	blx	r3
    4d1a:	0003      	movs	r3, r0
    4d1c:	001a      	movs	r2, r3
    4d1e:	4b15      	ldr	r3, [pc, #84]	; (4d74 <interruptHandler+0x1b4>)
    4d20:	801a      	strh	r2, [r3, #0]
}
    4d22:	46bd      	mov	sp, r7
    4d24:	b002      	add	sp, #8
    4d26:	bd80      	pop	{r7, pc}
    4d28:	20000212 	.word	0x20000212
    4d2c:	00004f81 	.word	0x00004f81
    4d30:	00004995 	.word	0x00004995
    4d34:	00005049 	.word	0x00005049
    4d38:	20000060 	.word	0x20000060
    4d3c:	20000218 	.word	0x20000218
    4d40:	00002451 	.word	0x00002451
    4d44:	200001e0 	.word	0x200001e0
    4d48:	20000210 	.word	0x20000210
    4d4c:	20000160 	.word	0x20000160
    4d50:	20000158 	.word	0x20000158
    4d54:	00005075 	.word	0x00005075
    4d58:	00004d9d 	.word	0x00004d9d
    4d5c:	2000015e 	.word	0x2000015e
    4d60:	200000fa 	.word	0x200000fa
    4d64:	2000015c 	.word	0x2000015c
    4d68:	2000020e 	.word	0x2000020e
    4d6c:	20000164 	.word	0x20000164
    4d70:	00004f41 	.word	0x00004f41
    4d74:	20000254 	.word	0x20000254

00004d78 <isr0>:

// internal function
void isr0()
{ 
    4d78:	b580      	push	{r7, lr}
    4d7a:	af00      	add	r7, sp, #0
	_inISR = true; 
    4d7c:	4b05      	ldr	r3, [pc, #20]	; (4d94 <isr0+0x1c>)
    4d7e:	2201      	movs	r2, #1
    4d80:	701a      	strb	r2, [r3, #0]
	interruptHandler(); 
    4d82:	4b05      	ldr	r3, [pc, #20]	; (4d98 <isr0+0x20>)
    4d84:	4798      	blx	r3
	_inISR = false;
    4d86:	4b03      	ldr	r3, [pc, #12]	; (4d94 <isr0+0x1c>)
    4d88:	2200      	movs	r2, #0
    4d8a:	701a      	strb	r2, [r3, #0]
} // CHANGE //?
    4d8c:	46c0      	nop			; (mov r8, r8)
    4d8e:	46bd      	mov	sp, r7
    4d90:	bd80      	pop	{r7, pc}
    4d92:	46c0      	nop			; (mov r8, r8)
    4d94:	20000115 	.word	0x20000115
    4d98:	00004bc1 	.word	0x00004bc1

00004d9c <receiveBegin>:

// internal function
void receiveBegin() {
    4d9c:	b580      	push	{r7, lr}
    4d9e:	af00      	add	r7, sp, #0
  RFM_DATALEN = 0;
    4da0:	4b19      	ldr	r3, [pc, #100]	; (4e08 <receiveBegin+0x6c>)
    4da2:	2200      	movs	r2, #0
    4da4:	801a      	strh	r2, [r3, #0]
  RFM_SENDERID = 0;
    4da6:	4b19      	ldr	r3, [pc, #100]	; (4e0c <receiveBegin+0x70>)
    4da8:	2200      	movs	r2, #0
    4daa:	801a      	strh	r2, [r3, #0]
  TARGETID = 0;
    4dac:	4b18      	ldr	r3, [pc, #96]	; (4e10 <receiveBegin+0x74>)
    4dae:	2200      	movs	r2, #0
    4db0:	801a      	strh	r2, [r3, #0]
  PAYLOADLEN = 0;
    4db2:	4b18      	ldr	r3, [pc, #96]	; (4e14 <receiveBegin+0x78>)
    4db4:	2200      	movs	r2, #0
    4db6:	801a      	strh	r2, [r3, #0]
  ACK_REQUESTED = 0;
    4db8:	4b17      	ldr	r3, [pc, #92]	; (4e18 <receiveBegin+0x7c>)
    4dba:	2200      	movs	r2, #0
    4dbc:	801a      	strh	r2, [r3, #0]
  ACK_RECEIVED = 0;
    4dbe:	4b17      	ldr	r3, [pc, #92]	; (4e1c <receiveBegin+0x80>)
    4dc0:	2200      	movs	r2, #0
    4dc2:	801a      	strh	r2, [r3, #0]
  RFM_RSSI = 0;
    4dc4:	4b16      	ldr	r3, [pc, #88]	; (4e20 <receiveBegin+0x84>)
    4dc6:	2200      	movs	r2, #0
    4dc8:	801a      	strh	r2, [r3, #0]
  if (readReg(REG_IRQFLAGS2) & RF_IRQFLAGS2_PAYLOADREADY)
    4dca:	2028      	movs	r0, #40	; 0x28
    4dcc:	4b15      	ldr	r3, [pc, #84]	; (4e24 <receiveBegin+0x88>)
    4dce:	4798      	blx	r3
    4dd0:	0003      	movs	r3, r0
    4dd2:	001a      	movs	r2, r3
    4dd4:	2304      	movs	r3, #4
    4dd6:	4013      	ands	r3, r2
    4dd8:	d00b      	beq.n	4df2 <receiveBegin+0x56>
    writeReg(REG_PACKETCONFIG2, (readReg(REG_PACKETCONFIG2) & 0xFB) | RF_PACKET2_RXRESTART); // avoid RX deadlocks
    4dda:	203d      	movs	r0, #61	; 0x3d
    4ddc:	4b11      	ldr	r3, [pc, #68]	; (4e24 <receiveBegin+0x88>)
    4dde:	4798      	blx	r3
    4de0:	0003      	movs	r3, r0
    4de2:	001a      	movs	r2, r3
    4de4:	2304      	movs	r3, #4
    4de6:	4313      	orrs	r3, r2
    4de8:	b2db      	uxtb	r3, r3
    4dea:	0019      	movs	r1, r3
    4dec:	203d      	movs	r0, #61	; 0x3d
    4dee:	4b0e      	ldr	r3, [pc, #56]	; (4e28 <receiveBegin+0x8c>)
    4df0:	4798      	blx	r3
  writeReg(REG_DIOMAPPING1, RF_DIOMAPPING1_DIO0_01); // set DIO0 to "PAYLOADREADY" in receive mode
    4df2:	2140      	movs	r1, #64	; 0x40
    4df4:	2025      	movs	r0, #37	; 0x25
    4df6:	4b0c      	ldr	r3, [pc, #48]	; (4e28 <receiveBegin+0x8c>)
    4df8:	4798      	blx	r3
  setMode(RF69_MODE_RX);
    4dfa:	2003      	movs	r0, #3
    4dfc:	4b0b      	ldr	r3, [pc, #44]	; (4e2c <receiveBegin+0x90>)
    4dfe:	4798      	blx	r3
}
    4e00:	46c0      	nop			; (mov r8, r8)
    4e02:	46bd      	mov	sp, r7
    4e04:	bd80      	pop	{r7, pc}
    4e06:	46c0      	nop			; (mov r8, r8)
    4e08:	2000015e 	.word	0x2000015e
    4e0c:	200000fa 	.word	0x200000fa
    4e10:	20000210 	.word	0x20000210
    4e14:	200001e0 	.word	0x200001e0
    4e18:	2000020e 	.word	0x2000020e
    4e1c:	2000015c 	.word	0x2000015c
    4e20:	20000254 	.word	0x20000254
    4e24:	00004f81 	.word	0x00004f81
    4e28:	00004fe9 	.word	0x00004fe9
    4e2c:	00004995 	.word	0x00004995

00004e30 <RFM_receiveDone>:

// checks if a packet was received and/or puts transceiver in receive (ie RX or listen) mode
bool RFM_receiveDone() {
    4e30:	b580      	push	{r7, lr}
    4e32:	af00      	add	r7, sp, #0
  system_interrupt_disable_global(); //noInterrupts(); // re-enabled in unselect() via setMode() or via receiveBegin() // CHANGE //
    4e34:	4b0f      	ldr	r3, [pc, #60]	; (4e74 <RFM_receiveDone+0x44>)
    4e36:	4798      	blx	r3

  if (_mode == RF69_MODE_RX && PAYLOADLEN > 0)
    4e38:	4b0f      	ldr	r3, [pc, #60]	; (4e78 <RFM_receiveDone+0x48>)
    4e3a:	881b      	ldrh	r3, [r3, #0]
    4e3c:	b29b      	uxth	r3, r3
    4e3e:	2b03      	cmp	r3, #3
    4e40:	d109      	bne.n	4e56 <RFM_receiveDone+0x26>
    4e42:	4b0e      	ldr	r3, [pc, #56]	; (4e7c <RFM_receiveDone+0x4c>)
    4e44:	881b      	ldrh	r3, [r3, #0]
    4e46:	b29b      	uxth	r3, r3
    4e48:	2b00      	cmp	r3, #0
    4e4a:	d004      	beq.n	4e56 <RFM_receiveDone+0x26>
  {
    setMode(RF69_MODE_STANDBY); // enables interrupts
    4e4c:	2001      	movs	r0, #1
    4e4e:	4b0c      	ldr	r3, [pc, #48]	; (4e80 <RFM_receiveDone+0x50>)
    4e50:	4798      	blx	r3
    return true;
    4e52:	2301      	movs	r3, #1
    4e54:	e00b      	b.n	4e6e <RFM_receiveDone+0x3e>
  }
  else if (_mode == RF69_MODE_RX) // already in RX no payload yet
    4e56:	4b08      	ldr	r3, [pc, #32]	; (4e78 <RFM_receiveDone+0x48>)
    4e58:	881b      	ldrh	r3, [r3, #0]
    4e5a:	b29b      	uxth	r3, r3
    4e5c:	2b03      	cmp	r3, #3
    4e5e:	d103      	bne.n	4e68 <RFM_receiveDone+0x38>
  {
    system_interrupt_enable_global(); //interrupts(); // explicitly re-enable interrupts // CHANGE //
    4e60:	4b08      	ldr	r3, [pc, #32]	; (4e84 <RFM_receiveDone+0x54>)
    4e62:	4798      	blx	r3
    return false;
    4e64:	2300      	movs	r3, #0
    4e66:	e002      	b.n	4e6e <RFM_receiveDone+0x3e>
  }
  receiveBegin();
    4e68:	4b07      	ldr	r3, [pc, #28]	; (4e88 <RFM_receiveDone+0x58>)
    4e6a:	4798      	blx	r3
  return false;
    4e6c:	2300      	movs	r3, #0
}
    4e6e:	0018      	movs	r0, r3
    4e70:	46bd      	mov	sp, r7
    4e72:	bd80      	pop	{r7, pc}
    4e74:	00003f95 	.word	0x00003f95
    4e78:	20000212 	.word	0x20000212
    4e7c:	200001e0 	.word	0x200001e0
    4e80:	00004995 	.word	0x00004995
    4e84:	00003f79 	.word	0x00003f79
    4e88:	00004d9d 	.word	0x00004d9d

00004e8c <RFM_encrypt>:

// To enable encryption: radio.encrypt("ABCDEFGHIJKLMNOP");
// To disable encryption: radio.encrypt(null) or radio.encrypt(0)
// KEY HAS TO BE 16 bytes !!!
void RFM_encrypt(const char* key) {
    4e8c:	b580      	push	{r7, lr}
    4e8e:	b084      	sub	sp, #16
    4e90:	af00      	add	r7, sp, #0
    4e92:	6078      	str	r0, [r7, #4]
  setMode(RF69_MODE_STANDBY);
    4e94:	2001      	movs	r0, #1
    4e96:	4b22      	ldr	r3, [pc, #136]	; (4f20 <RFM_encrypt+0x94>)
    4e98:	4798      	blx	r3
  if (key != 0)
    4e9a:	687b      	ldr	r3, [r7, #4]
    4e9c:	2b00      	cmp	r3, #0
    4e9e:	d026      	beq.n	4eee <RFM_encrypt+0x62>
  {
    radioselect();
    4ea0:	4b20      	ldr	r3, [pc, #128]	; (4f24 <RFM_encrypt+0x98>)
    4ea2:	4798      	blx	r3
    spi_transceive_wait(&spi_master_instance, REG_AESKEY1 | 0x80, &read_buf); //SPI.transfer(REG_AESKEY1 | 0x80); // CHANGE //
    4ea4:	4a20      	ldr	r2, [pc, #128]	; (4f28 <RFM_encrypt+0x9c>)
    4ea6:	4b21      	ldr	r3, [pc, #132]	; (4f2c <RFM_encrypt+0xa0>)
    4ea8:	21be      	movs	r1, #190	; 0xbe
    4eaa:	0018      	movs	r0, r3
    4eac:	4b20      	ldr	r3, [pc, #128]	; (4f30 <RFM_encrypt+0xa4>)
    4eae:	4798      	blx	r3
    for (uint8_t i = 0; i < 16; i++)
    4eb0:	230f      	movs	r3, #15
    4eb2:	18fb      	adds	r3, r7, r3
    4eb4:	2200      	movs	r2, #0
    4eb6:	701a      	strb	r2, [r3, #0]
    4eb8:	e012      	b.n	4ee0 <RFM_encrypt+0x54>
      spi_transceive_wait(&spi_master_instance, key[i], &read_buf); //SPI.transfer(key[i]); // CHANGE //
    4eba:	230f      	movs	r3, #15
    4ebc:	18fb      	adds	r3, r7, r3
    4ebe:	781b      	ldrb	r3, [r3, #0]
    4ec0:	687a      	ldr	r2, [r7, #4]
    4ec2:	18d3      	adds	r3, r2, r3
    4ec4:	781b      	ldrb	r3, [r3, #0]
    4ec6:	b299      	uxth	r1, r3
    4ec8:	4a17      	ldr	r2, [pc, #92]	; (4f28 <RFM_encrypt+0x9c>)
    4eca:	4b18      	ldr	r3, [pc, #96]	; (4f2c <RFM_encrypt+0xa0>)
    4ecc:	0018      	movs	r0, r3
    4ece:	4b18      	ldr	r3, [pc, #96]	; (4f30 <RFM_encrypt+0xa4>)
    4ed0:	4798      	blx	r3
  setMode(RF69_MODE_STANDBY);
  if (key != 0)
  {
    radioselect();
    spi_transceive_wait(&spi_master_instance, REG_AESKEY1 | 0x80, &read_buf); //SPI.transfer(REG_AESKEY1 | 0x80); // CHANGE //
    for (uint8_t i = 0; i < 16; i++)
    4ed2:	230f      	movs	r3, #15
    4ed4:	18fb      	adds	r3, r7, r3
    4ed6:	781a      	ldrb	r2, [r3, #0]
    4ed8:	230f      	movs	r3, #15
    4eda:	18fb      	adds	r3, r7, r3
    4edc:	3201      	adds	r2, #1
    4ede:	701a      	strb	r2, [r3, #0]
    4ee0:	230f      	movs	r3, #15
    4ee2:	18fb      	adds	r3, r7, r3
    4ee4:	781b      	ldrb	r3, [r3, #0]
    4ee6:	2b0f      	cmp	r3, #15
    4ee8:	d9e7      	bls.n	4eba <RFM_encrypt+0x2e>
      spi_transceive_wait(&spi_master_instance, key[i], &read_buf); //SPI.transfer(key[i]); // CHANGE //
    unselect();
    4eea:	4b12      	ldr	r3, [pc, #72]	; (4f34 <RFM_encrypt+0xa8>)
    4eec:	4798      	blx	r3
  }
  writeReg(REG_PACKETCONFIG2, (readReg(REG_PACKETCONFIG2) & 0xFE) | (key ? 1 : 0));
    4eee:	203d      	movs	r0, #61	; 0x3d
    4ef0:	4b11      	ldr	r3, [pc, #68]	; (4f38 <RFM_encrypt+0xac>)
    4ef2:	4798      	blx	r3
    4ef4:	0003      	movs	r3, r0
    4ef6:	b25b      	sxtb	r3, r3
    4ef8:	2201      	movs	r2, #1
    4efa:	4393      	bics	r3, r2
    4efc:	b25a      	sxtb	r2, r3
    4efe:	687b      	ldr	r3, [r7, #4]
    4f00:	1e59      	subs	r1, r3, #1
    4f02:	418b      	sbcs	r3, r1
    4f04:	b2db      	uxtb	r3, r3
    4f06:	b25b      	sxtb	r3, r3
    4f08:	4313      	orrs	r3, r2
    4f0a:	b25b      	sxtb	r3, r3
    4f0c:	b2db      	uxtb	r3, r3
    4f0e:	0019      	movs	r1, r3
    4f10:	203d      	movs	r0, #61	; 0x3d
    4f12:	4b0a      	ldr	r3, [pc, #40]	; (4f3c <RFM_encrypt+0xb0>)
    4f14:	4798      	blx	r3
}
    4f16:	46c0      	nop			; (mov r8, r8)
    4f18:	46bd      	mov	sp, r7
    4f1a:	b004      	add	sp, #16
    4f1c:	bd80      	pop	{r7, pc}
    4f1e:	46c0      	nop			; (mov r8, r8)
    4f20:	00004995 	.word	0x00004995
    4f24:	00005049 	.word	0x00005049
    4f28:	20000060 	.word	0x20000060
    4f2c:	20000218 	.word	0x20000218
    4f30:	00002451 	.word	0x00002451
    4f34:	00005075 	.word	0x00005075
    4f38:	00004f81 	.word	0x00004f81
    4f3c:	00004fe9 	.word	0x00004fe9

00004f40 <readRSSI>:

// get the received signal strength indicator (RFM_RSSI)
int16_t readRSSI() {
    4f40:	b580      	push	{r7, lr}
    4f42:	b082      	sub	sp, #8
    4f44:	af00      	add	r7, sp, #0
  volatile int16_t rssi = 0;
    4f46:	1dbb      	adds	r3, r7, #6
    4f48:	2200      	movs	r2, #0
    4f4a:	801a      	strh	r2, [r3, #0]
  rssi = -readReg(REG_RSSIVALUE);
    4f4c:	2024      	movs	r0, #36	; 0x24
    4f4e:	4b0b      	ldr	r3, [pc, #44]	; (4f7c <readRSSI+0x3c>)
    4f50:	4798      	blx	r3
    4f52:	0003      	movs	r3, r0
    4f54:	b29b      	uxth	r3, r3
    4f56:	425b      	negs	r3, r3
    4f58:	b29b      	uxth	r3, r3
    4f5a:	b21a      	sxth	r2, r3
    4f5c:	1dbb      	adds	r3, r7, #6
    4f5e:	801a      	strh	r2, [r3, #0]
  rssi >>= 1;
    4f60:	1dbb      	adds	r3, r7, #6
    4f62:	881b      	ldrh	r3, [r3, #0]
    4f64:	b21b      	sxth	r3, r3
    4f66:	105b      	asrs	r3, r3, #1
    4f68:	b21a      	sxth	r2, r3
    4f6a:	1dbb      	adds	r3, r7, #6
    4f6c:	801a      	strh	r2, [r3, #0]
  return rssi;
    4f6e:	1dbb      	adds	r3, r7, #6
    4f70:	881b      	ldrh	r3, [r3, #0]
    4f72:	b21b      	sxth	r3, r3
}
    4f74:	0018      	movs	r0, r3
    4f76:	46bd      	mov	sp, r7
    4f78:	b002      	add	sp, #8
    4f7a:	bd80      	pop	{r7, pc}
    4f7c:	00004f81 	.word	0x00004f81

00004f80 <readReg>:

uint8_t readReg(volatile uint16_t addr)
{
    4f80:	b580      	push	{r7, lr}
    4f82:	b084      	sub	sp, #16
    4f84:	af00      	add	r7, sp, #0
    4f86:	0002      	movs	r2, r0
    4f88:	1dbb      	adds	r3, r7, #6
    4f8a:	801a      	strh	r2, [r3, #0]
  radioselect();
    4f8c:	4b11      	ldr	r3, [pc, #68]	; (4fd4 <readReg+0x54>)
    4f8e:	4798      	blx	r3
  spi_transceive_wait(&spi_master_instance, addr & 0x7F, &read_buf); //SPI.transfer(addr & 0x7F); // CHANGE //
    4f90:	1dbb      	adds	r3, r7, #6
    4f92:	881b      	ldrh	r3, [r3, #0]
    4f94:	b29b      	uxth	r3, r3
    4f96:	227f      	movs	r2, #127	; 0x7f
    4f98:	4013      	ands	r3, r2
    4f9a:	b299      	uxth	r1, r3
    4f9c:	4a0e      	ldr	r2, [pc, #56]	; (4fd8 <readReg+0x58>)
    4f9e:	4b0f      	ldr	r3, [pc, #60]	; (4fdc <readReg+0x5c>)
    4fa0:	0018      	movs	r0, r3
    4fa2:	4b0f      	ldr	r3, [pc, #60]	; (4fe0 <readReg+0x60>)
    4fa4:	4798      	blx	r3
  volatile uint16_t regval = 0;
    4fa6:	230e      	movs	r3, #14
    4fa8:	18fb      	adds	r3, r7, r3
    4faa:	2200      	movs	r2, #0
    4fac:	801a      	strh	r2, [r3, #0]
  spi_transceive_wait(&spi_master_instance, 0, &regval); //SPI.transfer(0); // CHANGE //
    4fae:	230e      	movs	r3, #14
    4fb0:	18fa      	adds	r2, r7, r3
    4fb2:	4b0a      	ldr	r3, [pc, #40]	; (4fdc <readReg+0x5c>)
    4fb4:	2100      	movs	r1, #0
    4fb6:	0018      	movs	r0, r3
    4fb8:	4b09      	ldr	r3, [pc, #36]	; (4fe0 <readReg+0x60>)
    4fba:	4798      	blx	r3
  unselect();
    4fbc:	4b09      	ldr	r3, [pc, #36]	; (4fe4 <readReg+0x64>)
    4fbe:	4798      	blx	r3
  return (uint8_t)regval;
    4fc0:	230e      	movs	r3, #14
    4fc2:	18fb      	adds	r3, r7, r3
    4fc4:	881b      	ldrh	r3, [r3, #0]
    4fc6:	b29b      	uxth	r3, r3
    4fc8:	b2db      	uxtb	r3, r3
}
    4fca:	0018      	movs	r0, r3
    4fcc:	46bd      	mov	sp, r7
    4fce:	b004      	add	sp, #16
    4fd0:	bd80      	pop	{r7, pc}
    4fd2:	46c0      	nop			; (mov r8, r8)
    4fd4:	00005049 	.word	0x00005049
    4fd8:	20000060 	.word	0x20000060
    4fdc:	20000218 	.word	0x20000218
    4fe0:	00002451 	.word	0x00002451
    4fe4:	00005075 	.word	0x00005075

00004fe8 <writeReg>:

void writeReg(uint8_t addr, uint8_t value)
{
    4fe8:	b580      	push	{r7, lr}
    4fea:	b082      	sub	sp, #8
    4fec:	af00      	add	r7, sp, #0
    4fee:	0002      	movs	r2, r0
    4ff0:	1dfb      	adds	r3, r7, #7
    4ff2:	701a      	strb	r2, [r3, #0]
    4ff4:	1dbb      	adds	r3, r7, #6
    4ff6:	1c0a      	adds	r2, r1, #0
    4ff8:	701a      	strb	r2, [r3, #0]
  radioselect();
    4ffa:	4b0e      	ldr	r3, [pc, #56]	; (5034 <writeReg+0x4c>)
    4ffc:	4798      	blx	r3
  spi_transceive_wait(&spi_master_instance, addr | 0x80, &read_buf); //SPI.transfer(addr | 0x80); // CHANGE //
    4ffe:	1dfb      	adds	r3, r7, #7
    5000:	781b      	ldrb	r3, [r3, #0]
    5002:	2280      	movs	r2, #128	; 0x80
    5004:	4252      	negs	r2, r2
    5006:	4313      	orrs	r3, r2
    5008:	b2db      	uxtb	r3, r3
    500a:	b299      	uxth	r1, r3
    500c:	4a0a      	ldr	r2, [pc, #40]	; (5038 <writeReg+0x50>)
    500e:	4b0b      	ldr	r3, [pc, #44]	; (503c <writeReg+0x54>)
    5010:	0018      	movs	r0, r3
    5012:	4b0b      	ldr	r3, [pc, #44]	; (5040 <writeReg+0x58>)
    5014:	4798      	blx	r3
  spi_transceive_wait(&spi_master_instance, value, &read_buf); //SPI.transfer(value); // CHANGE //
    5016:	1dbb      	adds	r3, r7, #6
    5018:	781b      	ldrb	r3, [r3, #0]
    501a:	b299      	uxth	r1, r3
    501c:	4a06      	ldr	r2, [pc, #24]	; (5038 <writeReg+0x50>)
    501e:	4b07      	ldr	r3, [pc, #28]	; (503c <writeReg+0x54>)
    5020:	0018      	movs	r0, r3
    5022:	4b07      	ldr	r3, [pc, #28]	; (5040 <writeReg+0x58>)
    5024:	4798      	blx	r3
  unselect();
    5026:	4b07      	ldr	r3, [pc, #28]	; (5044 <writeReg+0x5c>)
    5028:	4798      	blx	r3
}
    502a:	46c0      	nop			; (mov r8, r8)
    502c:	46bd      	mov	sp, r7
    502e:	b002      	add	sp, #8
    5030:	bd80      	pop	{r7, pc}
    5032:	46c0      	nop			; (mov r8, r8)
    5034:	00005049 	.word	0x00005049
    5038:	20000060 	.word	0x20000060
    503c:	20000218 	.word	0x20000218
    5040:	00002451 	.word	0x00002451
    5044:	00005075 	.word	0x00005075

00005048 <radioselect>:

// select the RFM69 transceiver (save SPI settings, set CS low)
void radioselect() {
    5048:	b580      	push	{r7, lr}
    504a:	af00      	add	r7, sp, #0
  system_interrupt_disable_global(); //noInterrupts(); // CHANGE //
    504c:	4b05      	ldr	r3, [pc, #20]	; (5064 <radioselect+0x1c>)
    504e:	4798      	blx	r3

  // set RFM69 SPI settings
  //SPI.setDataMode(SPI_MODE0); // CHANGE //
  //SPI.setBitOrder(MSBFIRST); // CHANGE //
  //SPI.setClockDivider(SPI_CLOCK_DIV4); // decided to slow down from DIV2 after SPI stalling in some instances, especially visible on mega1284p when RFM69 and FLASH chip both present // CHANGE //
  spi_select_slave(&spi_master_instance, &slave, true); //digitalWrite(_slaveSelectPin, LOW); // CHANGE //
    5050:	4905      	ldr	r1, [pc, #20]	; (5068 <radioselect+0x20>)
    5052:	4b06      	ldr	r3, [pc, #24]	; (506c <radioselect+0x24>)
    5054:	2201      	movs	r2, #1
    5056:	0018      	movs	r0, r3
    5058:	4b05      	ldr	r3, [pc, #20]	; (5070 <radioselect+0x28>)
    505a:	4798      	blx	r3
}
    505c:	46c0      	nop			; (mov r8, r8)
    505e:	46bd      	mov	sp, r7
    5060:	bd80      	pop	{r7, pc}
    5062:	46c0      	nop			; (mov r8, r8)
    5064:	00003f95 	.word	0x00003f95
    5068:	20000298 	.word	0x20000298
    506c:	20000218 	.word	0x20000218
    5070:	0000259d 	.word	0x0000259d

00005074 <unselect>:

// unselect the RFM69 transceiver (set CS high, restore SPI settings)
void unselect() {
    5074:	b580      	push	{r7, lr}
    5076:	af00      	add	r7, sp, #0
  spi_select_slave(&spi_master_instance, &slave, false); //digitalWrite(_slaveSelectPin, HIGH); // CHANGE //
    5078:	4905      	ldr	r1, [pc, #20]	; (5090 <unselect+0x1c>)
    507a:	4b06      	ldr	r3, [pc, #24]	; (5094 <unselect+0x20>)
    507c:	2200      	movs	r2, #0
    507e:	0018      	movs	r0, r3
    5080:	4b05      	ldr	r3, [pc, #20]	; (5098 <unselect+0x24>)
    5082:	4798      	blx	r3
  maybeInterrupts();
    5084:	4b05      	ldr	r3, [pc, #20]	; (509c <unselect+0x28>)
    5086:	4798      	blx	r3
}
    5088:	46c0      	nop			; (mov r8, r8)
    508a:	46bd      	mov	sp, r7
    508c:	bd80      	pop	{r7, pc}
    508e:	46c0      	nop			; (mov r8, r8)
    5090:	20000298 	.word	0x20000298
    5094:	20000218 	.word	0x20000218
    5098:	0000259d 	.word	0x0000259d
    509c:	000050e5 	.word	0x000050e5

000050a0 <setHighPowerRegs>:
  _promiscuousMode = onOff;
  //writeReg(REG_PACKETCONFIG1, (readReg(REG_PACKETCONFIG1) & 0xF9) | (onOff ? RF_PACKET1_ADRSFILTERING_OFF : RF_PACKET1_ADRSFILTERING_NODEBROADCAST));
}

// internal function
void setHighPowerRegs(bool onOff) {
    50a0:	b580      	push	{r7, lr}
    50a2:	b082      	sub	sp, #8
    50a4:	af00      	add	r7, sp, #0
    50a6:	0002      	movs	r2, r0
    50a8:	1dfb      	adds	r3, r7, #7
    50aa:	701a      	strb	r2, [r3, #0]
  writeReg(REG_TESTPA1, onOff ? 0x5D : 0x55);
    50ac:	1dfb      	adds	r3, r7, #7
    50ae:	781b      	ldrb	r3, [r3, #0]
    50b0:	2b00      	cmp	r3, #0
    50b2:	d001      	beq.n	50b8 <setHighPowerRegs+0x18>
    50b4:	235d      	movs	r3, #93	; 0x5d
    50b6:	e000      	b.n	50ba <setHighPowerRegs+0x1a>
    50b8:	2355      	movs	r3, #85	; 0x55
    50ba:	0019      	movs	r1, r3
    50bc:	205a      	movs	r0, #90	; 0x5a
    50be:	4b08      	ldr	r3, [pc, #32]	; (50e0 <setHighPowerRegs+0x40>)
    50c0:	4798      	blx	r3
  writeReg(REG_TESTPA2, onOff ? 0x7C : 0x70);
    50c2:	1dfb      	adds	r3, r7, #7
    50c4:	781b      	ldrb	r3, [r3, #0]
    50c6:	2b00      	cmp	r3, #0
    50c8:	d001      	beq.n	50ce <setHighPowerRegs+0x2e>
    50ca:	237c      	movs	r3, #124	; 0x7c
    50cc:	e000      	b.n	50d0 <setHighPowerRegs+0x30>
    50ce:	2370      	movs	r3, #112	; 0x70
    50d0:	0019      	movs	r1, r3
    50d2:	205c      	movs	r0, #92	; 0x5c
    50d4:	4b02      	ldr	r3, [pc, #8]	; (50e0 <setHighPowerRegs+0x40>)
    50d6:	4798      	blx	r3
}
    50d8:	46c0      	nop			; (mov r8, r8)
    50da:	46bd      	mov	sp, r7
    50dc:	b002      	add	sp, #8
    50de:	bd80      	pop	{r7, pc}
    50e0:	00004fe9 	.word	0x00004fe9

000050e4 <maybeInterrupts>:
  writeReg(REG_OSC1, RF_OSC1_RCCAL_START);
  while ((readReg(REG_OSC1) & RF_OSC1_RCCAL_DONE) == 0x00);
}

void maybeInterrupts()
{
    50e4:	b580      	push	{r7, lr}
    50e6:	af00      	add	r7, sp, #0
  // Only reenable interrupts if we're not being called from the ISR
  if (!_inISR) 
    50e8:	4b06      	ldr	r3, [pc, #24]	; (5104 <maybeInterrupts+0x20>)
    50ea:	781b      	ldrb	r3, [r3, #0]
    50ec:	b2db      	uxtb	r3, r3
    50ee:	2201      	movs	r2, #1
    50f0:	4053      	eors	r3, r2
    50f2:	b2db      	uxtb	r3, r3
    50f4:	2b00      	cmp	r3, #0
    50f6:	d001      	beq.n	50fc <maybeInterrupts+0x18>
	  system_interrupt_enable_global(); //interrupts(); // CHANGE //
    50f8:	4b03      	ldr	r3, [pc, #12]	; (5108 <maybeInterrupts+0x24>)
    50fa:	4798      	blx	r3
}
    50fc:	46c0      	nop			; (mov r8, r8)
    50fe:	46bd      	mov	sp, r7
    5100:	bd80      	pop	{r7, pc}
    5102:	46c0      	nop			; (mov r8, r8)
    5104:	20000115 	.word	0x20000115
    5108:	00003f79 	.word	0x00003f79

0000510c <configure_LED_PWM>:
void setTrackBallRGBW(uint16_t red, uint16_t green, uint16_t blue, uint16_t white);


////////////// Configure all of the LED ports as PWM outputs //////////////////
void configure_LED_PWM(void)
{
    510c:	b580      	push	{r7, lr}
    510e:	b0aa      	sub	sp, #168	; 0xa8
    5110:	af00      	add	r7, sp, #0
	struct tcc_config config_tcc;
	tcc_get_config_defaults(&config_tcc, TCC0);
    5112:	4a32      	ldr	r2, [pc, #200]	; (51dc <configure_LED_PWM+0xd0>)
    5114:	1d3b      	adds	r3, r7, #4
    5116:	0011      	movs	r1, r2
    5118:	0018      	movs	r0, r3
    511a:	4b31      	ldr	r3, [pc, #196]	; (51e0 <configure_LED_PWM+0xd4>)
    511c:	4798      	blx	r3
	config_tcc.counter.period = 0xFFFF;
    511e:	1d3b      	adds	r3, r7, #4
    5120:	4a30      	ldr	r2, [pc, #192]	; (51e4 <configure_LED_PWM+0xd8>)
    5122:	605a      	str	r2, [r3, #4]
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
    5124:	1d3b      	adds	r3, r7, #4
    5126:	2202      	movs	r2, #2
    5128:	761a      	strb	r2, [r3, #24]
	config_tcc.compare.match[0] = 0;
    512a:	1d3b      	adds	r3, r7, #4
    512c:	2200      	movs	r2, #0
    512e:	61da      	str	r2, [r3, #28]
	config_tcc.compare.match[1] = 0;
    5130:	1d3b      	adds	r3, r7, #4
    5132:	2200      	movs	r2, #0
    5134:	621a      	str	r2, [r3, #32]
	config_tcc.pins.enable_wave_out_pin[0] = true;
    5136:	1d3b      	adds	r3, r7, #4
    5138:	2298      	movs	r2, #152	; 0x98
    513a:	2101      	movs	r1, #1
    513c:	5499      	strb	r1, [r3, r2]
	config_tcc.pins.enable_wave_out_pin[1] = true;
    513e:	1d3b      	adds	r3, r7, #4
    5140:	2299      	movs	r2, #153	; 0x99
    5142:	2101      	movs	r1, #1
    5144:	5499      	strb	r1, [r3, r2]
	// Green Trackball LED*
	config_tcc.pins.wave_out_pin[0]        = PIN_PA21F_TCC0_WO7;
    5146:	1d3b      	adds	r3, r7, #4
    5148:	2215      	movs	r2, #21
    514a:	659a      	str	r2, [r3, #88]	; 0x58
	// White Trackball LED*
	config_tcc.pins.wave_out_pin[1]        = PIN_PA14F_TCC0_WO4;
    514c:	1d3b      	adds	r3, r7, #4
    514e:	220e      	movs	r2, #14
    5150:	65da      	str	r2, [r3, #92]	; 0x5c
	config_tcc.pins.wave_out_pin_mux[0]    = MUX_PA21F_TCC0_WO7;
    5152:	1d3b      	adds	r3, r7, #4
    5154:	2205      	movs	r2, #5
    5156:	679a      	str	r2, [r3, #120]	; 0x78
	config_tcc.pins.wave_out_pin_mux[1]    = MUX_PA14F_TCC0_WO4;
    5158:	1d3b      	adds	r3, r7, #4
    515a:	2205      	movs	r2, #5
    515c:	67da      	str	r2, [r3, #124]	; 0x7c
	tcc_init(&tcc0, TCC0, &config_tcc);
    515e:	1d3a      	adds	r2, r7, #4
    5160:	491e      	ldr	r1, [pc, #120]	; (51dc <configure_LED_PWM+0xd0>)
    5162:	4b21      	ldr	r3, [pc, #132]	; (51e8 <configure_LED_PWM+0xdc>)
    5164:	0018      	movs	r0, r3
    5166:	4b21      	ldr	r3, [pc, #132]	; (51ec <configure_LED_PWM+0xe0>)
    5168:	4798      	blx	r3
	tcc_enable(&tcc0);
    516a:	4b1f      	ldr	r3, [pc, #124]	; (51e8 <configure_LED_PWM+0xdc>)
    516c:	0018      	movs	r0, r3
    516e:	4b20      	ldr	r3, [pc, #128]	; (51f0 <configure_LED_PWM+0xe4>)
    5170:	4798      	blx	r3

	tcc_get_config_defaults(&config_tcc, TCC1);
    5172:	4a20      	ldr	r2, [pc, #128]	; (51f4 <configure_LED_PWM+0xe8>)
    5174:	1d3b      	adds	r3, r7, #4
    5176:	0011      	movs	r1, r2
    5178:	0018      	movs	r0, r3
    517a:	4b19      	ldr	r3, [pc, #100]	; (51e0 <configure_LED_PWM+0xd4>)
    517c:	4798      	blx	r3
	config_tcc.counter.period = 0xFFFF;
    517e:	1d3b      	adds	r3, r7, #4
    5180:	4a18      	ldr	r2, [pc, #96]	; (51e4 <configure_LED_PWM+0xd8>)
    5182:	605a      	str	r2, [r3, #4]
	config_tcc.compare.wave_generation = TCC_WAVE_GENERATION_SINGLE_SLOPE_PWM;
    5184:	1d3b      	adds	r3, r7, #4
    5186:	2202      	movs	r2, #2
    5188:	761a      	strb	r2, [r3, #24]
	config_tcc.compare.match[0] = 0;
    518a:	1d3b      	adds	r3, r7, #4
    518c:	2200      	movs	r2, #0
    518e:	61da      	str	r2, [r3, #28]
	config_tcc.compare.match[1] = 0;
    5190:	1d3b      	adds	r3, r7, #4
    5192:	2200      	movs	r2, #0
    5194:	621a      	str	r2, [r3, #32]
	config_tcc.pins.enable_wave_out_pin[0] = true;
    5196:	1d3b      	adds	r3, r7, #4
    5198:	2298      	movs	r2, #152	; 0x98
    519a:	2101      	movs	r1, #1
    519c:	5499      	strb	r1, [r3, r2]
	config_tcc.pins.enable_wave_out_pin[1] = true;
    519e:	1d3b      	adds	r3, r7, #4
    51a0:	2299      	movs	r2, #153	; 0x99
    51a2:	2101      	movs	r1, #1
    51a4:	5499      	strb	r1, [r3, r2]
	// Blue Trackball LED*
	config_tcc.pins.wave_out_pin[0]        = PIN_PA08F_TCC1_WO2;
    51a6:	1d3b      	adds	r3, r7, #4
    51a8:	2208      	movs	r2, #8
    51aa:	659a      	str	r2, [r3, #88]	; 0x58
	// Red Trackball LED*
	config_tcc.pins.wave_out_pin[1]        = PIN_PA07E_TCC1_WO1;
    51ac:	1d3b      	adds	r3, r7, #4
    51ae:	2207      	movs	r2, #7
    51b0:	65da      	str	r2, [r3, #92]	; 0x5c
	config_tcc.pins.wave_out_pin_mux[0]    = MUX_PA08F_TCC1_WO2;
    51b2:	1d3b      	adds	r3, r7, #4
    51b4:	2205      	movs	r2, #5
    51b6:	679a      	str	r2, [r3, #120]	; 0x78
	config_tcc.pins.wave_out_pin_mux[1]    = MUX_PA07E_TCC1_WO1;
    51b8:	1d3b      	adds	r3, r7, #4
    51ba:	2204      	movs	r2, #4
    51bc:	67da      	str	r2, [r3, #124]	; 0x7c
	tcc_init(&tcc1, TCC1, &config_tcc);
    51be:	1d3a      	adds	r2, r7, #4
    51c0:	490c      	ldr	r1, [pc, #48]	; (51f4 <configure_LED_PWM+0xe8>)
    51c2:	4b0d      	ldr	r3, [pc, #52]	; (51f8 <configure_LED_PWM+0xec>)
    51c4:	0018      	movs	r0, r3
    51c6:	4b09      	ldr	r3, [pc, #36]	; (51ec <configure_LED_PWM+0xe0>)
    51c8:	4798      	blx	r3
	tcc_enable(&tcc1);
    51ca:	4b0b      	ldr	r3, [pc, #44]	; (51f8 <configure_LED_PWM+0xec>)
    51cc:	0018      	movs	r0, r3
    51ce:	4b08      	ldr	r3, [pc, #32]	; (51f0 <configure_LED_PWM+0xe4>)
    51d0:	4798      	blx	r3
}
    51d2:	46c0      	nop			; (mov r8, r8)
    51d4:	46bd      	mov	sp, r7
    51d6:	b02a      	add	sp, #168	; 0xa8
    51d8:	bd80      	pop	{r7, pc}
    51da:	46c0      	nop			; (mov r8, r8)
    51dc:	42002000 	.word	0x42002000
    51e0:	000010c1 	.word	0x000010c1
    51e4:	0000ffff 	.word	0x0000ffff
    51e8:	20000118 	.word	0x20000118
    51ec:	0000171d 	.word	0x0000171d
    51f0:	000041b5 	.word	0x000041b5
    51f4:	42002400 	.word	0x42002400
    51f8:	20000258 	.word	0x20000258

000051fc <configure_IO_pins>:
///////////////////////////////////////////////////////////////////////////

// Configure the LED selection port as output
void configure_IO_pins(void)
{
    51fc:	b580      	push	{r7, lr}
    51fe:	b082      	sub	sp, #8
    5200:	af00      	add	r7, sp, #0
	struct port_config config_port_pin;
	port_get_config_defaults(&config_port_pin);
    5202:	1d3b      	adds	r3, r7, #4
    5204:	0018      	movs	r0, r3
    5206:	4b26      	ldr	r3, [pc, #152]	; (52a0 <configure_IO_pins+0xa4>)
    5208:	4798      	blx	r3
	config_port_pin.direction = PORT_PIN_DIR_INPUT;
    520a:	1d3b      	adds	r3, r7, #4
    520c:	2200      	movs	r2, #0
    520e:	701a      	strb	r2, [r3, #0]
	// Right Arrow Button
	port_pin_set_config(PIN_PA04, &config_port_pin);
    5210:	1d3b      	adds	r3, r7, #4
    5212:	0019      	movs	r1, r3
    5214:	2004      	movs	r0, #4
    5216:	4b23      	ldr	r3, [pc, #140]	; (52a4 <configure_IO_pins+0xa8>)
    5218:	4798      	blx	r3
	// Hall Up*
	port_pin_set_config(PIN_PA06, &config_port_pin);
    521a:	1d3b      	adds	r3, r7, #4
    521c:	0019      	movs	r1, r3
    521e:	2006      	movs	r0, #6
    5220:	4b20      	ldr	r3, [pc, #128]	; (52a4 <configure_IO_pins+0xa8>)
    5222:	4798      	blx	r3
	// Hall Down*
	port_pin_set_config(PIN_PA09, &config_port_pin);
    5224:	1d3b      	adds	r3, r7, #4
    5226:	0019      	movs	r1, r3
    5228:	2009      	movs	r0, #9
    522a:	4b1e      	ldr	r3, [pc, #120]	; (52a4 <configure_IO_pins+0xa8>)
    522c:	4798      	blx	r3
	// Hall Left*
	port_pin_set_config(PIN_PA10, &config_port_pin);
    522e:	1d3b      	adds	r3, r7, #4
    5230:	0019      	movs	r1, r3
    5232:	200a      	movs	r0, #10
    5234:	4b1b      	ldr	r3, [pc, #108]	; (52a4 <configure_IO_pins+0xa8>)
    5236:	4798      	blx	r3
	// Hall Right*
	port_pin_set_config(PIN_PA11, &config_port_pin);
    5238:	1d3b      	adds	r3, r7, #4
    523a:	0019      	movs	r1, r3
    523c:	200b      	movs	r0, #11
    523e:	4b19      	ldr	r3, [pc, #100]	; (52a4 <configure_IO_pins+0xa8>)
    5240:	4798      	blx	r3
	// Down Arrow Button
	port_pin_set_config(PIN_PA12, &config_port_pin);
    5242:	1d3b      	adds	r3, r7, #4
    5244:	0019      	movs	r1, r3
    5246:	200c      	movs	r0, #12
    5248:	4b16      	ldr	r3, [pc, #88]	; (52a4 <configure_IO_pins+0xa8>)
    524a:	4798      	blx	r3
	// Scroll Button
	port_pin_set_config(PIN_PA13, &config_port_pin);
    524c:	1d3b      	adds	r3, r7, #4
    524e:	0019      	movs	r1, r3
    5250:	200d      	movs	r0, #13
    5252:	4b14      	ldr	r3, [pc, #80]	; (52a4 <configure_IO_pins+0xa8>)
    5254:	4798      	blx	r3
	// Right Mouse Button
	port_pin_set_config(PIN_PA15, &config_port_pin);
    5256:	1d3b      	adds	r3, r7, #4
    5258:	0019      	movs	r1, r3
    525a:	200f      	movs	r0, #15
    525c:	4b11      	ldr	r3, [pc, #68]	; (52a4 <configure_IO_pins+0xa8>)
    525e:	4798      	blx	r3
	// Up Arrow Button
	port_pin_set_config(PIN_PA20, &config_port_pin);
    5260:	1d3b      	adds	r3, r7, #4
    5262:	0019      	movs	r1, r3
    5264:	2014      	movs	r0, #20
    5266:	4b0f      	ldr	r3, [pc, #60]	; (52a4 <configure_IO_pins+0xa8>)
    5268:	4798      	blx	r3
	// Left Mouse Button
	port_pin_set_config(PIN_PB02, &config_port_pin);
    526a:	1d3b      	adds	r3, r7, #4
    526c:	0019      	movs	r1, r3
    526e:	2022      	movs	r0, #34	; 0x22
    5270:	4b0c      	ldr	r3, [pc, #48]	; (52a4 <configure_IO_pins+0xa8>)
    5272:	4798      	blx	r3
	// Laser Button
	port_pin_set_config(PIN_PB03, &config_port_pin);
    5274:	1d3b      	adds	r3, r7, #4
    5276:	0019      	movs	r1, r3
    5278:	2023      	movs	r0, #35	; 0x23
    527a:	4b0a      	ldr	r3, [pc, #40]	; (52a4 <configure_IO_pins+0xa8>)
    527c:	4798      	blx	r3
	// Left Arrow Button
	port_pin_set_config(PIN_PB09, &config_port_pin);
    527e:	1d3b      	adds	r3, r7, #4
    5280:	0019      	movs	r1, r3
    5282:	2029      	movs	r0, #41	; 0x29
    5284:	4b07      	ldr	r3, [pc, #28]	; (52a4 <configure_IO_pins+0xa8>)
    5286:	4798      	blx	r3
	// Laser Output
	config_port_pin.direction = PORT_PIN_DIR_OUTPUT;
    5288:	1d3b      	adds	r3, r7, #4
    528a:	2201      	movs	r2, #1
    528c:	701a      	strb	r2, [r3, #0]
	port_pin_set_config(PIN_PB08, &config_port_pin);
    528e:	1d3b      	adds	r3, r7, #4
    5290:	0019      	movs	r1, r3
    5292:	2028      	movs	r0, #40	; 0x28
    5294:	4b03      	ldr	r3, [pc, #12]	; (52a4 <configure_IO_pins+0xa8>)
    5296:	4798      	blx	r3
}
    5298:	46c0      	nop			; (mov r8, r8)
    529a:	46bd      	mov	sp, r7
    529c:	b002      	add	sp, #8
    529e:	bd80      	pop	{r7, pc}
    52a0:	00003ebd 	.word	0x00003ebd
    52a4:	00002fa1 	.word	0x00002fa1

000052a8 <main>:


int main (void)
{
    52a8:	b590      	push	{r4, r7, lr}
    52aa:	b089      	sub	sp, #36	; 0x24
    52ac:	af00      	add	r7, sp, #0
	int receivingNode = 0;
    52ae:	2300      	movs	r3, #0
    52b0:	61bb      	str	r3, [r7, #24]
	bool calibrationLEDS = false;
    52b2:	231f      	movs	r3, #31
    52b4:	18fb      	adds	r3, r7, r3
    52b6:	2200      	movs	r2, #0
    52b8:	701a      	strb	r2, [r3, #0]
	
    /* Initialize system */
	system_init();
    52ba:	4b77      	ldr	r3, [pc, #476]	; (5498 <main+0x1f0>)
    52bc:	4798      	blx	r3
	configure_LED_PWM();
    52be:	4b77      	ldr	r3, [pc, #476]	; (549c <main+0x1f4>)
    52c0:	4798      	blx	r3
	configure_IO_pins();
    52c2:	4b77      	ldr	r3, [pc, #476]	; (54a0 <main+0x1f8>)
    52c4:	4798      	blx	r3
			break;
		}
	}*/

	// Initialize the RFM69HCW:
	RFM_initialize(FREQUENCY, MYNODEID, NETWORKID);
    52c6:	2200      	movs	r2, #0
    52c8:	2103      	movs	r1, #3
    52ca:	205b      	movs	r0, #91	; 0x5b
    52cc:	4b75      	ldr	r3, [pc, #468]	; (54a4 <main+0x1fc>)
    52ce:	4798      	blx	r3
	RFM_setHighPower(true);
    52d0:	2001      	movs	r0, #1
    52d2:	4b75      	ldr	r3, [pc, #468]	; (54a8 <main+0x200>)
    52d4:	4798      	blx	r3
	if (ENCRYPT)
		RFM_encrypt(ENCRYPTKEY);
    52d6:	4b75      	ldr	r3, [pc, #468]	; (54ac <main+0x204>)
    52d8:	0018      	movs	r0, r3
    52da:	4b75      	ldr	r3, [pc, #468]	; (54b0 <main+0x208>)
    52dc:	4798      	blx	r3


	int sendlength = 3; //number can be increased 
    52de:	2303      	movs	r3, #3
    52e0:	617b      	str	r3, [r7, #20]
	int index = 0;
    52e2:	2300      	movs	r3, #0
    52e4:	613b      	str	r3, [r7, #16]
	int8_t sendbuffer[16];

	init_wheel();
    52e6:	4b73      	ldr	r3, [pc, #460]	; (54b4 <main+0x20c>)
    52e8:	4798      	blx	r3
	
	while(1) //busy loop
	//sends data after receiving a request message from the dongle
	//sends X axis byte, Y axis byte, button byte
	{
		if (calibrationLEDS)
    52ea:	231f      	movs	r3, #31
    52ec:	18fb      	adds	r3, r7, r3
    52ee:	781b      	ldrb	r3, [r3, #0]
    52f0:	2b00      	cmp	r3, #0
    52f2:	d002      	beq.n	52fa <main+0x52>
			ColorCycle();
    52f4:	4b70      	ldr	r3, [pc, #448]	; (54b8 <main+0x210>)
    52f6:	4798      	blx	r3
    52f8:	e005      	b.n	5306 <main+0x5e>
		else
			setTrackBallRGBW(0x0, 0x0, 0x0, 0xFFFF);
    52fa:	4b70      	ldr	r3, [pc, #448]	; (54bc <main+0x214>)
    52fc:	2200      	movs	r2, #0
    52fe:	2100      	movs	r1, #0
    5300:	2000      	movs	r0, #0
    5302:	4c6f      	ldr	r4, [pc, #444]	; (54c0 <main+0x218>)
    5304:	47a0      	blx	r4
			
		static bool button = 0;
		static bool lbutton = 0;
		static bool laserState = 0;

		button = port_pin_get_input_level(PIN_PB03);
    5306:	2023      	movs	r0, #35	; 0x23
    5308:	4b6e      	ldr	r3, [pc, #440]	; (54c4 <main+0x21c>)
    530a:	4798      	blx	r3
    530c:	0003      	movs	r3, r0
    530e:	001a      	movs	r2, r3
    5310:	4b6d      	ldr	r3, [pc, #436]	; (54c8 <main+0x220>)
    5312:	701a      	strb	r2, [r3, #0]
		if(button && !lbutton)
    5314:	4b6c      	ldr	r3, [pc, #432]	; (54c8 <main+0x220>)
    5316:	781b      	ldrb	r3, [r3, #0]
    5318:	2b00      	cmp	r3, #0
    531a:	d01a      	beq.n	5352 <main+0xaa>
    531c:	4b6b      	ldr	r3, [pc, #428]	; (54cc <main+0x224>)
    531e:	781b      	ldrb	r3, [r3, #0]
    5320:	2201      	movs	r2, #1
    5322:	4053      	eors	r3, r2
    5324:	b2db      	uxtb	r3, r3
    5326:	2b00      	cmp	r3, #0
    5328:	d013      	beq.n	5352 <main+0xaa>
		{
			laserState = !laserState;
    532a:	4b69      	ldr	r3, [pc, #420]	; (54d0 <main+0x228>)
    532c:	781b      	ldrb	r3, [r3, #0]
    532e:	1e5a      	subs	r2, r3, #1
    5330:	4193      	sbcs	r3, r2
    5332:	b2db      	uxtb	r3, r3
    5334:	2201      	movs	r2, #1
    5336:	4053      	eors	r3, r2
    5338:	b2db      	uxtb	r3, r3
    533a:	1c1a      	adds	r2, r3, #0
    533c:	2301      	movs	r3, #1
    533e:	4013      	ands	r3, r2
    5340:	b2da      	uxtb	r2, r3
    5342:	4b63      	ldr	r3, [pc, #396]	; (54d0 <main+0x228>)
    5344:	701a      	strb	r2, [r3, #0]
			port_pin_set_output_level(PIN_PB08, laserState);
    5346:	4b62      	ldr	r3, [pc, #392]	; (54d0 <main+0x228>)
    5348:	781b      	ldrb	r3, [r3, #0]
    534a:	0019      	movs	r1, r3
    534c:	2028      	movs	r0, #40	; 0x28
    534e:	4b61      	ldr	r3, [pc, #388]	; (54d4 <main+0x22c>)
    5350:	4798      	blx	r3
		}

		//Do the wheel update
		update_values();
    5352:	4b61      	ldr	r3, [pc, #388]	; (54d8 <main+0x230>)
    5354:	4798      	blx	r3
		
		getScroll(&sendbuffer[0], &sendbuffer[1]); // x and y axis update
    5356:	003b      	movs	r3, r7
    5358:	1c5a      	adds	r2, r3, #1
    535a:	003b      	movs	r3, r7
    535c:	0011      	movs	r1, r2
    535e:	0018      	movs	r0, r3
    5360:	4b5e      	ldr	r3, [pc, #376]	; (54dc <main+0x234>)
    5362:	4798      	blx	r3
		
		lbutton = button;
    5364:	4b58      	ldr	r3, [pc, #352]	; (54c8 <main+0x220>)
    5366:	781a      	ldrb	r2, [r3, #0]
    5368:	4b58      	ldr	r3, [pc, #352]	; (54cc <main+0x224>)
    536a:	701a      	strb	r2, [r3, #0]
		//check if the RFM69 receives a  packet
		//only send info when a packet is received from dongle module			
		if (RFM_receiveDone()) // Got one!
    536c:	4b5c      	ldr	r3, [pc, #368]	; (54e0 <main+0x238>)
    536e:	4798      	blx	r3
    5370:	1e03      	subs	r3, r0, #0
    5372:	d0ba      	beq.n	52ea <main+0x42>
		{
			receivingNode = RFM_SENDERID;
    5374:	4b5b      	ldr	r3, [pc, #364]	; (54e4 <main+0x23c>)
    5376:	881b      	ldrh	r3, [r3, #0]
    5378:	b29b      	uxth	r3, r3
    537a:	61bb      	str	r3, [r7, #24]
			if (RFM_DATA[0] == 'Y')
    537c:	4b5a      	ldr	r3, [pc, #360]	; (54e8 <main+0x240>)
    537e:	881b      	ldrh	r3, [r3, #0]
    5380:	b29b      	uxth	r3, r3
    5382:	2b59      	cmp	r3, #89	; 0x59
    5384:	d103      	bne.n	538e <main+0xe6>
				calibrationLEDS = true;
    5386:	231f      	movs	r3, #31
    5388:	18fb      	adds	r3, r7, r3
    538a:	2201      	movs	r2, #1
    538c:	701a      	strb	r2, [r3, #0]
			if (RFM_DATA[0] == 'N')
    538e:	4b56      	ldr	r3, [pc, #344]	; (54e8 <main+0x240>)
    5390:	881b      	ldrh	r3, [r3, #0]
    5392:	b29b      	uxth	r3, r3
    5394:	2b4e      	cmp	r3, #78	; 0x4e
    5396:	d103      	bne.n	53a0 <main+0xf8>
				calibrationLEDS = false;
    5398:	231f      	movs	r3, #31
    539a:	18fb      	adds	r3, r7, r3
    539c:	2200      	movs	r2, #0
    539e:	701a      	strb	r2, [r3, #0]
			// The actual message is contained in the RFM_DATA array,
			// and is RFM_DATALEN bytes in size:
			getScroll(&sendbuffer[0], &sendbuffer[1]); // x and y axis update
    53a0:	003b      	movs	r3, r7
    53a2:	1c5a      	adds	r2, r3, #1
    53a4:	003b      	movs	r3, r7
    53a6:	0011      	movs	r1, r2
    53a8:	0018      	movs	r0, r3
    53aa:	4b4c      	ldr	r3, [pc, #304]	; (54dc <main+0x234>)
    53ac:	4798      	blx	r3

			sendbuffer[2] = 0;
    53ae:	003b      	movs	r3, r7
    53b0:	2200      	movs	r2, #0
    53b2:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PA20) << 7); // Up
    53b4:	2014      	movs	r0, #20
    53b6:	4b43      	ldr	r3, [pc, #268]	; (54c4 <main+0x21c>)
    53b8:	4798      	blx	r3
    53ba:	0003      	movs	r3, r0
    53bc:	01d9      	lsls	r1, r3, #7
    53be:	003b      	movs	r3, r7
    53c0:	2202      	movs	r2, #2
    53c2:	569a      	ldrsb	r2, [r3, r2]
    53c4:	b24b      	sxtb	r3, r1
    53c6:	4313      	orrs	r3, r2
    53c8:	b25a      	sxtb	r2, r3
    53ca:	003b      	movs	r3, r7
    53cc:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PA12) << 6); // Down
    53ce:	200c      	movs	r0, #12
    53d0:	4b3c      	ldr	r3, [pc, #240]	; (54c4 <main+0x21c>)
    53d2:	4798      	blx	r3
    53d4:	0003      	movs	r3, r0
    53d6:	0199      	lsls	r1, r3, #6
    53d8:	003b      	movs	r3, r7
    53da:	2202      	movs	r2, #2
    53dc:	569a      	ldrsb	r2, [r3, r2]
    53de:	b24b      	sxtb	r3, r1
    53e0:	4313      	orrs	r3, r2
    53e2:	b25a      	sxtb	r2, r3
    53e4:	003b      	movs	r3, r7
    53e6:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PB09) << 5); // Left
    53e8:	2029      	movs	r0, #41	; 0x29
    53ea:	4b36      	ldr	r3, [pc, #216]	; (54c4 <main+0x21c>)
    53ec:	4798      	blx	r3
    53ee:	0003      	movs	r3, r0
    53f0:	0159      	lsls	r1, r3, #5
    53f2:	003b      	movs	r3, r7
    53f4:	2202      	movs	r2, #2
    53f6:	569a      	ldrsb	r2, [r3, r2]
    53f8:	b24b      	sxtb	r3, r1
    53fa:	4313      	orrs	r3, r2
    53fc:	b25a      	sxtb	r2, r3
    53fe:	003b      	movs	r3, r7
    5400:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PA04) << 4); // Right
    5402:	2004      	movs	r0, #4
    5404:	4b2f      	ldr	r3, [pc, #188]	; (54c4 <main+0x21c>)
    5406:	4798      	blx	r3
    5408:	0003      	movs	r3, r0
    540a:	0119      	lsls	r1, r3, #4
    540c:	003b      	movs	r3, r7
    540e:	2202      	movs	r2, #2
    5410:	569a      	ldrsb	r2, [r3, r2]
    5412:	b24b      	sxtb	r3, r1
    5414:	4313      	orrs	r3, r2
    5416:	b25a      	sxtb	r2, r3
    5418:	003b      	movs	r3, r7
    541a:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PB02) << 3); // Left Click
    541c:	2022      	movs	r0, #34	; 0x22
    541e:	4b29      	ldr	r3, [pc, #164]	; (54c4 <main+0x21c>)
    5420:	4798      	blx	r3
    5422:	0003      	movs	r3, r0
    5424:	00d9      	lsls	r1, r3, #3
    5426:	003b      	movs	r3, r7
    5428:	2202      	movs	r2, #2
    542a:	569a      	ldrsb	r2, [r3, r2]
    542c:	b24b      	sxtb	r3, r1
    542e:	4313      	orrs	r3, r2
    5430:	b25a      	sxtb	r2, r3
    5432:	003b      	movs	r3, r7
    5434:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (port_pin_get_input_level(PIN_PA15) << 2); // Right Click
    5436:	200f      	movs	r0, #15
    5438:	4b22      	ldr	r3, [pc, #136]	; (54c4 <main+0x21c>)
    543a:	4798      	blx	r3
    543c:	0003      	movs	r3, r0
    543e:	0099      	lsls	r1, r3, #2
    5440:	003b      	movs	r3, r7
    5442:	2202      	movs	r2, #2
    5444:	569a      	ldrsb	r2, [r3, r2]
    5446:	b24b      	sxtb	r3, r1
    5448:	4313      	orrs	r3, r2
    544a:	b25a      	sxtb	r2, r3
    544c:	003b      	movs	r3, r7
    544e:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= (!port_pin_get_input_level(PIN_PA13) << 1); // Middle Click
    5450:	200d      	movs	r0, #13
    5452:	4b1c      	ldr	r3, [pc, #112]	; (54c4 <main+0x21c>)
    5454:	4798      	blx	r3
    5456:	0003      	movs	r3, r0
    5458:	001a      	movs	r2, r3
    545a:	2301      	movs	r3, #1
    545c:	4053      	eors	r3, r2
    545e:	b2db      	uxtb	r3, r3
    5460:	0059      	lsls	r1, r3, #1
    5462:	003b      	movs	r3, r7
    5464:	2202      	movs	r2, #2
    5466:	569a      	ldrsb	r2, [r3, r2]
    5468:	b24b      	sxtb	r3, r1
    546a:	4313      	orrs	r3, r2
    546c:	b25a      	sxtb	r2, r3
    546e:	003b      	movs	r3, r7
    5470:	709a      	strb	r2, [r3, #2]
			sendbuffer[2] |= laserState;								// Laser State
    5472:	003b      	movs	r3, r7
    5474:	2202      	movs	r2, #2
    5476:	569a      	ldrsb	r2, [r3, r2]
    5478:	4b15      	ldr	r3, [pc, #84]	; (54d0 <main+0x228>)
    547a:	781b      	ldrb	r3, [r3, #0]
    547c:	b25b      	sxtb	r3, r3
    547e:	4313      	orrs	r3, r2
    5480:	b25a      	sxtb	r2, r3
    5482:	003b      	movs	r3, r7
    5484:	709a      	strb	r2, [r3, #2]

			RFM_send(receivingNode, sendbuffer, sendlength, false);
    5486:	69bb      	ldr	r3, [r7, #24]
    5488:	b2d8      	uxtb	r0, r3
    548a:	697b      	ldr	r3, [r7, #20]
    548c:	b2da      	uxtb	r2, r3
    548e:	0039      	movs	r1, r7
    5490:	2300      	movs	r3, #0
    5492:	4c16      	ldr	r4, [pc, #88]	; (54ec <main+0x244>)
    5494:	47a0      	blx	r4
		}
	}
    5496:	e728      	b.n	52ea <main+0x42>
    5498:	00003d05 	.word	0x00003d05
    549c:	0000510d 	.word	0x0000510d
    54a0:	000051fd 	.word	0x000051fd
    54a4:	00004631 	.word	0x00004631
    54a8:	00004579 	.word	0x00004579
    54ac:	00005880 	.word	0x00005880
    54b0:	00004e8d 	.word	0x00004e8d
    54b4:	00000bbd 	.word	0x00000bbd
    54b8:	00005565 	.word	0x00005565
    54bc:	0000ffff 	.word	0x0000ffff
    54c0:	000054f1 	.word	0x000054f1
    54c4:	00003ee1 	.word	0x00003ee1
    54c8:	20000062 	.word	0x20000062
    54cc:	20000063 	.word	0x20000063
    54d0:	20000064 	.word	0x20000064
    54d4:	00003f25 	.word	0x00003f25
    54d8:	00000c09 	.word	0x00000c09
    54dc:	00000d65 	.word	0x00000d65
    54e0:	00004e31 	.word	0x00004e31
    54e4:	200000fa 	.word	0x200000fa
    54e8:	20000164 	.word	0x20000164
    54ec:	00004b21 	.word	0x00004b21

000054f0 <setTrackBallRGBW>:
}

void setTrackBallRGBW(uint16_t red, uint16_t green, uint16_t blue, uint16_t white)
{	
    54f0:	b5b0      	push	{r4, r5, r7, lr}
    54f2:	b082      	sub	sp, #8
    54f4:	af00      	add	r7, sp, #0
    54f6:	0005      	movs	r5, r0
    54f8:	000c      	movs	r4, r1
    54fa:	0010      	movs	r0, r2
    54fc:	0019      	movs	r1, r3
    54fe:	1dbb      	adds	r3, r7, #6
    5500:	1c2a      	adds	r2, r5, #0
    5502:	801a      	strh	r2, [r3, #0]
    5504:	1d3b      	adds	r3, r7, #4
    5506:	1c22      	adds	r2, r4, #0
    5508:	801a      	strh	r2, [r3, #0]
    550a:	1cbb      	adds	r3, r7, #2
    550c:	1c02      	adds	r2, r0, #0
    550e:	801a      	strh	r2, [r3, #0]
    5510:	003b      	movs	r3, r7
    5512:	1c0a      	adds	r2, r1, #0
    5514:	801a      	strh	r2, [r3, #0]
	/* WHITE */
	tcc_set_compare_value(&tcc0, (enum tcc_match_capture_channel) (0), white);
    5516:	003b      	movs	r3, r7
    5518:	881a      	ldrh	r2, [r3, #0]
    551a:	4b0f      	ldr	r3, [pc, #60]	; (5558 <setTrackBallRGBW+0x68>)
    551c:	2100      	movs	r1, #0
    551e:	0018      	movs	r0, r3
    5520:	4b0e      	ldr	r3, [pc, #56]	; (555c <setTrackBallRGBW+0x6c>)
    5522:	4798      	blx	r3
	/* GREEN */
	tcc_set_compare_value(&tcc0, (enum tcc_match_capture_channel) (3), green);
    5524:	1d3b      	adds	r3, r7, #4
    5526:	881a      	ldrh	r2, [r3, #0]
    5528:	4b0b      	ldr	r3, [pc, #44]	; (5558 <setTrackBallRGBW+0x68>)
    552a:	2103      	movs	r1, #3
    552c:	0018      	movs	r0, r3
    552e:	4b0b      	ldr	r3, [pc, #44]	; (555c <setTrackBallRGBW+0x6c>)
    5530:	4798      	blx	r3
	/* BLUE */
	tcc_set_compare_value(&tcc1, (enum tcc_match_capture_channel) (0), blue);
    5532:	1cbb      	adds	r3, r7, #2
    5534:	881a      	ldrh	r2, [r3, #0]
    5536:	4b0a      	ldr	r3, [pc, #40]	; (5560 <setTrackBallRGBW+0x70>)
    5538:	2100      	movs	r1, #0
    553a:	0018      	movs	r0, r3
    553c:	4b07      	ldr	r3, [pc, #28]	; (555c <setTrackBallRGBW+0x6c>)
    553e:	4798      	blx	r3
	/* RED */
	tcc_set_compare_value(&tcc1, (enum tcc_match_capture_channel) (1), red);
    5540:	1dbb      	adds	r3, r7, #6
    5542:	881a      	ldrh	r2, [r3, #0]
    5544:	4b06      	ldr	r3, [pc, #24]	; (5560 <setTrackBallRGBW+0x70>)
    5546:	2101      	movs	r1, #1
    5548:	0018      	movs	r0, r3
    554a:	4b04      	ldr	r3, [pc, #16]	; (555c <setTrackBallRGBW+0x6c>)
    554c:	4798      	blx	r3
} 
    554e:	46c0      	nop			; (mov r8, r8)
    5550:	46bd      	mov	sp, r7
    5552:	b002      	add	sp, #8
    5554:	bdb0      	pop	{r4, r5, r7, pc}
    5556:	46c0      	nop			; (mov r8, r8)
    5558:	20000118 	.word	0x20000118
    555c:	00001bc5 	.word	0x00001bc5
    5560:	20000258 	.word	0x20000258

00005564 <ColorCycle>:

void ColorCycle(void)
{
    5564:	b5b0      	push	{r4, r5, r7, lr}
    5566:	af00      	add	r7, sp, #0
	static int color = 0;
	static int speed = 100;
	static int index = 0;
	if(index == 0)
    5568:	4b27      	ldr	r3, [pc, #156]	; (5608 <ColorCycle+0xa4>)
    556a:	681b      	ldr	r3, [r3, #0]
    556c:	2b00      	cmp	r3, #0
    556e:	d10c      	bne.n	558a <ColorCycle+0x26>
	{
		setTrackBallRGBW(0xFFFF - color,color,0x0,0x0);
    5570:	4b26      	ldr	r3, [pc, #152]	; (560c <ColorCycle+0xa8>)
    5572:	681b      	ldr	r3, [r3, #0]
    5574:	b29b      	uxth	r3, r3
    5576:	43db      	mvns	r3, r3
    5578:	b298      	uxth	r0, r3
    557a:	4b24      	ldr	r3, [pc, #144]	; (560c <ColorCycle+0xa8>)
    557c:	681b      	ldr	r3, [r3, #0]
    557e:	b299      	uxth	r1, r3
    5580:	2300      	movs	r3, #0
    5582:	2200      	movs	r2, #0
    5584:	4c22      	ldr	r4, [pc, #136]	; (5610 <ColorCycle+0xac>)
    5586:	47a0      	blx	r4
    5588:	e020      	b.n	55cc <ColorCycle+0x68>
	}
	else if(index == 1)
    558a:	4b1f      	ldr	r3, [pc, #124]	; (5608 <ColorCycle+0xa4>)
    558c:	681b      	ldr	r3, [r3, #0]
    558e:	2b01      	cmp	r3, #1
    5590:	d10c      	bne.n	55ac <ColorCycle+0x48>
	{
		setTrackBallRGBW(0x0,0xFFFF - color,color,0x0);
    5592:	4b1e      	ldr	r3, [pc, #120]	; (560c <ColorCycle+0xa8>)
    5594:	681b      	ldr	r3, [r3, #0]
    5596:	b29b      	uxth	r3, r3
    5598:	43db      	mvns	r3, r3
    559a:	b299      	uxth	r1, r3
    559c:	4b1b      	ldr	r3, [pc, #108]	; (560c <ColorCycle+0xa8>)
    559e:	681b      	ldr	r3, [r3, #0]
    55a0:	b29a      	uxth	r2, r3
    55a2:	2300      	movs	r3, #0
    55a4:	2000      	movs	r0, #0
    55a6:	4c1a      	ldr	r4, [pc, #104]	; (5610 <ColorCycle+0xac>)
    55a8:	47a0      	blx	r4
    55aa:	e00f      	b.n	55cc <ColorCycle+0x68>
	}
	else if(index == 2)
    55ac:	4b16      	ldr	r3, [pc, #88]	; (5608 <ColorCycle+0xa4>)
    55ae:	681b      	ldr	r3, [r3, #0]
    55b0:	2b02      	cmp	r3, #2
    55b2:	d10b      	bne.n	55cc <ColorCycle+0x68>
	{
		setTrackBallRGBW(color,0x0,0xFFFF - color,0x0);
    55b4:	4b15      	ldr	r3, [pc, #84]	; (560c <ColorCycle+0xa8>)
    55b6:	681b      	ldr	r3, [r3, #0]
    55b8:	b298      	uxth	r0, r3
    55ba:	4b14      	ldr	r3, [pc, #80]	; (560c <ColorCycle+0xa8>)
    55bc:	681b      	ldr	r3, [r3, #0]
    55be:	b29b      	uxth	r3, r3
    55c0:	43db      	mvns	r3, r3
    55c2:	b29a      	uxth	r2, r3
    55c4:	2300      	movs	r3, #0
    55c6:	2100      	movs	r1, #0
    55c8:	4c11      	ldr	r4, [pc, #68]	; (5610 <ColorCycle+0xac>)
    55ca:	47a0      	blx	r4
	}
	
	color += speed;
    55cc:	4b0f      	ldr	r3, [pc, #60]	; (560c <ColorCycle+0xa8>)
    55ce:	681a      	ldr	r2, [r3, #0]
    55d0:	4b10      	ldr	r3, [pc, #64]	; (5614 <ColorCycle+0xb0>)
    55d2:	681b      	ldr	r3, [r3, #0]
    55d4:	18d2      	adds	r2, r2, r3
    55d6:	4b0d      	ldr	r3, [pc, #52]	; (560c <ColorCycle+0xa8>)
    55d8:	601a      	str	r2, [r3, #0]
	if(color >= 0xFFFF)
    55da:	4b0c      	ldr	r3, [pc, #48]	; (560c <ColorCycle+0xa8>)
    55dc:	681b      	ldr	r3, [r3, #0]
    55de:	4a0e      	ldr	r2, [pc, #56]	; (5618 <ColorCycle+0xb4>)
    55e0:	4293      	cmp	r3, r2
    55e2:	dd0e      	ble.n	5602 <ColorCycle+0x9e>
	{
		color = 0;
    55e4:	4b09      	ldr	r3, [pc, #36]	; (560c <ColorCycle+0xa8>)
    55e6:	2200      	movs	r2, #0
    55e8:	601a      	str	r2, [r3, #0]
		index++;
    55ea:	4b07      	ldr	r3, [pc, #28]	; (5608 <ColorCycle+0xa4>)
    55ec:	681b      	ldr	r3, [r3, #0]
    55ee:	1c5a      	adds	r2, r3, #1
    55f0:	4b05      	ldr	r3, [pc, #20]	; (5608 <ColorCycle+0xa4>)
    55f2:	601a      	str	r2, [r3, #0]
		if(index > 2)
    55f4:	4b04      	ldr	r3, [pc, #16]	; (5608 <ColorCycle+0xa4>)
    55f6:	681b      	ldr	r3, [r3, #0]
    55f8:	2b02      	cmp	r3, #2
    55fa:	dd02      	ble.n	5602 <ColorCycle+0x9e>
		index = 0;
    55fc:	4b02      	ldr	r3, [pc, #8]	; (5608 <ColorCycle+0xa4>)
    55fe:	2200      	movs	r2, #0
    5600:	601a      	str	r2, [r3, #0]
	}
    5602:	46c0      	nop			; (mov r8, r8)
    5604:	46bd      	mov	sp, r7
    5606:	bdb0      	pop	{r4, r5, r7, pc}
    5608:	20000068 	.word	0x20000068
    560c:	2000006c 	.word	0x2000006c
    5610:	000054f1 	.word	0x000054f1
    5614:	20000004 	.word	0x20000004
    5618:	0000fffe 	.word	0x0000fffe

0000561c <__aeabi_uidiv>:
    561c:	2200      	movs	r2, #0
    561e:	0843      	lsrs	r3, r0, #1
    5620:	428b      	cmp	r3, r1
    5622:	d374      	bcc.n	570e <__aeabi_uidiv+0xf2>
    5624:	0903      	lsrs	r3, r0, #4
    5626:	428b      	cmp	r3, r1
    5628:	d35f      	bcc.n	56ea <__aeabi_uidiv+0xce>
    562a:	0a03      	lsrs	r3, r0, #8
    562c:	428b      	cmp	r3, r1
    562e:	d344      	bcc.n	56ba <__aeabi_uidiv+0x9e>
    5630:	0b03      	lsrs	r3, r0, #12
    5632:	428b      	cmp	r3, r1
    5634:	d328      	bcc.n	5688 <__aeabi_uidiv+0x6c>
    5636:	0c03      	lsrs	r3, r0, #16
    5638:	428b      	cmp	r3, r1
    563a:	d30d      	bcc.n	5658 <__aeabi_uidiv+0x3c>
    563c:	22ff      	movs	r2, #255	; 0xff
    563e:	0209      	lsls	r1, r1, #8
    5640:	ba12      	rev	r2, r2
    5642:	0c03      	lsrs	r3, r0, #16
    5644:	428b      	cmp	r3, r1
    5646:	d302      	bcc.n	564e <__aeabi_uidiv+0x32>
    5648:	1212      	asrs	r2, r2, #8
    564a:	0209      	lsls	r1, r1, #8
    564c:	d065      	beq.n	571a <__aeabi_uidiv+0xfe>
    564e:	0b03      	lsrs	r3, r0, #12
    5650:	428b      	cmp	r3, r1
    5652:	d319      	bcc.n	5688 <__aeabi_uidiv+0x6c>
    5654:	e000      	b.n	5658 <__aeabi_uidiv+0x3c>
    5656:	0a09      	lsrs	r1, r1, #8
    5658:	0bc3      	lsrs	r3, r0, #15
    565a:	428b      	cmp	r3, r1
    565c:	d301      	bcc.n	5662 <__aeabi_uidiv+0x46>
    565e:	03cb      	lsls	r3, r1, #15
    5660:	1ac0      	subs	r0, r0, r3
    5662:	4152      	adcs	r2, r2
    5664:	0b83      	lsrs	r3, r0, #14
    5666:	428b      	cmp	r3, r1
    5668:	d301      	bcc.n	566e <__aeabi_uidiv+0x52>
    566a:	038b      	lsls	r3, r1, #14
    566c:	1ac0      	subs	r0, r0, r3
    566e:	4152      	adcs	r2, r2
    5670:	0b43      	lsrs	r3, r0, #13
    5672:	428b      	cmp	r3, r1
    5674:	d301      	bcc.n	567a <__aeabi_uidiv+0x5e>
    5676:	034b      	lsls	r3, r1, #13
    5678:	1ac0      	subs	r0, r0, r3
    567a:	4152      	adcs	r2, r2
    567c:	0b03      	lsrs	r3, r0, #12
    567e:	428b      	cmp	r3, r1
    5680:	d301      	bcc.n	5686 <__aeabi_uidiv+0x6a>
    5682:	030b      	lsls	r3, r1, #12
    5684:	1ac0      	subs	r0, r0, r3
    5686:	4152      	adcs	r2, r2
    5688:	0ac3      	lsrs	r3, r0, #11
    568a:	428b      	cmp	r3, r1
    568c:	d301      	bcc.n	5692 <__aeabi_uidiv+0x76>
    568e:	02cb      	lsls	r3, r1, #11
    5690:	1ac0      	subs	r0, r0, r3
    5692:	4152      	adcs	r2, r2
    5694:	0a83      	lsrs	r3, r0, #10
    5696:	428b      	cmp	r3, r1
    5698:	d301      	bcc.n	569e <__aeabi_uidiv+0x82>
    569a:	028b      	lsls	r3, r1, #10
    569c:	1ac0      	subs	r0, r0, r3
    569e:	4152      	adcs	r2, r2
    56a0:	0a43      	lsrs	r3, r0, #9
    56a2:	428b      	cmp	r3, r1
    56a4:	d301      	bcc.n	56aa <__aeabi_uidiv+0x8e>
    56a6:	024b      	lsls	r3, r1, #9
    56a8:	1ac0      	subs	r0, r0, r3
    56aa:	4152      	adcs	r2, r2
    56ac:	0a03      	lsrs	r3, r0, #8
    56ae:	428b      	cmp	r3, r1
    56b0:	d301      	bcc.n	56b6 <__aeabi_uidiv+0x9a>
    56b2:	020b      	lsls	r3, r1, #8
    56b4:	1ac0      	subs	r0, r0, r3
    56b6:	4152      	adcs	r2, r2
    56b8:	d2cd      	bcs.n	5656 <__aeabi_uidiv+0x3a>
    56ba:	09c3      	lsrs	r3, r0, #7
    56bc:	428b      	cmp	r3, r1
    56be:	d301      	bcc.n	56c4 <__aeabi_uidiv+0xa8>
    56c0:	01cb      	lsls	r3, r1, #7
    56c2:	1ac0      	subs	r0, r0, r3
    56c4:	4152      	adcs	r2, r2
    56c6:	0983      	lsrs	r3, r0, #6
    56c8:	428b      	cmp	r3, r1
    56ca:	d301      	bcc.n	56d0 <__aeabi_uidiv+0xb4>
    56cc:	018b      	lsls	r3, r1, #6
    56ce:	1ac0      	subs	r0, r0, r3
    56d0:	4152      	adcs	r2, r2
    56d2:	0943      	lsrs	r3, r0, #5
    56d4:	428b      	cmp	r3, r1
    56d6:	d301      	bcc.n	56dc <__aeabi_uidiv+0xc0>
    56d8:	014b      	lsls	r3, r1, #5
    56da:	1ac0      	subs	r0, r0, r3
    56dc:	4152      	adcs	r2, r2
    56de:	0903      	lsrs	r3, r0, #4
    56e0:	428b      	cmp	r3, r1
    56e2:	d301      	bcc.n	56e8 <__aeabi_uidiv+0xcc>
    56e4:	010b      	lsls	r3, r1, #4
    56e6:	1ac0      	subs	r0, r0, r3
    56e8:	4152      	adcs	r2, r2
    56ea:	08c3      	lsrs	r3, r0, #3
    56ec:	428b      	cmp	r3, r1
    56ee:	d301      	bcc.n	56f4 <__aeabi_uidiv+0xd8>
    56f0:	00cb      	lsls	r3, r1, #3
    56f2:	1ac0      	subs	r0, r0, r3
    56f4:	4152      	adcs	r2, r2
    56f6:	0883      	lsrs	r3, r0, #2
    56f8:	428b      	cmp	r3, r1
    56fa:	d301      	bcc.n	5700 <__aeabi_uidiv+0xe4>
    56fc:	008b      	lsls	r3, r1, #2
    56fe:	1ac0      	subs	r0, r0, r3
    5700:	4152      	adcs	r2, r2
    5702:	0843      	lsrs	r3, r0, #1
    5704:	428b      	cmp	r3, r1
    5706:	d301      	bcc.n	570c <__aeabi_uidiv+0xf0>
    5708:	004b      	lsls	r3, r1, #1
    570a:	1ac0      	subs	r0, r0, r3
    570c:	4152      	adcs	r2, r2
    570e:	1a41      	subs	r1, r0, r1
    5710:	d200      	bcs.n	5714 <__aeabi_uidiv+0xf8>
    5712:	4601      	mov	r1, r0
    5714:	4152      	adcs	r2, r2
    5716:	4610      	mov	r0, r2
    5718:	4770      	bx	lr
    571a:	e7ff      	b.n	571c <__aeabi_uidiv+0x100>
    571c:	b501      	push	{r0, lr}
    571e:	2000      	movs	r0, #0
    5720:	f000 f806 	bl	5730 <__aeabi_idiv0>
    5724:	bd02      	pop	{r1, pc}
    5726:	46c0      	nop			; (mov r8, r8)

00005728 <__aeabi_uidivmod>:
    5728:	2900      	cmp	r1, #0
    572a:	d0f7      	beq.n	571c <__aeabi_uidiv+0x100>
    572c:	e776      	b.n	561c <__aeabi_uidiv>
    572e:	4770      	bx	lr

00005730 <__aeabi_idiv0>:
    5730:	4770      	bx	lr
    5732:	46c0      	nop			; (mov r8, r8)

00005734 <__libc_init_array>:
    5734:	4b0e      	ldr	r3, [pc, #56]	; (5770 <__libc_init_array+0x3c>)
    5736:	b570      	push	{r4, r5, r6, lr}
    5738:	2500      	movs	r5, #0
    573a:	001e      	movs	r6, r3
    573c:	4c0d      	ldr	r4, [pc, #52]	; (5774 <__libc_init_array+0x40>)
    573e:	1ae4      	subs	r4, r4, r3
    5740:	10a4      	asrs	r4, r4, #2
    5742:	42a5      	cmp	r5, r4
    5744:	d004      	beq.n	5750 <__libc_init_array+0x1c>
    5746:	00ab      	lsls	r3, r5, #2
    5748:	58f3      	ldr	r3, [r6, r3]
    574a:	4798      	blx	r3
    574c:	3501      	adds	r5, #1
    574e:	e7f8      	b.n	5742 <__libc_init_array+0xe>
    5750:	f000 f8a0 	bl	5894 <_init>
    5754:	4b08      	ldr	r3, [pc, #32]	; (5778 <__libc_init_array+0x44>)
    5756:	2500      	movs	r5, #0
    5758:	001e      	movs	r6, r3
    575a:	4c08      	ldr	r4, [pc, #32]	; (577c <__libc_init_array+0x48>)
    575c:	1ae4      	subs	r4, r4, r3
    575e:	10a4      	asrs	r4, r4, #2
    5760:	42a5      	cmp	r5, r4
    5762:	d004      	beq.n	576e <__libc_init_array+0x3a>
    5764:	00ab      	lsls	r3, r5, #2
    5766:	58f3      	ldr	r3, [r6, r3]
    5768:	4798      	blx	r3
    576a:	3501      	adds	r5, #1
    576c:	e7f8      	b.n	5760 <__libc_init_array+0x2c>
    576e:	bd70      	pop	{r4, r5, r6, pc}
    5770:	000058a0 	.word	0x000058a0
    5774:	000058a0 	.word	0x000058a0
    5778:	000058a0 	.word	0x000058a0
    577c:	000058a4 	.word	0x000058a4

00005780 <memcpy>:
    5780:	2300      	movs	r3, #0
    5782:	b510      	push	{r4, lr}
    5784:	429a      	cmp	r2, r3
    5786:	d003      	beq.n	5790 <memcpy+0x10>
    5788:	5ccc      	ldrb	r4, [r1, r3]
    578a:	54c4      	strb	r4, [r0, r3]
    578c:	3301      	adds	r3, #1
    578e:	e7f9      	b.n	5784 <memcpy+0x4>
    5790:	bd10      	pop	{r4, pc}

00005792 <memset>:
    5792:	0003      	movs	r3, r0
    5794:	1882      	adds	r2, r0, r2
    5796:	4293      	cmp	r3, r2
    5798:	d002      	beq.n	57a0 <memset+0xe>
    579a:	7019      	strb	r1, [r3, #0]
    579c:	3301      	adds	r3, #1
    579e:	e7fa      	b.n	5796 <memset+0x4>
    57a0:	4770      	bx	lr
	...

000057a4 <tcc_modules>:
    57a4:	2000 4200 2400 4200 2800 4200               . .B.$.B.(.B

000057b0 <_tcc_gclk_ids>:
    57b0:	1a1a 001b                                   ....

000057b4 <_tcc_apbcmasks>:
    57b4:	0100 0000 0200 0000 0400 0000               ............

000057c0 <_tcc_maxs>:
    57c0:	ffff 00ff ffff 00ff ffff 0000               ............

000057cc <_tcc_cc_nums>:
    57cc:	0204 0002                                   ....

000057d0 <_tcc_ow_nums>:
    57d0:	0408 0002                                   ....

000057d4 <_tcc_intflag>:
    57d4:	0001 0000 0002 0000 0004 0000 0008 0000     ................
    57e4:	1000 0000 2000 0000 4000 0000 8000 0000     ..... ...@......
    57f4:	0000 0001 0000 0002 0000 0004 0000 0008     ................
    5804:	0800 4200 0c00 4200 1000 4200 1400 4200     ...B...B...B...B
    5814:	1800 4200 1c00 4200 0a09 0c0b 0e0d 0000     ...B...B........
    5824:	324e 0000 32c6 0000 32c6 0000 326c 0000     N2...2...2..l2..
    5834:	3266 0000 3272 0000 3254 0000 3278 0000     f2..r2..T2..x2..
    5844:	32ac 0000 346c 0000 34bc 0000 34bc 0000     .2..l4...4...4..
    5854:	34b8 0000 345e 0000 347e 0000 344e 0000     .4..^4..~4..N4..
    5864:	3490 0000 34a2 0000 4a6e 0000 4a4c 0000     .4...4..nJ..LJ..
    5874:	4a2a 0000 49f8 0000 49c6 0000 4f54 5350     *J...I...I..TOPS
    5884:	4345 4552 5054 5341 5753 4452 0000 0000     ECRETPASSWRD....

00005894 <_init>:
    5894:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    5896:	46c0      	nop			; (mov r8, r8)
    5898:	bcf8      	pop	{r3, r4, r5, r6, r7}
    589a:	bc08      	pop	{r3}
    589c:	469e      	mov	lr, r3
    589e:	4770      	bx	lr

000058a0 <__init_array_start>:
    58a0:	000000dd 	.word	0x000000dd

000058a4 <_fini>:
    58a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    58a6:	46c0      	nop			; (mov r8, r8)
    58a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
    58aa:	bc08      	pop	{r3}
    58ac:	469e      	mov	lr, r3
    58ae:	4770      	bx	lr

000058b0 <__fini_array_start>:
    58b0:	000000b5 	.word	0x000000b5
